export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<
  T extends { [key: string]: unknown },
  K extends keyof T,
> = { [_ in K]?: never };
export type Incremental<T> =
  | T
  | {
      [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never;
    };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
  bigint: { input: any; output: any };
  bpchar: { input: any; output: any };
  enum_Connectors_errorCode: { input: any; output: any };
  enum_Connectors_status: { input: any; output: any };
  enum_InstalledCertificates_certificateType: { input: any; output: any };
  geography: { input: any; output: any };
  geometry: { input: any; output: any };
  json: { input: any; output: any };
  jsonb: { input: any; output: any };
  numeric: { input: any; output: any };
  timestamptz: { input: any; output: any };
};

/** columns and relationships of "AsyncJobStatuses" */
export type AsyncJobStatuses = {
  /** An object relationship */
  TenantPartner: TenantPartners;
  createdAt: Scalars['timestamptz']['output'];
  finishedAt?: Maybe<Scalars['timestamptz']['output']>;
  isFailed: Scalars['Boolean']['output'];
  jobId: Scalars['String']['output'];
  jobName: Scalars['String']['output'];
  paginationParams: Scalars['json']['output'];
  stopScheduled: Scalars['Boolean']['output'];
  stoppedAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantPartnerId: Scalars['Int']['output'];
  totalObjects?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "AsyncJobStatuses" */
export type AsyncJobStatusesPaginationParamsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate = {
  aggregate?: Maybe<AsyncJobStatuses_Aggregate_Fields>;
  nodes: Array<AsyncJobStatuses>;
};

export type AsyncJobStatuses_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<AsyncJobStatuses_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<AsyncJobStatuses_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<AsyncJobStatuses_Aggregate_Bool_Exp_Count>;
};

export type AsyncJobStatuses_Aggregate_Bool_Exp_Bool_And = {
  arguments: AsyncJobStatuses_Select_Column_AsyncJobStatuses_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type AsyncJobStatuses_Aggregate_Bool_Exp_Bool_Or = {
  arguments: AsyncJobStatuses_Select_Column_AsyncJobStatuses_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type AsyncJobStatuses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate_Fields = {
  avg?: Maybe<AsyncJobStatuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AsyncJobStatuses_Max_Fields>;
  min?: Maybe<AsyncJobStatuses_Min_Fields>;
  stddev?: Maybe<AsyncJobStatuses_Stddev_Fields>;
  stddev_pop?: Maybe<AsyncJobStatuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AsyncJobStatuses_Stddev_Samp_Fields>;
  sum?: Maybe<AsyncJobStatuses_Sum_Fields>;
  var_pop?: Maybe<AsyncJobStatuses_Var_Pop_Fields>;
  var_samp?: Maybe<AsyncJobStatuses_Var_Samp_Fields>;
  variance?: Maybe<AsyncJobStatuses_Variance_Fields>;
};

/** aggregate fields of "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate_Order_By = {
  avg?: InputMaybe<AsyncJobStatuses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<AsyncJobStatuses_Max_Order_By>;
  min?: InputMaybe<AsyncJobStatuses_Min_Order_By>;
  stddev?: InputMaybe<AsyncJobStatuses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<AsyncJobStatuses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<AsyncJobStatuses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<AsyncJobStatuses_Sum_Order_By>;
  var_pop?: InputMaybe<AsyncJobStatuses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<AsyncJobStatuses_Var_Samp_Order_By>;
  variance?: InputMaybe<AsyncJobStatuses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "AsyncJobStatuses" */
export type AsyncJobStatuses_Arr_Rel_Insert_Input = {
  data: Array<AsyncJobStatuses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<AsyncJobStatuses_On_Conflict>;
};

/** aggregate avg on columns */
export type AsyncJobStatuses_Avg_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Avg_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "AsyncJobStatuses". All fields are combined with a logical 'AND'. */
export type AsyncJobStatuses_Bool_Exp = {
  TenantPartner?: InputMaybe<TenantPartners_Bool_Exp>;
  _and?: InputMaybe<Array<AsyncJobStatuses_Bool_Exp>>;
  _not?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<AsyncJobStatuses_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  finishedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  isFailed?: InputMaybe<Boolean_Comparison_Exp>;
  jobId?: InputMaybe<String_Comparison_Exp>;
  jobName?: InputMaybe<String_Comparison_Exp>;
  paginationParams?: InputMaybe<Json_Comparison_Exp>;
  stopScheduled?: InputMaybe<Boolean_Comparison_Exp>;
  stoppedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  tenantPartnerId?: InputMaybe<Int_Comparison_Exp>;
  totalObjects?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "AsyncJobStatuses" */
export type AsyncJobStatuses_Constraint =
  /** unique or primary key constraint on columns "jobId" */
  'AsyncJobStatuses_pkey';

/** input type for incrementing numeric columns in table "AsyncJobStatuses" */
export type AsyncJobStatuses_Inc_Input = {
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "AsyncJobStatuses" */
export type AsyncJobStatuses_Insert_Input = {
  TenantPartner?: InputMaybe<TenantPartners_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finishedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  isFailed?: InputMaybe<Scalars['Boolean']['input']>;
  jobId?: InputMaybe<Scalars['String']['input']>;
  jobName?: InputMaybe<Scalars['String']['input']>;
  paginationParams?: InputMaybe<Scalars['json']['input']>;
  stopScheduled?: InputMaybe<Scalars['Boolean']['input']>;
  stoppedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type AsyncJobStatuses_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  finishedAt?: Maybe<Scalars['timestamptz']['output']>;
  jobId?: Maybe<Scalars['String']['output']>;
  jobName?: Maybe<Scalars['String']['output']>;
  stoppedAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
  totalObjects?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  finishedAt?: InputMaybe<Order_By>;
  jobId?: InputMaybe<Order_By>;
  jobName?: InputMaybe<Order_By>;
  stoppedAt?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type AsyncJobStatuses_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  finishedAt?: Maybe<Scalars['timestamptz']['output']>;
  jobId?: Maybe<Scalars['String']['output']>;
  jobName?: Maybe<Scalars['String']['output']>;
  stoppedAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
  totalObjects?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  finishedAt?: InputMaybe<Order_By>;
  jobId?: InputMaybe<Order_By>;
  jobName?: InputMaybe<Order_By>;
  stoppedAt?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "AsyncJobStatuses" */
export type AsyncJobStatuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AsyncJobStatuses>;
};

/** on_conflict condition type for table "AsyncJobStatuses" */
export type AsyncJobStatuses_On_Conflict = {
  constraint: AsyncJobStatuses_Constraint;
  update_columns?: Array<AsyncJobStatuses_Update_Column>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "AsyncJobStatuses". */
export type AsyncJobStatuses_Order_By = {
  TenantPartner?: InputMaybe<TenantPartners_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  finishedAt?: InputMaybe<Order_By>;
  isFailed?: InputMaybe<Order_By>;
  jobId?: InputMaybe<Order_By>;
  jobName?: InputMaybe<Order_By>;
  paginationParams?: InputMaybe<Order_By>;
  stopScheduled?: InputMaybe<Order_By>;
  stoppedAt?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: AsyncJobStatuses */
export type AsyncJobStatuses_Pk_Columns_Input = {
  jobId: Scalars['String']['input'];
};

/** select columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'finishedAt'
  /** column name */
  | 'isFailed'
  /** column name */
  | 'jobId'
  /** column name */
  | 'jobName'
  /** column name */
  | 'paginationParams'
  /** column name */
  | 'stopScheduled'
  /** column name */
  | 'stoppedAt'
  /** column name */
  | 'tenantPartnerId'
  /** column name */
  | 'totalObjects'
  /** column name */
  | 'updatedAt';

/** select "AsyncJobStatuses_aggregate_bool_exp_bool_and_arguments_columns" columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Select_Column_AsyncJobStatuses_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  | 'isFailed'
  /** column name */
  | 'stopScheduled';

/** select "AsyncJobStatuses_aggregate_bool_exp_bool_or_arguments_columns" columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Select_Column_AsyncJobStatuses_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  | 'isFailed'
  /** column name */
  | 'stopScheduled';

/** input type for updating data in table "AsyncJobStatuses" */
export type AsyncJobStatuses_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finishedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  isFailed?: InputMaybe<Scalars['Boolean']['input']>;
  jobId?: InputMaybe<Scalars['String']['input']>;
  jobName?: InputMaybe<Scalars['String']['input']>;
  paginationParams?: InputMaybe<Scalars['json']['input']>;
  stopScheduled?: InputMaybe<Scalars['Boolean']['input']>;
  stoppedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type AsyncJobStatuses_Stddev_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Stddev_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type AsyncJobStatuses_Stddev_Pop_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Stddev_Pop_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type AsyncJobStatuses_Stddev_Samp_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Stddev_Samp_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "AsyncJobStatuses" */
export type AsyncJobStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AsyncJobStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AsyncJobStatuses_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finishedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  isFailed?: InputMaybe<Scalars['Boolean']['input']>;
  jobId?: InputMaybe<Scalars['String']['input']>;
  jobName?: InputMaybe<Scalars['String']['input']>;
  paginationParams?: InputMaybe<Scalars['json']['input']>;
  stopScheduled?: InputMaybe<Scalars['Boolean']['input']>;
  stoppedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type AsyncJobStatuses_Sum_Fields = {
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
  totalObjects?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Sum_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** update columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'finishedAt'
  /** column name */
  | 'isFailed'
  /** column name */
  | 'jobId'
  /** column name */
  | 'jobName'
  /** column name */
  | 'paginationParams'
  /** column name */
  | 'stopScheduled'
  /** column name */
  | 'stoppedAt'
  /** column name */
  | 'tenantPartnerId'
  /** column name */
  | 'totalObjects'
  /** column name */
  | 'updatedAt';

export type AsyncJobStatuses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<AsyncJobStatuses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AsyncJobStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: AsyncJobStatuses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type AsyncJobStatuses_Var_Pop_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Var_Pop_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type AsyncJobStatuses_Var_Samp_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Var_Samp_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type AsyncJobStatuses_Variance_Fields = {
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Variance_Order_By = {
  tenantPartnerId?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
};

/** columns and relationships of "Authorizations" */
export type Authorizations = {
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** An object relationship */
  GroupAuthorization?: Maybe<Authorizations>;
  /** An array relationship */
  LocalListAuthorizations: Array<LocalListAuthorizations>;
  /** An aggregate relationship */
  LocalListAuthorizations_aggregate: LocalListAuthorizations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  TenantPartner?: Maybe<TenantPartners>;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  additionalInfo?: Maybe<Scalars['jsonb']['output']>;
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  cacheExpiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  concurrentTransaction?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  customData?: Maybe<Scalars['jsonb']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  idToken: Scalars['String']['output'];
  idTokenType?: Maybe<Scalars['String']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  /** An array relationship */
  localListAuthorizationsByGroupauthorizationid: Array<LocalListAuthorizations>;
  /** An aggregate relationship */
  localListAuthorizationsByGroupauthorizationid_aggregate: LocalListAuthorizations_Aggregate;
  personalMessage?: Maybe<Scalars['json']['output']>;
  realTimeAuth: Scalars['String']['output'];
  realTimeAuthUrl?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsAdditionalInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsCustomDataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsLocalListAuthorizationsByGroupauthorizationidArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Authorizations" */
export type AuthorizationsLocalListAuthorizationsByGroupauthorizationid_AggregateArgs =
  {
    distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
    limit?: InputMaybe<Scalars['Int']['input']>;
    offset?: InputMaybe<Scalars['Int']['input']>;
    order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
    where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  };

/** columns and relationships of "Authorizations" */
export type AuthorizationsPersonalMessageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Authorizations" */
export type Authorizations_Aggregate = {
  aggregate?: Maybe<Authorizations_Aggregate_Fields>;
  nodes: Array<Authorizations>;
};

export type Authorizations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Authorizations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Authorizations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Authorizations_Aggregate_Bool_Exp_Count>;
};

export type Authorizations_Aggregate_Bool_Exp_Bool_And = {
  arguments: Authorizations_Select_Column_Authorizations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Authorizations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Authorizations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Authorizations_Select_Column_Authorizations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Authorizations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Authorizations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Authorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Authorizations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Authorizations" */
export type Authorizations_Aggregate_Fields = {
  avg?: Maybe<Authorizations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Authorizations_Max_Fields>;
  min?: Maybe<Authorizations_Min_Fields>;
  stddev?: Maybe<Authorizations_Stddev_Fields>;
  stddev_pop?: Maybe<Authorizations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Authorizations_Stddev_Samp_Fields>;
  sum?: Maybe<Authorizations_Sum_Fields>;
  var_pop?: Maybe<Authorizations_Var_Pop_Fields>;
  var_samp?: Maybe<Authorizations_Var_Samp_Fields>;
  variance?: Maybe<Authorizations_Variance_Fields>;
};

/** aggregate fields of "Authorizations" */
export type Authorizations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Authorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Authorizations" */
export type Authorizations_Aggregate_Order_By = {
  avg?: InputMaybe<Authorizations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Authorizations_Max_Order_By>;
  min?: InputMaybe<Authorizations_Min_Order_By>;
  stddev?: InputMaybe<Authorizations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Authorizations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Authorizations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Authorizations_Sum_Order_By>;
  var_pop?: InputMaybe<Authorizations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Authorizations_Var_Samp_Order_By>;
  variance?: InputMaybe<Authorizations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Authorizations_Append_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "Authorizations" */
export type Authorizations_Arr_Rel_Insert_Input = {
  data: Array<Authorizations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** aggregate avg on columns */
export type Authorizations_Avg_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Authorizations" */
export type Authorizations_Avg_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Authorizations". All fields are combined with a logical 'AND'. */
export type Authorizations_Bool_Exp = {
  Authorizations?: InputMaybe<Authorizations_Bool_Exp>;
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Bool_Exp>;
  GroupAuthorization?: InputMaybe<Authorizations_Bool_Exp>;
  LocalListAuthorizations?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  LocalListAuthorizations_aggregate?: InputMaybe<LocalListAuthorizations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  TenantPartner?: InputMaybe<TenantPartners_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Authorizations_Bool_Exp>>;
  _not?: InputMaybe<Authorizations_Bool_Exp>;
  _or?: InputMaybe<Array<Authorizations_Bool_Exp>>;
  additionalInfo?: InputMaybe<Jsonb_Comparison_Exp>;
  allowedConnectorTypes?: InputMaybe<String_Array_Comparison_Exp>;
  cacheExpiryDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  chargingPriority?: InputMaybe<Int_Comparison_Exp>;
  concurrentTransaction?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  customData?: InputMaybe<Jsonb_Comparison_Exp>;
  disallowedEvseIdPrefixes?: InputMaybe<String_Array_Comparison_Exp>;
  groupAuthorizationId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idToken?: InputMaybe<String_Comparison_Exp>;
  idTokenType?: InputMaybe<String_Comparison_Exp>;
  language1?: InputMaybe<String_Comparison_Exp>;
  language2?: InputMaybe<String_Comparison_Exp>;
  localListAuthorizationsByGroupauthorizationid?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  localListAuthorizationsByGroupauthorizationid_aggregate?: InputMaybe<LocalListAuthorizations_Aggregate_Bool_Exp>;
  personalMessage?: InputMaybe<Json_Comparison_Exp>;
  realTimeAuth?: InputMaybe<String_Comparison_Exp>;
  realTimeAuthUrl?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  tenantPartnerId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Authorizations" */
export type Authorizations_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Authorizations_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Authorizations_Delete_At_Path_Input = {
  additionalInfo?: InputMaybe<Array<Scalars['String']['input']>>;
  customData?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Authorizations_Delete_Elem_Input = {
  additionalInfo?: InputMaybe<Scalars['Int']['input']>;
  customData?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Authorizations_Delete_Key_Input = {
  additionalInfo?: InputMaybe<Scalars['String']['input']>;
  customData?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "Authorizations" */
export type Authorizations_Inc_Input = {
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Authorizations" */
export type Authorizations_Insert_Input = {
  Authorizations?: InputMaybe<Authorizations_Arr_Rel_Insert_Input>;
  GroupAuthorization?: InputMaybe<Authorizations_Obj_Rel_Insert_Input>;
  LocalListAuthorizations?: InputMaybe<LocalListAuthorizations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  TenantPartner?: InputMaybe<TenantPartners_Obj_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  cacheExpiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  concurrentTransaction?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  localListAuthorizationsByGroupauthorizationid?: InputMaybe<LocalListAuthorizations_Arr_Rel_Insert_Input>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  realTimeAuth?: InputMaybe<Scalars['String']['input']>;
  realTimeAuthUrl?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Authorizations_Max_Fields = {
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  cacheExpiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['String']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  realTimeAuth?: Maybe<Scalars['String']['output']>;
  realTimeAuthUrl?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Authorizations" */
export type Authorizations_Max_Order_By = {
  allowedConnectorTypes?: InputMaybe<Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  realTimeAuth?: InputMaybe<Order_By>;
  realTimeAuthUrl?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Authorizations_Min_Fields = {
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  cacheExpiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['String']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  realTimeAuth?: Maybe<Scalars['String']['output']>;
  realTimeAuthUrl?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Authorizations" */
export type Authorizations_Min_Order_By = {
  allowedConnectorTypes?: InputMaybe<Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  realTimeAuth?: InputMaybe<Order_By>;
  realTimeAuthUrl?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Authorizations" */
export type Authorizations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Authorizations>;
};

/** input type for inserting object relation for remote table "Authorizations" */
export type Authorizations_Obj_Rel_Insert_Input = {
  data: Authorizations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** on_conflict condition type for table "Authorizations" */
export type Authorizations_On_Conflict = {
  constraint: Authorizations_Constraint;
  update_columns?: Array<Authorizations_Update_Column>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** Ordering options when selecting data from "Authorizations". */
export type Authorizations_Order_By = {
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Order_By>;
  GroupAuthorization?: InputMaybe<Authorizations_Order_By>;
  LocalListAuthorizations_aggregate?: InputMaybe<LocalListAuthorizations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  TenantPartner?: InputMaybe<TenantPartners_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  additionalInfo?: InputMaybe<Order_By>;
  allowedConnectorTypes?: InputMaybe<Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  concurrentTransaction?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  customData?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  localListAuthorizationsByGroupauthorizationid_aggregate?: InputMaybe<LocalListAuthorizations_Aggregate_Order_By>;
  personalMessage?: InputMaybe<Order_By>;
  realTimeAuth?: InputMaybe<Order_By>;
  realTimeAuthUrl?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Authorizations */
export type Authorizations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Authorizations_Prepend_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "Authorizations" */
export type Authorizations_Select_Column =
  /** column name */
  | 'additionalInfo'
  /** column name */
  | 'allowedConnectorTypes'
  /** column name */
  | 'cacheExpiryDateTime'
  /** column name */
  | 'chargingPriority'
  /** column name */
  | 'concurrentTransaction'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'disallowedEvseIdPrefixes'
  /** column name */
  | 'groupAuthorizationId'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'language1'
  /** column name */
  | 'language2'
  /** column name */
  | 'personalMessage'
  /** column name */
  | 'realTimeAuth'
  /** column name */
  | 'realTimeAuthUrl'
  /** column name */
  | 'status'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'tenantPartnerId'
  /** column name */
  | 'updatedAt';

/** select "Authorizations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Authorizations" */
export type Authorizations_Select_Column_Authorizations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'concurrentTransaction';

/** select "Authorizations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Authorizations" */
export type Authorizations_Select_Column_Authorizations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'concurrentTransaction';

/** input type for updating data in table "Authorizations" */
export type Authorizations_Set_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  cacheExpiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  concurrentTransaction?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  realTimeAuth?: InputMaybe<Scalars['String']['input']>;
  realTimeAuthUrl?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Authorizations_Stddev_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Authorizations" */
export type Authorizations_Stddev_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Authorizations_Stddev_Pop_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Authorizations" */
export type Authorizations_Stddev_Pop_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Authorizations_Stddev_Samp_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Authorizations" */
export type Authorizations_Stddev_Samp_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Authorizations" */
export type Authorizations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Authorizations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Authorizations_Stream_Cursor_Value_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  cacheExpiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  concurrentTransaction?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  realTimeAuth?: InputMaybe<Scalars['String']['input']>;
  realTimeAuthUrl?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tenantPartnerId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Authorizations_Sum_Fields = {
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  tenantPartnerId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Authorizations" */
export type Authorizations_Sum_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** update columns of table "Authorizations" */
export type Authorizations_Update_Column =
  /** column name */
  | 'additionalInfo'
  /** column name */
  | 'allowedConnectorTypes'
  /** column name */
  | 'cacheExpiryDateTime'
  /** column name */
  | 'chargingPriority'
  /** column name */
  | 'concurrentTransaction'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'disallowedEvseIdPrefixes'
  /** column name */
  | 'groupAuthorizationId'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'language1'
  /** column name */
  | 'language2'
  /** column name */
  | 'personalMessage'
  /** column name */
  | 'realTimeAuth'
  /** column name */
  | 'realTimeAuthUrl'
  /** column name */
  | 'status'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'tenantPartnerId'
  /** column name */
  | 'updatedAt';

export type Authorizations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Authorizations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Authorizations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Authorizations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Authorizations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Authorizations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Authorizations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Authorizations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Authorizations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Authorizations_Var_Pop_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Authorizations" */
export type Authorizations_Var_Pop_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Authorizations_Var_Samp_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Authorizations" */
export type Authorizations_Var_Samp_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Authorizations_Variance_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  tenantPartnerId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Authorizations" */
export type Authorizations_Variance_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tenantPartnerId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

/** columns and relationships of "Boots" */
export type Boots = {
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  bootWithRejectedVariables?: Maybe<Scalars['Boolean']['output']>;
  changeConfigurationsOnPending?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  getBaseReportOnPending?: Maybe<Scalars['Boolean']['output']>;
  getConfigurationsOnPending?: Maybe<Scalars['Boolean']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  lastBootTime?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  statusInfo?: Maybe<Scalars['json']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  variablesRejectedOnLastBoot?: Maybe<Scalars['json']['output']>;
};

/** columns and relationships of "Boots" */
export type BootsVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Boots" */
export type BootsVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Boots" */
export type BootsStatusInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Boots" */
export type BootsVariablesRejectedOnLastBootArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Boots" */
export type Boots_Aggregate = {
  aggregate?: Maybe<Boots_Aggregate_Fields>;
  nodes: Array<Boots>;
};

export type Boots_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Boots_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Boots_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Boots_Aggregate_Bool_Exp_Count>;
};

export type Boots_Aggregate_Bool_Exp_Bool_And = {
  arguments: Boots_Select_Column_Boots_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Boots_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Boots_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Boots_Select_Column_Boots_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Boots_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Boots_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Boots_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Boots_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Boots" */
export type Boots_Aggregate_Fields = {
  avg?: Maybe<Boots_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Boots_Max_Fields>;
  min?: Maybe<Boots_Min_Fields>;
  stddev?: Maybe<Boots_Stddev_Fields>;
  stddev_pop?: Maybe<Boots_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Boots_Stddev_Samp_Fields>;
  sum?: Maybe<Boots_Sum_Fields>;
  var_pop?: Maybe<Boots_Var_Pop_Fields>;
  var_samp?: Maybe<Boots_Var_Samp_Fields>;
  variance?: Maybe<Boots_Variance_Fields>;
};

/** aggregate fields of "Boots" */
export type Boots_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Boots_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Boots" */
export type Boots_Aggregate_Order_By = {
  avg?: InputMaybe<Boots_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Boots_Max_Order_By>;
  min?: InputMaybe<Boots_Min_Order_By>;
  stddev?: InputMaybe<Boots_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Boots_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Boots_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Boots_Sum_Order_By>;
  var_pop?: InputMaybe<Boots_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Boots_Var_Samp_Order_By>;
  variance?: InputMaybe<Boots_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Boots" */
export type Boots_Arr_Rel_Insert_Input = {
  data: Array<Boots_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** aggregate avg on columns */
export type Boots_Avg_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Boots" */
export type Boots_Avg_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Boots". All fields are combined with a logical 'AND'. */
export type Boots_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Boots_Bool_Exp>>;
  _not?: InputMaybe<Boots_Bool_Exp>;
  _or?: InputMaybe<Array<Boots_Bool_Exp>>;
  bootRetryInterval?: InputMaybe<Int_Comparison_Exp>;
  bootWithRejectedVariables?: InputMaybe<Boolean_Comparison_Exp>;
  changeConfigurationsOnPending?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  getBaseReportOnPending?: InputMaybe<Boolean_Comparison_Exp>;
  getConfigurationsOnPending?: InputMaybe<Boolean_Comparison_Exp>;
  heartbeatInterval?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  lastBootTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  statusInfo?: InputMaybe<Json_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variablesRejectedOnLastBoot?: InputMaybe<Json_Comparison_Exp>;
};

/** unique or primary key constraints on table "Boots" */
export type Boots_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Boots_pkey';

/** input type for incrementing numeric columns in table "Boots" */
export type Boots_Inc_Input = {
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Boots" */
export type Boots_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  bootWithRejectedVariables?: InputMaybe<Scalars['Boolean']['input']>;
  changeConfigurationsOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  getBaseReportOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  getConfigurationsOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  lastBootTime?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variablesRejectedOnLastBoot?: InputMaybe<Scalars['json']['input']>;
};

/** aggregate max on columns */
export type Boots_Max_Fields = {
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  lastBootTime?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Boots" */
export type Boots_Max_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastBootTime?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Boots_Min_Fields = {
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  lastBootTime?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Boots" */
export type Boots_Min_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastBootTime?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Boots" */
export type Boots_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Boots>;
};

/** input type for inserting object relation for remote table "Boots" */
export type Boots_Obj_Rel_Insert_Input = {
  data: Boots_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** on_conflict condition type for table "Boots" */
export type Boots_On_Conflict = {
  constraint: Boots_Constraint;
  update_columns?: Array<Boots_Update_Column>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

/** Ordering options when selecting data from "Boots". */
export type Boots_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  bootRetryInterval?: InputMaybe<Order_By>;
  bootWithRejectedVariables?: InputMaybe<Order_By>;
  changeConfigurationsOnPending?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  getBaseReportOnPending?: InputMaybe<Order_By>;
  getConfigurationsOnPending?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastBootTime?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  statusInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variablesRejectedOnLastBoot?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Boots */
export type Boots_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** select columns of table "Boots" */
export type Boots_Select_Column =
  /** column name */
  | 'bootRetryInterval'
  /** column name */
  | 'bootWithRejectedVariables'
  /** column name */
  | 'changeConfigurationsOnPending'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'getBaseReportOnPending'
  /** column name */
  | 'getConfigurationsOnPending'
  /** column name */
  | 'heartbeatInterval'
  /** column name */
  | 'id'
  /** column name */
  | 'lastBootTime'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variablesRejectedOnLastBoot';

/** select "Boots_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Boots" */
export type Boots_Select_Column_Boots_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  | 'bootWithRejectedVariables'
  /** column name */
  | 'changeConfigurationsOnPending'
  /** column name */
  | 'getBaseReportOnPending'
  /** column name */
  | 'getConfigurationsOnPending';

/** select "Boots_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Boots" */
export type Boots_Select_Column_Boots_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  | 'bootWithRejectedVariables'
  /** column name */
  | 'changeConfigurationsOnPending'
  /** column name */
  | 'getBaseReportOnPending'
  /** column name */
  | 'getConfigurationsOnPending';

/** input type for updating data in table "Boots" */
export type Boots_Set_Input = {
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  bootWithRejectedVariables?: InputMaybe<Scalars['Boolean']['input']>;
  changeConfigurationsOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  getBaseReportOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  getConfigurationsOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  lastBootTime?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variablesRejectedOnLastBoot?: InputMaybe<Scalars['json']['input']>;
};

/** aggregate stddev on columns */
export type Boots_Stddev_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Boots" */
export type Boots_Stddev_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Boots_Stddev_Pop_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Boots" */
export type Boots_Stddev_Pop_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Boots_Stddev_Samp_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Boots" */
export type Boots_Stddev_Samp_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Boots" */
export type Boots_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Boots_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Boots_Stream_Cursor_Value_Input = {
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  bootWithRejectedVariables?: InputMaybe<Scalars['Boolean']['input']>;
  changeConfigurationsOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  getBaseReportOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  getConfigurationsOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  lastBootTime?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variablesRejectedOnLastBoot?: InputMaybe<Scalars['json']['input']>;
};

/** aggregate sum on columns */
export type Boots_Sum_Fields = {
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Boots" */
export type Boots_Sum_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Boots" */
export type Boots_Update_Column =
  /** column name */
  | 'bootRetryInterval'
  /** column name */
  | 'bootWithRejectedVariables'
  /** column name */
  | 'changeConfigurationsOnPending'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'getBaseReportOnPending'
  /** column name */
  | 'getConfigurationsOnPending'
  /** column name */
  | 'heartbeatInterval'
  /** column name */
  | 'id'
  /** column name */
  | 'lastBootTime'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variablesRejectedOnLastBoot';

export type Boots_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Boots_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Boots_Set_Input>;
  /** filter the rows which have to be updated */
  where: Boots_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Boots_Var_Pop_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Boots" */
export type Boots_Var_Pop_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Boots_Var_Samp_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Boots" */
export type Boots_Var_Samp_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Boots_Variance_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Boots" */
export type Boots_Variance_Order_By = {
  bootRetryInterval?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Certificates" */
export type Certificates = {
  /** An object relationship */
  Tenant: Tenants;
  certificateFileId?: Maybe<Scalars['String']['output']>;
  commonName?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  isCA?: Maybe<Scalars['Boolean']['output']>;
  issuerName?: Maybe<Scalars['String']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  privateKeyFileId?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  signatureAlgorithm?: Maybe<Scalars['String']['output']>;
  signedBy?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  validBefore?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "Certificates" */
export type Certificates_Aggregate = {
  aggregate?: Maybe<Certificates_Aggregate_Fields>;
  nodes: Array<Certificates>;
};

export type Certificates_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Certificates_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Certificates_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Certificates_Aggregate_Bool_Exp_Count>;
};

export type Certificates_Aggregate_Bool_Exp_Bool_And = {
  arguments: Certificates_Select_Column_Certificates_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Certificates_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Certificates_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Certificates_Select_Column_Certificates_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Certificates_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Certificates_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Certificates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Certificates_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Certificates" */
export type Certificates_Aggregate_Fields = {
  avg?: Maybe<Certificates_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Certificates_Max_Fields>;
  min?: Maybe<Certificates_Min_Fields>;
  stddev?: Maybe<Certificates_Stddev_Fields>;
  stddev_pop?: Maybe<Certificates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Certificates_Stddev_Samp_Fields>;
  sum?: Maybe<Certificates_Sum_Fields>;
  var_pop?: Maybe<Certificates_Var_Pop_Fields>;
  var_samp?: Maybe<Certificates_Var_Samp_Fields>;
  variance?: Maybe<Certificates_Variance_Fields>;
};

/** aggregate fields of "Certificates" */
export type Certificates_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Certificates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Certificates" */
export type Certificates_Aggregate_Order_By = {
  avg?: InputMaybe<Certificates_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Certificates_Max_Order_By>;
  min?: InputMaybe<Certificates_Min_Order_By>;
  stddev?: InputMaybe<Certificates_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Certificates_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Certificates_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Certificates_Sum_Order_By>;
  var_pop?: InputMaybe<Certificates_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Certificates_Var_Samp_Order_By>;
  variance?: InputMaybe<Certificates_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Certificates" */
export type Certificates_Arr_Rel_Insert_Input = {
  data: Array<Certificates_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Certificates_On_Conflict>;
};

/** aggregate avg on columns */
export type Certificates_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Certificates" */
export type Certificates_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Certificates". All fields are combined with a logical 'AND'. */
export type Certificates_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<Certificates_Bool_Exp>>;
  _not?: InputMaybe<Certificates_Bool_Exp>;
  _or?: InputMaybe<Array<Certificates_Bool_Exp>>;
  certificateFileId?: InputMaybe<String_Comparison_Exp>;
  commonName?: InputMaybe<String_Comparison_Exp>;
  countryName?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  isCA?: InputMaybe<Boolean_Comparison_Exp>;
  issuerName?: InputMaybe<String_Comparison_Exp>;
  keyLength?: InputMaybe<Int_Comparison_Exp>;
  organizationName?: InputMaybe<String_Comparison_Exp>;
  pathLen?: InputMaybe<Int_Comparison_Exp>;
  privateKeyFileId?: InputMaybe<String_Comparison_Exp>;
  serialNumber?: InputMaybe<Bigint_Comparison_Exp>;
  signatureAlgorithm?: InputMaybe<String_Comparison_Exp>;
  signedBy?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  validBefore?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Certificates" */
export type Certificates_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Certificates_pkey'
  /** unique or primary key constraint on columns "issuerName", "serialNumber" */
  | 'Certificates_serialNumber_issuerName_key';

/** input type for incrementing numeric columns in table "Certificates" */
export type Certificates_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Certificates" */
export type Certificates_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  certificateFileId?: InputMaybe<Scalars['String']['input']>;
  commonName?: InputMaybe<Scalars['String']['input']>;
  countryName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isCA?: InputMaybe<Scalars['Boolean']['input']>;
  issuerName?: InputMaybe<Scalars['String']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  organizationName?: InputMaybe<Scalars['String']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  privateKeyFileId?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  signatureAlgorithm?: InputMaybe<Scalars['String']['input']>;
  signedBy?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validBefore?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Certificates_Max_Fields = {
  certificateFileId?: Maybe<Scalars['String']['output']>;
  commonName?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuerName?: Maybe<Scalars['String']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  privateKeyFileId?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  signatureAlgorithm?: Maybe<Scalars['String']['output']>;
  signedBy?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validBefore?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Certificates" */
export type Certificates_Max_Order_By = {
  certificateFileId?: InputMaybe<Order_By>;
  commonName?: InputMaybe<Order_By>;
  countryName?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issuerName?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  organizationName?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  privateKeyFileId?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  signatureAlgorithm?: InputMaybe<Order_By>;
  signedBy?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validBefore?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Certificates_Min_Fields = {
  certificateFileId?: Maybe<Scalars['String']['output']>;
  commonName?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuerName?: Maybe<Scalars['String']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  privateKeyFileId?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  signatureAlgorithm?: Maybe<Scalars['String']['output']>;
  signedBy?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validBefore?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Certificates" */
export type Certificates_Min_Order_By = {
  certificateFileId?: InputMaybe<Order_By>;
  commonName?: InputMaybe<Order_By>;
  countryName?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issuerName?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  organizationName?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  privateKeyFileId?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  signatureAlgorithm?: InputMaybe<Order_By>;
  signedBy?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validBefore?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Certificates" */
export type Certificates_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Certificates>;
};

/** on_conflict condition type for table "Certificates" */
export type Certificates_On_Conflict = {
  constraint: Certificates_Constraint;
  update_columns?: Array<Certificates_Update_Column>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

/** Ordering options when selecting data from "Certificates". */
export type Certificates_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  certificateFileId?: InputMaybe<Order_By>;
  commonName?: InputMaybe<Order_By>;
  countryName?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isCA?: InputMaybe<Order_By>;
  issuerName?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  organizationName?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  privateKeyFileId?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  signatureAlgorithm?: InputMaybe<Order_By>;
  signedBy?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validBefore?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Certificates */
export type Certificates_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Certificates" */
export type Certificates_Select_Column =
  /** column name */
  | 'certificateFileId'
  /** column name */
  | 'commonName'
  /** column name */
  | 'countryName'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isCA'
  /** column name */
  | 'issuerName'
  /** column name */
  | 'keyLength'
  /** column name */
  | 'organizationName'
  /** column name */
  | 'pathLen'
  /** column name */
  | 'privateKeyFileId'
  /** column name */
  | 'serialNumber'
  /** column name */
  | 'signatureAlgorithm'
  /** column name */
  | 'signedBy'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validBefore';

/** select "Certificates_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Certificates" */
export type Certificates_Select_Column_Certificates_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isCA';

/** select "Certificates_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Certificates" */
export type Certificates_Select_Column_Certificates_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isCA';

/** input type for updating data in table "Certificates" */
export type Certificates_Set_Input = {
  certificateFileId?: InputMaybe<Scalars['String']['input']>;
  commonName?: InputMaybe<Scalars['String']['input']>;
  countryName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isCA?: InputMaybe<Scalars['Boolean']['input']>;
  issuerName?: InputMaybe<Scalars['String']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  organizationName?: InputMaybe<Scalars['String']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  privateKeyFileId?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  signatureAlgorithm?: InputMaybe<Scalars['String']['input']>;
  signedBy?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validBefore?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Certificates_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Certificates" */
export type Certificates_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Certificates_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Certificates" */
export type Certificates_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Certificates_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Certificates" */
export type Certificates_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Certificates" */
export type Certificates_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Certificates_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Certificates_Stream_Cursor_Value_Input = {
  certificateFileId?: InputMaybe<Scalars['String']['input']>;
  commonName?: InputMaybe<Scalars['String']['input']>;
  countryName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isCA?: InputMaybe<Scalars['Boolean']['input']>;
  issuerName?: InputMaybe<Scalars['String']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  organizationName?: InputMaybe<Scalars['String']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  privateKeyFileId?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  signatureAlgorithm?: InputMaybe<Scalars['String']['input']>;
  signedBy?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validBefore?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Certificates_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Certificates" */
export type Certificates_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Certificates" */
export type Certificates_Update_Column =
  /** column name */
  | 'certificateFileId'
  /** column name */
  | 'commonName'
  /** column name */
  | 'countryName'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isCA'
  /** column name */
  | 'issuerName'
  /** column name */
  | 'keyLength'
  /** column name */
  | 'organizationName'
  /** column name */
  | 'pathLen'
  /** column name */
  | 'privateKeyFileId'
  /** column name */
  | 'serialNumber'
  /** column name */
  | 'signatureAlgorithm'
  /** column name */
  | 'signedBy'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validBefore';

export type Certificates_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Certificates_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Certificates_Set_Input>;
  /** filter the rows which have to be updated */
  where: Certificates_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Certificates_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Certificates" */
export type Certificates_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Certificates_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Certificates" */
export type Certificates_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Certificates_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Certificates" */
export type Certificates_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChangeConfigurations" */
export type ChangeConfigurations = {
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  key: Scalars['String']['output'];
  readonly?: Maybe<Scalars['Boolean']['output']>;
  stationId: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "ChangeConfigurations" */
export type ChangeConfigurations_Aggregate = {
  aggregate?: Maybe<ChangeConfigurations_Aggregate_Fields>;
  nodes: Array<ChangeConfigurations>;
};

export type ChangeConfigurations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ChangeConfigurations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ChangeConfigurations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ChangeConfigurations_Aggregate_Bool_Exp_Count>;
};

export type ChangeConfigurations_Aggregate_Bool_Exp_Bool_And = {
  arguments: ChangeConfigurations_Select_Column_ChangeConfigurations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChangeConfigurations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChangeConfigurations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ChangeConfigurations_Select_Column_ChangeConfigurations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChangeConfigurations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChangeConfigurations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChangeConfigurations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChangeConfigurations" */
export type ChangeConfigurations_Aggregate_Fields = {
  avg?: Maybe<ChangeConfigurations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChangeConfigurations_Max_Fields>;
  min?: Maybe<ChangeConfigurations_Min_Fields>;
  stddev?: Maybe<ChangeConfigurations_Stddev_Fields>;
  stddev_pop?: Maybe<ChangeConfigurations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChangeConfigurations_Stddev_Samp_Fields>;
  sum?: Maybe<ChangeConfigurations_Sum_Fields>;
  var_pop?: Maybe<ChangeConfigurations_Var_Pop_Fields>;
  var_samp?: Maybe<ChangeConfigurations_Var_Samp_Fields>;
  variance?: Maybe<ChangeConfigurations_Variance_Fields>;
};

/** aggregate fields of "ChangeConfigurations" */
export type ChangeConfigurations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChangeConfigurations" */
export type ChangeConfigurations_Aggregate_Order_By = {
  avg?: InputMaybe<ChangeConfigurations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChangeConfigurations_Max_Order_By>;
  min?: InputMaybe<ChangeConfigurations_Min_Order_By>;
  stddev?: InputMaybe<ChangeConfigurations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChangeConfigurations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChangeConfigurations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChangeConfigurations_Sum_Order_By>;
  var_pop?: InputMaybe<ChangeConfigurations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChangeConfigurations_Var_Samp_Order_By>;
  variance?: InputMaybe<ChangeConfigurations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChangeConfigurations" */
export type ChangeConfigurations_Arr_Rel_Insert_Input = {
  data: Array<ChangeConfigurations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChangeConfigurations_On_Conflict>;
};

/** aggregate avg on columns */
export type ChangeConfigurations_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChangeConfigurations". All fields are combined with a logical 'AND'. */
export type ChangeConfigurations_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<ChangeConfigurations_Bool_Exp>>;
  _not?: InputMaybe<ChangeConfigurations_Bool_Exp>;
  _or?: InputMaybe<Array<ChangeConfigurations_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  key?: InputMaybe<String_Comparison_Exp>;
  readonly?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChangeConfigurations" */
export type ChangeConfigurations_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'ChangeConfigurations_pkey'
  /** unique or primary key constraint on columns "key", "stationId" */
  | 'ChangeConfigurations_stationId_key_key';

/** input type for incrementing numeric columns in table "ChangeConfigurations" */
export type ChangeConfigurations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChangeConfigurations" */
export type ChangeConfigurations_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  readonly?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ChangeConfigurations_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChangeConfigurations_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChangeConfigurations" */
export type ChangeConfigurations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChangeConfigurations>;
};

/** on_conflict condition type for table "ChangeConfigurations" */
export type ChangeConfigurations_On_Conflict = {
  constraint: ChangeConfigurations_Constraint;
  update_columns?: Array<ChangeConfigurations_Update_Column>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

/** Ordering options when selecting data from "ChangeConfigurations". */
export type ChangeConfigurations_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  readonly?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChangeConfigurations */
export type ChangeConfigurations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'key'
  /** column name */
  | 'readonly'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value';

/** select "ChangeConfigurations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Select_Column_ChangeConfigurations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'readonly';

/** select "ChangeConfigurations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Select_Column_ChangeConfigurations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'readonly';

/** input type for updating data in table "ChangeConfigurations" */
export type ChangeConfigurations_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  readonly?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ChangeConfigurations_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChangeConfigurations_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChangeConfigurations_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChangeConfigurations" */
export type ChangeConfigurations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChangeConfigurations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChangeConfigurations_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  readonly?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ChangeConfigurations_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'key'
  /** column name */
  | 'readonly'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value';

export type ChangeConfigurations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChangeConfigurations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChangeConfigurations_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChangeConfigurations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChangeConfigurations_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChangeConfigurations_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChangeConfigurations_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChangeConfigurations" */
export type ChangeConfigurations_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingNeeds" */
export type ChargingNeeds = {
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  acChargingParameters?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  dcChargingParameters?: Maybe<Scalars['jsonb']['output']>;
  departureTime?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  requestedEnergyTransfer?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ChargingNeeds" */
export type ChargingNeedsAcChargingParametersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "ChargingNeeds" */
export type ChargingNeedsDcChargingParametersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ChargingNeeds" */
export type ChargingNeeds_Aggregate = {
  aggregate?: Maybe<ChargingNeeds_Aggregate_Fields>;
  nodes: Array<ChargingNeeds>;
};

export type ChargingNeeds_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp_Count>;
};

export type ChargingNeeds_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingNeeds_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingNeeds" */
export type ChargingNeeds_Aggregate_Fields = {
  avg?: Maybe<ChargingNeeds_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingNeeds_Max_Fields>;
  min?: Maybe<ChargingNeeds_Min_Fields>;
  stddev?: Maybe<ChargingNeeds_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingNeeds_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingNeeds_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingNeeds_Sum_Fields>;
  var_pop?: Maybe<ChargingNeeds_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingNeeds_Var_Samp_Fields>;
  variance?: Maybe<ChargingNeeds_Variance_Fields>;
};

/** aggregate fields of "ChargingNeeds" */
export type ChargingNeeds_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingNeeds" */
export type ChargingNeeds_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingNeeds_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingNeeds_Max_Order_By>;
  min?: InputMaybe<ChargingNeeds_Min_Order_By>;
  stddev?: InputMaybe<ChargingNeeds_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingNeeds_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingNeeds_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingNeeds_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingNeeds_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingNeeds_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingNeeds_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ChargingNeeds_Append_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "ChargingNeeds" */
export type ChargingNeeds_Arr_Rel_Insert_Input = {
  data: Array<ChargingNeeds_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingNeeds_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingNeeds_Avg_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Avg_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingNeeds". All fields are combined with a logical 'AND'. */
export type ChargingNeeds_Bool_Exp = {
  Evse?: InputMaybe<Evses_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingNeeds_Bool_Exp>>;
  _not?: InputMaybe<ChargingNeeds_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingNeeds_Bool_Exp>>;
  acChargingParameters?: InputMaybe<Jsonb_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dcChargingParameters?: InputMaybe<Jsonb_Comparison_Exp>;
  departureTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  maxScheduleTuples?: InputMaybe<Int_Comparison_Exp>;
  requestedEnergyTransfer?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingNeeds" */
export type ChargingNeeds_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ChargingNeeds_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ChargingNeeds_Delete_At_Path_Input = {
  acChargingParameters?: InputMaybe<Array<Scalars['String']['input']>>;
  dcChargingParameters?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ChargingNeeds_Delete_Elem_Input = {
  acChargingParameters?: InputMaybe<Scalars['Int']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ChargingNeeds_Delete_Key_Input = {
  acChargingParameters?: InputMaybe<Scalars['String']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "ChargingNeeds" */
export type ChargingNeeds_Inc_Input = {
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingNeeds" */
export type ChargingNeeds_Insert_Input = {
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  departureTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  requestedEnergyTransfer?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingNeeds_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  departureTime?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  requestedEnergyTransfer?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  departureTime?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  requestedEnergyTransfer?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingNeeds_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  departureTime?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  requestedEnergyTransfer?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  departureTime?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  requestedEnergyTransfer?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingNeeds" */
export type ChargingNeeds_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingNeeds>;
};

/** on_conflict condition type for table "ChargingNeeds" */
export type ChargingNeeds_On_Conflict = {
  constraint: ChargingNeeds_Constraint;
  update_columns?: Array<ChargingNeeds_Update_Column>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingNeeds". */
export type ChargingNeeds_Order_By = {
  Evse?: InputMaybe<Evses_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  acChargingParameters?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dcChargingParameters?: InputMaybe<Order_By>;
  departureTime?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  requestedEnergyTransfer?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingNeeds */
export type ChargingNeeds_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ChargingNeeds_Prepend_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "ChargingNeeds" */
export type ChargingNeeds_Select_Column =
  /** column name */
  | 'acChargingParameters'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dcChargingParameters'
  /** column name */
  | 'departureTime'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'maxScheduleTuples'
  /** column name */
  | 'requestedEnergyTransfer'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ChargingNeeds" */
export type ChargingNeeds_Set_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  departureTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  requestedEnergyTransfer?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingNeeds_Stddev_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Stddev_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingNeeds_Stddev_Pop_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Stddev_Pop_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingNeeds_Stddev_Samp_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Stddev_Samp_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingNeeds" */
export type ChargingNeeds_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingNeeds_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingNeeds_Stream_Cursor_Value_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  departureTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  requestedEnergyTransfer?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingNeeds_Sum_Fields = {
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Sum_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingNeeds" */
export type ChargingNeeds_Update_Column =
  /** column name */
  | 'acChargingParameters'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dcChargingParameters'
  /** column name */
  | 'departureTime'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'maxScheduleTuples'
  /** column name */
  | 'requestedEnergyTransfer'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

export type ChargingNeeds_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ChargingNeeds_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ChargingNeeds_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ChargingNeeds_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ChargingNeeds_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingNeeds_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ChargingNeeds_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingNeeds_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingNeeds_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingNeeds_Var_Pop_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Var_Pop_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingNeeds_Var_Samp_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Var_Samp_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingNeeds_Variance_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Variance_Order_By = {
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingProfiles" */
export type ChargingProfiles = {
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  chargingLimitSource?: Maybe<Scalars['String']['output']>;
  chargingProfileKind?: Maybe<Scalars['String']['output']>;
  chargingProfilePurpose?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  recurrencyKind?: Maybe<Scalars['String']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  validFrom?: Maybe<Scalars['timestamptz']['output']>;
  validTo?: Maybe<Scalars['timestamptz']['output']>;
};

/** columns and relationships of "ChargingProfiles" */
export type ChargingProfilesChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** columns and relationships of "ChargingProfiles" */
export type ChargingProfilesChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** aggregated selection of "ChargingProfiles" */
export type ChargingProfiles_Aggregate = {
  aggregate?: Maybe<ChargingProfiles_Aggregate_Fields>;
  nodes: Array<ChargingProfiles>;
};

export type ChargingProfiles_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp_Count>;
};

export type ChargingProfiles_Aggregate_Bool_Exp_Bool_And = {
  arguments: ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingProfiles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingProfiles_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingProfiles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingProfiles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingProfiles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingProfiles" */
export type ChargingProfiles_Aggregate_Fields = {
  avg?: Maybe<ChargingProfiles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingProfiles_Max_Fields>;
  min?: Maybe<ChargingProfiles_Min_Fields>;
  stddev?: Maybe<ChargingProfiles_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingProfiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingProfiles_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingProfiles_Sum_Fields>;
  var_pop?: Maybe<ChargingProfiles_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingProfiles_Var_Samp_Fields>;
  variance?: Maybe<ChargingProfiles_Variance_Fields>;
};

/** aggregate fields of "ChargingProfiles" */
export type ChargingProfiles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingProfiles" */
export type ChargingProfiles_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingProfiles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingProfiles_Max_Order_By>;
  min?: InputMaybe<ChargingProfiles_Min_Order_By>;
  stddev?: InputMaybe<ChargingProfiles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingProfiles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingProfiles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingProfiles_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingProfiles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingProfiles_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingProfiles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChargingProfiles" */
export type ChargingProfiles_Arr_Rel_Insert_Input = {
  data: Array<ChargingProfiles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingProfiles_Avg_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Avg_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingProfiles". All fields are combined with a logical 'AND'. */
export type ChargingProfiles_Bool_Exp = {
  ChargingSchedules?: InputMaybe<ChargingSchedules_Bool_Exp>;
  ChargingSchedules_aggregate?: InputMaybe<ChargingSchedules_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingProfiles_Bool_Exp>>;
  _not?: InputMaybe<ChargingProfiles_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingProfiles_Bool_Exp>>;
  chargingLimitSource?: InputMaybe<String_Comparison_Exp>;
  chargingProfileKind?: InputMaybe<String_Comparison_Exp>;
  chargingProfilePurpose?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  recurrencyKind?: InputMaybe<String_Comparison_Exp>;
  stackLevel?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  validFrom?: InputMaybe<Timestamptz_Comparison_Exp>;
  validTo?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingProfiles" */
export type ChargingProfiles_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  | 'ChargingProfiles_pkey'
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'ChargingProfiles_stationId_id_key';

/** input type for incrementing numeric columns in table "ChargingProfiles" */
export type ChargingProfiles_Inc_Input = {
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingProfiles" */
export type ChargingProfiles_Insert_Input = {
  ChargingSchedules?: InputMaybe<ChargingSchedules_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  chargingLimitSource?: InputMaybe<Scalars['String']['input']>;
  chargingProfileKind?: InputMaybe<Scalars['String']['input']>;
  chargingProfilePurpose?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  recurrencyKind?: InputMaybe<Scalars['String']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validFrom?: InputMaybe<Scalars['timestamptz']['input']>;
  validTo?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingProfiles_Max_Fields = {
  chargingLimitSource?: Maybe<Scalars['String']['output']>;
  chargingProfileKind?: Maybe<Scalars['String']['output']>;
  chargingProfilePurpose?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  recurrencyKind?: Maybe<Scalars['String']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validFrom?: Maybe<Scalars['timestamptz']['output']>;
  validTo?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Max_Order_By = {
  chargingLimitSource?: InputMaybe<Order_By>;
  chargingProfileKind?: InputMaybe<Order_By>;
  chargingProfilePurpose?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  recurrencyKind?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validFrom?: InputMaybe<Order_By>;
  validTo?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingProfiles_Min_Fields = {
  chargingLimitSource?: Maybe<Scalars['String']['output']>;
  chargingProfileKind?: Maybe<Scalars['String']['output']>;
  chargingProfilePurpose?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  recurrencyKind?: Maybe<Scalars['String']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validFrom?: Maybe<Scalars['timestamptz']['output']>;
  validTo?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Min_Order_By = {
  chargingLimitSource?: InputMaybe<Order_By>;
  chargingProfileKind?: InputMaybe<Order_By>;
  chargingProfilePurpose?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  recurrencyKind?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validFrom?: InputMaybe<Order_By>;
  validTo?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingProfiles" */
export type ChargingProfiles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingProfiles>;
};

/** input type for inserting object relation for remote table "ChargingProfiles" */
export type ChargingProfiles_Obj_Rel_Insert_Input = {
  data: ChargingProfiles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** on_conflict condition type for table "ChargingProfiles" */
export type ChargingProfiles_On_Conflict = {
  constraint: ChargingProfiles_Constraint;
  update_columns?: Array<ChargingProfiles_Update_Column>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingProfiles". */
export type ChargingProfiles_Order_By = {
  ChargingSchedules_aggregate?: InputMaybe<ChargingSchedules_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  chargingLimitSource?: InputMaybe<Order_By>;
  chargingProfileKind?: InputMaybe<Order_By>;
  chargingProfilePurpose?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  recurrencyKind?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validFrom?: InputMaybe<Order_By>;
  validTo?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingProfiles */
export type ChargingProfiles_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "ChargingProfiles" */
export type ChargingProfiles_Select_Column =
  /** column name */
  | 'chargingLimitSource'
  /** column name */
  | 'chargingProfileKind'
  /** column name */
  | 'chargingProfilePurpose'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'recurrencyKind'
  /** column name */
  | 'stackLevel'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validFrom'
  /** column name */
  | 'validTo';

/** select "ChargingProfiles_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ChargingProfiles" */
export type ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isActive';

/** select "ChargingProfiles_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ChargingProfiles" */
export type ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isActive';

/** input type for updating data in table "ChargingProfiles" */
export type ChargingProfiles_Set_Input = {
  chargingLimitSource?: InputMaybe<Scalars['String']['input']>;
  chargingProfileKind?: InputMaybe<Scalars['String']['input']>;
  chargingProfilePurpose?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  recurrencyKind?: InputMaybe<Scalars['String']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validFrom?: InputMaybe<Scalars['timestamptz']['input']>;
  validTo?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingProfiles_Stddev_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Stddev_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingProfiles_Stddev_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Stddev_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingProfiles_Stddev_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Stddev_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingProfiles" */
export type ChargingProfiles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingProfiles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingProfiles_Stream_Cursor_Value_Input = {
  chargingLimitSource?: InputMaybe<Scalars['String']['input']>;
  chargingProfileKind?: InputMaybe<Scalars['String']['input']>;
  chargingProfilePurpose?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  recurrencyKind?: InputMaybe<Scalars['String']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validFrom?: InputMaybe<Scalars['timestamptz']['input']>;
  validTo?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingProfiles_Sum_Fields = {
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Sum_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingProfiles" */
export type ChargingProfiles_Update_Column =
  /** column name */
  | 'chargingLimitSource'
  /** column name */
  | 'chargingProfileKind'
  /** column name */
  | 'chargingProfilePurpose'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'recurrencyKind'
  /** column name */
  | 'stackLevel'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validFrom'
  /** column name */
  | 'validTo';

export type ChargingProfiles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingProfiles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingProfiles_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingProfiles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingProfiles_Var_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Var_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingProfiles_Var_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Var_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingProfiles_Variance_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Variance_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedules = {
  /** An object relationship */
  ChargingProfile?: Maybe<ChargingProfiles>;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  chargingSchedulePeriod?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  startSchedule?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timeBase?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedulesSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedulesSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedulesChargingSchedulePeriodArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ChargingSchedules" */
export type ChargingSchedules_Aggregate = {
  aggregate?: Maybe<ChargingSchedules_Aggregate_Fields>;
  nodes: Array<ChargingSchedules>;
};

export type ChargingSchedules_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingSchedules_Aggregate_Bool_Exp_Count>;
};

export type ChargingSchedules_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingSchedules_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingSchedules" */
export type ChargingSchedules_Aggregate_Fields = {
  avg?: Maybe<ChargingSchedules_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingSchedules_Max_Fields>;
  min?: Maybe<ChargingSchedules_Min_Fields>;
  stddev?: Maybe<ChargingSchedules_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingSchedules_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingSchedules_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingSchedules_Sum_Fields>;
  var_pop?: Maybe<ChargingSchedules_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingSchedules_Var_Samp_Fields>;
  variance?: Maybe<ChargingSchedules_Variance_Fields>;
};

/** aggregate fields of "ChargingSchedules" */
export type ChargingSchedules_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingSchedules" */
export type ChargingSchedules_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingSchedules_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingSchedules_Max_Order_By>;
  min?: InputMaybe<ChargingSchedules_Min_Order_By>;
  stddev?: InputMaybe<ChargingSchedules_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingSchedules_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingSchedules_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingSchedules_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingSchedules_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingSchedules_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingSchedules_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ChargingSchedules_Append_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "ChargingSchedules" */
export type ChargingSchedules_Arr_Rel_Insert_Input = {
  data: Array<ChargingSchedules_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingSchedules_Avg_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Avg_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingSchedules". All fields are combined with a logical 'AND'. */
export type ChargingSchedules_Bool_Exp = {
  ChargingProfile?: InputMaybe<ChargingProfiles_Bool_Exp>;
  SalesTariffs?: InputMaybe<SalesTariffs_Bool_Exp>;
  SalesTariffs_aggregate?: InputMaybe<SalesTariffs_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingSchedules_Bool_Exp>>;
  _not?: InputMaybe<ChargingSchedules_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingSchedules_Bool_Exp>>;
  chargingProfileDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  chargingRateUnit?: InputMaybe<String_Comparison_Exp>;
  chargingSchedulePeriod?: InputMaybe<Jsonb_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  duration?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  minChargingRate?: InputMaybe<Numeric_Comparison_Exp>;
  startSchedule?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timeBase?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingSchedules" */
export type ChargingSchedules_Constraint =
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'ChargingSchedules_id_stationId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'ChargingSchedules_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ChargingSchedules_Delete_At_Path_Input = {
  chargingSchedulePeriod?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ChargingSchedules_Delete_Elem_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ChargingSchedules_Delete_Key_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "ChargingSchedules" */
export type ChargingSchedules_Inc_Input = {
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingSchedules" */
export type ChargingSchedules_Insert_Input = {
  ChargingProfile?: InputMaybe<ChargingProfiles_Obj_Rel_Insert_Input>;
  SalesTariffs?: InputMaybe<SalesTariffs_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  startSchedule?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeBase?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingSchedules_Max_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  startSchedule?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeBase?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Max_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  startSchedule?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeBase?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingSchedules_Min_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  startSchedule?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeBase?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Min_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  startSchedule?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeBase?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingSchedules" */
export type ChargingSchedules_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingSchedules>;
};

/** input type for inserting object relation for remote table "ChargingSchedules" */
export type ChargingSchedules_Obj_Rel_Insert_Input = {
  data: ChargingSchedules_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** on_conflict condition type for table "ChargingSchedules" */
export type ChargingSchedules_On_Conflict = {
  constraint: ChargingSchedules_Constraint;
  update_columns?: Array<ChargingSchedules_Update_Column>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingSchedules". */
export type ChargingSchedules_Order_By = {
  ChargingProfile?: InputMaybe<ChargingProfiles_Order_By>;
  SalesTariffs_aggregate?: InputMaybe<SalesTariffs_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  chargingSchedulePeriod?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  startSchedule?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeBase?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingSchedules */
export type ChargingSchedules_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ChargingSchedules_Prepend_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "ChargingSchedules" */
export type ChargingSchedules_Select_Column =
  /** column name */
  | 'chargingProfileDatabaseId'
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'duration'
  /** column name */
  | 'id'
  /** column name */
  | 'minChargingRate'
  /** column name */
  | 'startSchedule'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timeBase'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ChargingSchedules" */
export type ChargingSchedules_Set_Input = {
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  startSchedule?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeBase?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingSchedules_Stddev_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Stddev_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingSchedules_Stddev_Pop_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Stddev_Pop_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingSchedules_Stddev_Samp_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Stddev_Samp_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingSchedules" */
export type ChargingSchedules_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingSchedules_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingSchedules_Stream_Cursor_Value_Input = {
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  startSchedule?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeBase?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingSchedules_Sum_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Sum_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingSchedules" */
export type ChargingSchedules_Update_Column =
  /** column name */
  | 'chargingProfileDatabaseId'
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'duration'
  /** column name */
  | 'id'
  /** column name */
  | 'minChargingRate'
  /** column name */
  | 'startSchedule'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timeBase'
  /** column name */
  | 'updatedAt';

export type ChargingSchedules_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ChargingSchedules_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ChargingSchedules_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ChargingSchedules_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ChargingSchedules_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingSchedules_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ChargingSchedules_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingSchedules_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingSchedules_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingSchedules_Var_Pop_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Var_Pop_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingSchedules_Var_Samp_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Var_Samp_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingSchedules_Variance_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Variance_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles = {
  /** An object relationship */
  ChargingStation: ChargingStations;
  /** An object relationship */
  ServerNetworkProfile?: Maybe<ServerNetworkProfiles>;
  /** An object relationship */
  SetNetworkProfile: SetNetworkProfiles;
  /** An object relationship */
  Tenant: Tenants;
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  setNetworkProfileId: Scalars['Int']['output'];
  stationId: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  websocketServerConfigId?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Aggregate = {
  aggregate?: Maybe<ChargingStationNetworkProfiles_Aggregate_Fields>;
  nodes: Array<ChargingStationNetworkProfiles>;
};

export type ChargingStationNetworkProfiles_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Bool_Exp_Count>;
};

export type ChargingStationNetworkProfiles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Aggregate_Fields = {
  avg?: Maybe<ChargingStationNetworkProfiles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingStationNetworkProfiles_Max_Fields>;
  min?: Maybe<ChargingStationNetworkProfiles_Min_Fields>;
  stddev?: Maybe<ChargingStationNetworkProfiles_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingStationNetworkProfiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingStationNetworkProfiles_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingStationNetworkProfiles_Sum_Fields>;
  var_pop?: Maybe<ChargingStationNetworkProfiles_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingStationNetworkProfiles_Var_Samp_Fields>;
  variance?: Maybe<ChargingStationNetworkProfiles_Variance_Fields>;
};

/** aggregate fields of "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingStationNetworkProfiles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingStationNetworkProfiles_Max_Order_By>;
  min?: InputMaybe<ChargingStationNetworkProfiles_Min_Order_By>;
  stddev?: InputMaybe<ChargingStationNetworkProfiles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingStationNetworkProfiles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingStationNetworkProfiles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingStationNetworkProfiles_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingStationNetworkProfiles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingStationNetworkProfiles_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingStationNetworkProfiles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Arr_Rel_Insert_Input = {
  data: Array<ChargingStationNetworkProfiles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStationNetworkProfiles_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingStationNetworkProfiles_Avg_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Avg_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingStationNetworkProfiles". All fields are combined with a logical 'AND'. */
export type ChargingStationNetworkProfiles_Bool_Exp = {
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  ServerNetworkProfile?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  SetNetworkProfile?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingStationNetworkProfiles_Bool_Exp>>;
  _not?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingStationNetworkProfiles_Bool_Exp>>;
  configurationSlot?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  setNetworkProfileId?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  websocketServerConfigId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Constraint =
  /** unique or primary key constraint on columns "websocketServerConfigId", "stationId" */
  | 'ChargingStationNetworkProfile_stationId_websocketServerConf_key'
  /** unique or primary key constraint on columns "configurationSlot" */
  | 'ChargingStationNetworkProfiles_configurationSlot_key'
  /** unique or primary key constraint on columns "setNetworkProfileId", "stationId" */
  | 'ChargingStationNetworkProfiles_pkey';

/** input type for incrementing numeric columns in table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Inc_Input = {
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  setNetworkProfileId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Insert_Input = {
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  ServerNetworkProfile?: InputMaybe<ServerNetworkProfiles_Obj_Rel_Insert_Input>;
  SetNetworkProfile?: InputMaybe<SetNetworkProfiles_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  setNetworkProfileId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  websocketServerConfigId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ChargingStationNetworkProfiles_Max_Fields = {
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  websocketServerConfigId?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Max_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  websocketServerConfigId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingStationNetworkProfiles_Min_Fields = {
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  websocketServerConfigId?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Min_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  websocketServerConfigId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingStationNetworkProfiles>;
};

/** on_conflict condition type for table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_On_Conflict = {
  constraint: ChargingStationNetworkProfiles_Constraint;
  update_columns?: Array<ChargingStationNetworkProfiles_Update_Column>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingStationNetworkProfiles". */
export type ChargingStationNetworkProfiles_Order_By = {
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  ServerNetworkProfile?: InputMaybe<ServerNetworkProfiles_Order_By>;
  SetNetworkProfile?: InputMaybe<SetNetworkProfiles_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  configurationSlot?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  websocketServerConfigId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingStationNetworkProfiles */
export type ChargingStationNetworkProfiles_Pk_Columns_Input = {
  setNetworkProfileId: Scalars['Int']['input'];
  stationId: Scalars['String']['input'];
};

/** select columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Select_Column =
  /** column name */
  | 'configurationSlot'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'setNetworkProfileId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'websocketServerConfigId';

/** input type for updating data in table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Set_Input = {
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  setNetworkProfileId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  websocketServerConfigId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ChargingStationNetworkProfiles_Stddev_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Stddev_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingStationNetworkProfiles_Stddev_Pop_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Stddev_Pop_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingStationNetworkProfiles_Stddev_Samp_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Stddev_Samp_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingStationNetworkProfiles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingStationNetworkProfiles_Stream_Cursor_Value_Input = {
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  setNetworkProfileId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  websocketServerConfigId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ChargingStationNetworkProfiles_Sum_Fields = {
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Sum_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Update_Column =
  /** column name */
  | 'configurationSlot'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'setNetworkProfileId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'websocketServerConfigId';

export type ChargingStationNetworkProfiles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingStationNetworkProfiles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingStationNetworkProfiles_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingStationNetworkProfiles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingStationNetworkProfiles_Var_Pop_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Var_Pop_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingStationNetworkProfiles_Var_Samp_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Var_Samp_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingStationNetworkProfiles_Variance_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  setNetworkProfileId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingStationNetworkProfiles" */
export type ChargingStationNetworkProfiles_Variance_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  setNetworkProfileId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos = {
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  publicKeyFileId?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate = {
  aggregate?: Maybe<ChargingStationSecurityInfos_Aggregate_Fields>;
  nodes: Array<ChargingStationSecurityInfos>;
};

export type ChargingStationSecurityInfos_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingStationSecurityInfos_Aggregate_Bool_Exp_Count>;
};

export type ChargingStationSecurityInfos_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate_Fields = {
  avg?: Maybe<ChargingStationSecurityInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingStationSecurityInfos_Max_Fields>;
  min?: Maybe<ChargingStationSecurityInfos_Min_Fields>;
  stddev?: Maybe<ChargingStationSecurityInfos_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingStationSecurityInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingStationSecurityInfos_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingStationSecurityInfos_Sum_Fields>;
  var_pop?: Maybe<ChargingStationSecurityInfos_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingStationSecurityInfos_Var_Samp_Fields>;
  variance?: Maybe<ChargingStationSecurityInfos_Variance_Fields>;
};

/** aggregate fields of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingStationSecurityInfos_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingStationSecurityInfos_Max_Order_By>;
  min?: InputMaybe<ChargingStationSecurityInfos_Min_Order_By>;
  stddev?: InputMaybe<ChargingStationSecurityInfos_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingStationSecurityInfos_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingStationSecurityInfos_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingStationSecurityInfos_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingStationSecurityInfos_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingStationSecurityInfos_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingStationSecurityInfos_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Arr_Rel_Insert_Input = {
  data: Array<ChargingStationSecurityInfos_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStationSecurityInfos_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingStationSecurityInfos_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingStationSecurityInfos". All fields are combined with a logical 'AND'. */
export type ChargingStationSecurityInfos_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingStationSecurityInfos_Bool_Exp>>;
  _not?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingStationSecurityInfos_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  publicKeyFileId?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'ChargingStationSecurityInfos_pkey'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key1'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key2'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key3'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key4'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key5';

/** input type for incrementing numeric columns in table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  publicKeyFileId?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingStationSecurityInfos_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  publicKeyFileId?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  publicKeyFileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingStationSecurityInfos_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  publicKeyFileId?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  publicKeyFileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingStationSecurityInfos>;
};

/** on_conflict condition type for table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_On_Conflict = {
  constraint: ChargingStationSecurityInfos_Constraint;
  update_columns?: Array<ChargingStationSecurityInfos_Update_Column>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingStationSecurityInfos". */
export type ChargingStationSecurityInfos_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  publicKeyFileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingStationSecurityInfos */
export type ChargingStationSecurityInfos_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'publicKeyFileId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  publicKeyFileId?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingStationSecurityInfos_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingStationSecurityInfos_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingStationSecurityInfos_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingStationSecurityInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingStationSecurityInfos_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  publicKeyFileId?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingStationSecurityInfos_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'publicKeyFileId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type ChargingStationSecurityInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingStationSecurityInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingStationSecurityInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingStationSecurityInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingStationSecurityInfos_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingStationSecurityInfos_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingStationSecurityInfos_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingStationSequences" */
export type ChargingStationSequences = {
  /** An object relationship */
  ChargingStation: ChargingStations;
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  stationId: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  type: Scalars['String']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  value: Scalars['bigint']['output'];
};

/** aggregated selection of "ChargingStationSequences" */
export type ChargingStationSequences_Aggregate = {
  aggregate?: Maybe<ChargingStationSequences_Aggregate_Fields>;
  nodes: Array<ChargingStationSequences>;
};

export type ChargingStationSequences_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingStationSequences_Aggregate_Bool_Exp_Count>;
};

export type ChargingStationSequences_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStationSequences_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingStationSequences" */
export type ChargingStationSequences_Aggregate_Fields = {
  avg?: Maybe<ChargingStationSequences_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingStationSequences_Max_Fields>;
  min?: Maybe<ChargingStationSequences_Min_Fields>;
  stddev?: Maybe<ChargingStationSequences_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingStationSequences_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingStationSequences_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingStationSequences_Sum_Fields>;
  var_pop?: Maybe<ChargingStationSequences_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingStationSequences_Var_Samp_Fields>;
  variance?: Maybe<ChargingStationSequences_Variance_Fields>;
};

/** aggregate fields of "ChargingStationSequences" */
export type ChargingStationSequences_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingStationSequences" */
export type ChargingStationSequences_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingStationSequences_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingStationSequences_Max_Order_By>;
  min?: InputMaybe<ChargingStationSequences_Min_Order_By>;
  stddev?: InputMaybe<ChargingStationSequences_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingStationSequences_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingStationSequences_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingStationSequences_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingStationSequences_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingStationSequences_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingStationSequences_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChargingStationSequences" */
export type ChargingStationSequences_Arr_Rel_Insert_Input = {
  data: Array<ChargingStationSequences_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStationSequences_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingStationSequences_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingStationSequences". All fields are combined with a logical 'AND'. */
export type ChargingStationSequences_Bool_Exp = {
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingStationSequences_Bool_Exp>>;
  _not?: InputMaybe<ChargingStationSequences_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingStationSequences_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingStationSequences" */
export type ChargingStationSequences_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'ChargingStationSequences_pkey'
  /** unique or primary key constraint on columns "stationId", "type" */
  | 'ChargingStationSequences_stationId_type_key';

/** input type for incrementing numeric columns in table "ChargingStationSequences" */
export type ChargingStationSequences_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  value?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "ChargingStationSequences" */
export type ChargingStationSequences_Insert_Input = {
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type ChargingStationSequences_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingStationSequences_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingStationSequences" */
export type ChargingStationSequences_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingStationSequences>;
};

/** on_conflict condition type for table "ChargingStationSequences" */
export type ChargingStationSequences_On_Conflict = {
  constraint: ChargingStationSequences_Constraint;
  update_columns?: Array<ChargingStationSequences_Update_Column>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingStationSequences". */
export type ChargingStationSequences_Order_By = {
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingStationSequences */
export type ChargingStationSequences_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value';

/** input type for updating data in table "ChargingStationSequences" */
export type ChargingStationSequences_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type ChargingStationSequences_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingStationSequences_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingStationSequences_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingStationSequences" */
export type ChargingStationSequences_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingStationSequences_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingStationSequences_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type ChargingStationSequences_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  value?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value';

export type ChargingStationSequences_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingStationSequences_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingStationSequences_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingStationSequences_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingStationSequences_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingStationSequences_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingStationSequences_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingStationSequences" */
export type ChargingStationSequences_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStations = {
  /** An array relationship */
  ChargingStationNetworkProfiles: Array<ChargingStationNetworkProfiles>;
  /** An aggregate relationship */
  ChargingStationNetworkProfiles_aggregate: ChargingStationNetworkProfiles_Aggregate;
  /** An array relationship */
  ChargingStationSequences: Array<ChargingStationSequences>;
  /** An aggregate relationship */
  ChargingStationSequences_aggregate: ChargingStationSequences_Aggregate;
  /** An array relationship */
  Connectors: Array<Connectors>;
  /** An aggregate relationship */
  Connectors_aggregate: Connectors_Aggregate;
  /** An array relationship */
  Evses: Array<Evses>;
  /** An aggregate relationship */
  Evses_aggregate: Evses_Aggregate;
  /** An array relationship */
  LatestStatusNotifications: Array<LatestStatusNotifications>;
  /** An aggregate relationship */
  LatestStatusNotifications_aggregate: LatestStatusNotifications_Aggregate;
  /** An object relationship */
  Location?: Maybe<Locations>;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  capabilities?: Maybe<Scalars['jsonb']['output']>;
  chargeBoxSerialNumber?: Maybe<Scalars['String']['output']>;
  chargePointModel?: Maybe<Scalars['String']['output']>;
  chargePointSerialNumber?: Maybe<Scalars['String']['output']>;
  chargePointVendor?: Maybe<Scalars['String']['output']>;
  coordinates?: Maybe<Scalars['geometry']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  firmwareVersion?: Maybe<Scalars['String']['output']>;
  floorLevel?: Maybe<Scalars['String']['output']>;
  iccid?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  imsi?: Maybe<Scalars['String']['output']>;
  isOnline?: Maybe<Scalars['Boolean']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  meterSerialNumber?: Maybe<Scalars['String']['output']>;
  meterType?: Maybe<Scalars['String']['output']>;
  parkingRestrictions?: Maybe<Scalars['jsonb']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsChargingStationNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsChargingStationNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsChargingStationSequencesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsChargingStationSequences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsEvsesArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsLatestStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsLatestStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsCapabilitiesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsParkingRestrictionsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ChargingStations" */
export type ChargingStations_Aggregate = {
  aggregate?: Maybe<ChargingStations_Aggregate_Fields>;
  nodes: Array<ChargingStations>;
};

export type ChargingStations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ChargingStations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ChargingStations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ChargingStations_Aggregate_Bool_Exp_Count>;
};

export type ChargingStations_Aggregate_Bool_Exp_Bool_And = {
  arguments: ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingStations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingStations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingStations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingStations" */
export type ChargingStations_Aggregate_Fields = {
  avg?: Maybe<ChargingStations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingStations_Max_Fields>;
  min?: Maybe<ChargingStations_Min_Fields>;
  stddev?: Maybe<ChargingStations_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingStations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingStations_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingStations_Sum_Fields>;
  var_pop?: Maybe<ChargingStations_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingStations_Var_Samp_Fields>;
  variance?: Maybe<ChargingStations_Variance_Fields>;
};

/** aggregate fields of "ChargingStations" */
export type ChargingStations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingStations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingStations" */
export type ChargingStations_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingStations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingStations_Max_Order_By>;
  min?: InputMaybe<ChargingStations_Min_Order_By>;
  stddev?: InputMaybe<ChargingStations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingStations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingStations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingStations_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingStations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingStations_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingStations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ChargingStations_Append_Input = {
  capabilities?: InputMaybe<Scalars['jsonb']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "ChargingStations" */
export type ChargingStations_Arr_Rel_Insert_Input = {
  data: Array<ChargingStations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingStations_Avg_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingStations" */
export type ChargingStations_Avg_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingStations". All fields are combined with a logical 'AND'. */
export type ChargingStations_Bool_Exp = {
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Bool_Exp>;
  ChargingStationSequences?: InputMaybe<ChargingStationSequences_Bool_Exp>;
  ChargingStationSequences_aggregate?: InputMaybe<ChargingStationSequences_Aggregate_Bool_Exp>;
  Connectors?: InputMaybe<Connectors_Bool_Exp>;
  Connectors_aggregate?: InputMaybe<Connectors_Aggregate_Bool_Exp>;
  Evses?: InputMaybe<Evses_Bool_Exp>;
  Evses_aggregate?: InputMaybe<Evses_Aggregate_Bool_Exp>;
  LatestStatusNotifications?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
  LatestStatusNotifications_aggregate?: InputMaybe<LatestStatusNotifications_Aggregate_Bool_Exp>;
  Location?: InputMaybe<Locations_Bool_Exp>;
  StatusNotifications?: InputMaybe<StatusNotifications_Bool_Exp>;
  StatusNotifications_aggregate?: InputMaybe<StatusNotifications_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingStations_Bool_Exp>>;
  _not?: InputMaybe<ChargingStations_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingStations_Bool_Exp>>;
  capabilities?: InputMaybe<Jsonb_Comparison_Exp>;
  chargeBoxSerialNumber?: InputMaybe<String_Comparison_Exp>;
  chargePointModel?: InputMaybe<String_Comparison_Exp>;
  chargePointSerialNumber?: InputMaybe<String_Comparison_Exp>;
  chargePointVendor?: InputMaybe<String_Comparison_Exp>;
  coordinates?: InputMaybe<Geometry_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  firmwareVersion?: InputMaybe<String_Comparison_Exp>;
  floorLevel?: InputMaybe<String_Comparison_Exp>;
  iccid?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  imsi?: InputMaybe<String_Comparison_Exp>;
  isOnline?: InputMaybe<Boolean_Comparison_Exp>;
  locationId?: InputMaybe<Int_Comparison_Exp>;
  meterSerialNumber?: InputMaybe<String_Comparison_Exp>;
  meterType?: InputMaybe<String_Comparison_Exp>;
  parkingRestrictions?: InputMaybe<Jsonb_Comparison_Exp>;
  protocol?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingStations" */
export type ChargingStations_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ChargingStations_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ChargingStations_Delete_At_Path_Input = {
  capabilities?: InputMaybe<Array<Scalars['String']['input']>>;
  parkingRestrictions?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ChargingStations_Delete_Elem_Input = {
  capabilities?: InputMaybe<Scalars['Int']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ChargingStations_Delete_Key_Input = {
  capabilities?: InputMaybe<Scalars['String']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "ChargingStations" */
export type ChargingStations_Inc_Input = {
  locationId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingStations" */
export type ChargingStations_Insert_Input = {
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Arr_Rel_Insert_Input>;
  ChargingStationSequences?: InputMaybe<ChargingStationSequences_Arr_Rel_Insert_Input>;
  Connectors?: InputMaybe<Connectors_Arr_Rel_Insert_Input>;
  Evses?: InputMaybe<Evses_Arr_Rel_Insert_Input>;
  LatestStatusNotifications?: InputMaybe<LatestStatusNotifications_Arr_Rel_Insert_Input>;
  Location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  StatusNotifications?: InputMaybe<StatusNotifications_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  capabilities?: InputMaybe<Scalars['jsonb']['input']>;
  chargeBoxSerialNumber?: InputMaybe<Scalars['String']['input']>;
  chargePointModel?: InputMaybe<Scalars['String']['input']>;
  chargePointSerialNumber?: InputMaybe<Scalars['String']['input']>;
  chargePointVendor?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firmwareVersion?: InputMaybe<Scalars['String']['input']>;
  floorLevel?: InputMaybe<Scalars['String']['input']>;
  iccid?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  imsi?: InputMaybe<Scalars['String']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  meterSerialNumber?: InputMaybe<Scalars['String']['input']>;
  meterType?: InputMaybe<Scalars['String']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['jsonb']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingStations_Max_Fields = {
  chargeBoxSerialNumber?: Maybe<Scalars['String']['output']>;
  chargePointModel?: Maybe<Scalars['String']['output']>;
  chargePointSerialNumber?: Maybe<Scalars['String']['output']>;
  chargePointVendor?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  firmwareVersion?: Maybe<Scalars['String']['output']>;
  floorLevel?: Maybe<Scalars['String']['output']>;
  iccid?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  imsi?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  meterSerialNumber?: Maybe<Scalars['String']['output']>;
  meterType?: Maybe<Scalars['String']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingStations" */
export type ChargingStations_Max_Order_By = {
  chargeBoxSerialNumber?: InputMaybe<Order_By>;
  chargePointModel?: InputMaybe<Order_By>;
  chargePointSerialNumber?: InputMaybe<Order_By>;
  chargePointVendor?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  firmwareVersion?: InputMaybe<Order_By>;
  floorLevel?: InputMaybe<Order_By>;
  iccid?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imsi?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  meterSerialNumber?: InputMaybe<Order_By>;
  meterType?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingStations_Min_Fields = {
  chargeBoxSerialNumber?: Maybe<Scalars['String']['output']>;
  chargePointModel?: Maybe<Scalars['String']['output']>;
  chargePointSerialNumber?: Maybe<Scalars['String']['output']>;
  chargePointVendor?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  firmwareVersion?: Maybe<Scalars['String']['output']>;
  floorLevel?: Maybe<Scalars['String']['output']>;
  iccid?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  imsi?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  meterSerialNumber?: Maybe<Scalars['String']['output']>;
  meterType?: Maybe<Scalars['String']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingStations" */
export type ChargingStations_Min_Order_By = {
  chargeBoxSerialNumber?: InputMaybe<Order_By>;
  chargePointModel?: InputMaybe<Order_By>;
  chargePointSerialNumber?: InputMaybe<Order_By>;
  chargePointVendor?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  firmwareVersion?: InputMaybe<Order_By>;
  floorLevel?: InputMaybe<Order_By>;
  iccid?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imsi?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  meterSerialNumber?: InputMaybe<Order_By>;
  meterType?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingStations" */
export type ChargingStations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingStations>;
};

/** input type for inserting object relation for remote table "ChargingStations" */
export type ChargingStations_Obj_Rel_Insert_Input = {
  data: ChargingStations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** on_conflict condition type for table "ChargingStations" */
export type ChargingStations_On_Conflict = {
  constraint: ChargingStations_Constraint;
  update_columns?: Array<ChargingStations_Update_Column>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingStations". */
export type ChargingStations_Order_By = {
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Order_By>;
  ChargingStationSequences_aggregate?: InputMaybe<ChargingStationSequences_Aggregate_Order_By>;
  Connectors_aggregate?: InputMaybe<Connectors_Aggregate_Order_By>;
  Evses_aggregate?: InputMaybe<Evses_Aggregate_Order_By>;
  LatestStatusNotifications_aggregate?: InputMaybe<LatestStatusNotifications_Aggregate_Order_By>;
  Location?: InputMaybe<Locations_Order_By>;
  StatusNotifications_aggregate?: InputMaybe<StatusNotifications_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  capabilities?: InputMaybe<Order_By>;
  chargeBoxSerialNumber?: InputMaybe<Order_By>;
  chargePointModel?: InputMaybe<Order_By>;
  chargePointSerialNumber?: InputMaybe<Order_By>;
  chargePointVendor?: InputMaybe<Order_By>;
  coordinates?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  firmwareVersion?: InputMaybe<Order_By>;
  floorLevel?: InputMaybe<Order_By>;
  iccid?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  imsi?: InputMaybe<Order_By>;
  isOnline?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  meterSerialNumber?: InputMaybe<Order_By>;
  meterType?: InputMaybe<Order_By>;
  parkingRestrictions?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingStations */
export type ChargingStations_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ChargingStations_Prepend_Input = {
  capabilities?: InputMaybe<Scalars['jsonb']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "ChargingStations" */
export type ChargingStations_Select_Column =
  /** column name */
  | 'capabilities'
  /** column name */
  | 'chargeBoxSerialNumber'
  /** column name */
  | 'chargePointModel'
  /** column name */
  | 'chargePointSerialNumber'
  /** column name */
  | 'chargePointVendor'
  /** column name */
  | 'coordinates'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'firmwareVersion'
  /** column name */
  | 'floorLevel'
  /** column name */
  | 'iccid'
  /** column name */
  | 'id'
  /** column name */
  | 'imsi'
  /** column name */
  | 'isOnline'
  /** column name */
  | 'locationId'
  /** column name */
  | 'meterSerialNumber'
  /** column name */
  | 'meterType'
  /** column name */
  | 'parkingRestrictions'
  /** column name */
  | 'protocol'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** select "ChargingStations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ChargingStations" */
export type ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isOnline';

/** select "ChargingStations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ChargingStations" */
export type ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isOnline';

/** input type for updating data in table "ChargingStations" */
export type ChargingStations_Set_Input = {
  capabilities?: InputMaybe<Scalars['jsonb']['input']>;
  chargeBoxSerialNumber?: InputMaybe<Scalars['String']['input']>;
  chargePointModel?: InputMaybe<Scalars['String']['input']>;
  chargePointSerialNumber?: InputMaybe<Scalars['String']['input']>;
  chargePointVendor?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firmwareVersion?: InputMaybe<Scalars['String']['input']>;
  floorLevel?: InputMaybe<Scalars['String']['input']>;
  iccid?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  imsi?: InputMaybe<Scalars['String']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  meterSerialNumber?: InputMaybe<Scalars['String']['input']>;
  meterType?: InputMaybe<Scalars['String']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['jsonb']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingStations_Stddev_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingStations" */
export type ChargingStations_Stddev_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingStations_Stddev_Pop_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingStations" */
export type ChargingStations_Stddev_Pop_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingStations_Stddev_Samp_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingStations" */
export type ChargingStations_Stddev_Samp_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingStations" */
export type ChargingStations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingStations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingStations_Stream_Cursor_Value_Input = {
  capabilities?: InputMaybe<Scalars['jsonb']['input']>;
  chargeBoxSerialNumber?: InputMaybe<Scalars['String']['input']>;
  chargePointModel?: InputMaybe<Scalars['String']['input']>;
  chargePointSerialNumber?: InputMaybe<Scalars['String']['input']>;
  chargePointVendor?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  firmwareVersion?: InputMaybe<Scalars['String']['input']>;
  floorLevel?: InputMaybe<Scalars['String']['input']>;
  iccid?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  imsi?: InputMaybe<Scalars['String']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  meterSerialNumber?: InputMaybe<Scalars['String']['input']>;
  meterType?: InputMaybe<Scalars['String']['input']>;
  parkingRestrictions?: InputMaybe<Scalars['jsonb']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingStations_Sum_Fields = {
  locationId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingStations" */
export type ChargingStations_Sum_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingStations" */
export type ChargingStations_Update_Column =
  /** column name */
  | 'capabilities'
  /** column name */
  | 'chargeBoxSerialNumber'
  /** column name */
  | 'chargePointModel'
  /** column name */
  | 'chargePointSerialNumber'
  /** column name */
  | 'chargePointVendor'
  /** column name */
  | 'coordinates'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'firmwareVersion'
  /** column name */
  | 'floorLevel'
  /** column name */
  | 'iccid'
  /** column name */
  | 'id'
  /** column name */
  | 'imsi'
  /** column name */
  | 'isOnline'
  /** column name */
  | 'locationId'
  /** column name */
  | 'meterSerialNumber'
  /** column name */
  | 'meterType'
  /** column name */
  | 'parkingRestrictions'
  /** column name */
  | 'protocol'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type ChargingStations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ChargingStations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ChargingStations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ChargingStations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ChargingStations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingStations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ChargingStations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingStations_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingStations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingStations_Var_Pop_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingStations" */
export type ChargingStations_Var_Pop_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingStations_Var_Samp_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingStations" */
export type ChargingStations_Var_Samp_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingStations_Variance_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingStations" */
export type ChargingStations_Variance_Order_By = {
  locationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ComponentVariables" */
export type ComponentVariables = {
  /** An object relationship */
  Component: Components;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Variable: Variables;
  componentId: Scalars['Int']['output'];
  createdAt: Scalars['timestamptz']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  variableId: Scalars['Int']['output'];
};

/** aggregated selection of "ComponentVariables" */
export type ComponentVariables_Aggregate = {
  aggregate?: Maybe<ComponentVariables_Aggregate_Fields>;
  nodes: Array<ComponentVariables>;
};

export type ComponentVariables_Aggregate_Bool_Exp = {
  count?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp_Count>;
};

export type ComponentVariables_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ComponentVariables_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ComponentVariables" */
export type ComponentVariables_Aggregate_Fields = {
  avg?: Maybe<ComponentVariables_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ComponentVariables_Max_Fields>;
  min?: Maybe<ComponentVariables_Min_Fields>;
  stddev?: Maybe<ComponentVariables_Stddev_Fields>;
  stddev_pop?: Maybe<ComponentVariables_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ComponentVariables_Stddev_Samp_Fields>;
  sum?: Maybe<ComponentVariables_Sum_Fields>;
  var_pop?: Maybe<ComponentVariables_Var_Pop_Fields>;
  var_samp?: Maybe<ComponentVariables_Var_Samp_Fields>;
  variance?: Maybe<ComponentVariables_Variance_Fields>;
};

/** aggregate fields of "ComponentVariables" */
export type ComponentVariables_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ComponentVariables" */
export type ComponentVariables_Aggregate_Order_By = {
  avg?: InputMaybe<ComponentVariables_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ComponentVariables_Max_Order_By>;
  min?: InputMaybe<ComponentVariables_Min_Order_By>;
  stddev?: InputMaybe<ComponentVariables_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ComponentVariables_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ComponentVariables_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ComponentVariables_Sum_Order_By>;
  var_pop?: InputMaybe<ComponentVariables_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ComponentVariables_Var_Samp_Order_By>;
  variance?: InputMaybe<ComponentVariables_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ComponentVariables" */
export type ComponentVariables_Arr_Rel_Insert_Input = {
  data: Array<ComponentVariables_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ComponentVariables_On_Conflict>;
};

/** aggregate avg on columns */
export type ComponentVariables_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ComponentVariables" */
export type ComponentVariables_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ComponentVariables". All fields are combined with a logical 'AND'. */
export type ComponentVariables_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  _and?: InputMaybe<Array<ComponentVariables_Bool_Exp>>;
  _not?: InputMaybe<ComponentVariables_Bool_Exp>;
  _or?: InputMaybe<Array<ComponentVariables_Bool_Exp>>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "ComponentVariables" */
export type ComponentVariables_Constraint =
  /** unique or primary key constraint on columns "componentId", "variableId" */
  'ComponentVariables_pkey';

/** input type for incrementing numeric columns in table "ComponentVariables" */
export type ComponentVariables_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ComponentVariables" */
export type ComponentVariables_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type ComponentVariables_Max_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "ComponentVariables" */
export type ComponentVariables_Max_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ComponentVariables_Min_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "ComponentVariables" */
export type ComponentVariables_Min_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ComponentVariables" */
export type ComponentVariables_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ComponentVariables>;
};

/** on_conflict condition type for table "ComponentVariables" */
export type ComponentVariables_On_Conflict = {
  constraint: ComponentVariables_Constraint;
  update_columns?: Array<ComponentVariables_Update_Column>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** Ordering options when selecting data from "ComponentVariables". */
export type ComponentVariables_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ComponentVariables */
export type ComponentVariables_Pk_Columns_Input = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

/** select columns of table "ComponentVariables" */
export type ComponentVariables_Select_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId';

/** input type for updating data in table "ComponentVariables" */
export type ComponentVariables_Set_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type ComponentVariables_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ComponentVariables" */
export type ComponentVariables_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ComponentVariables_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ComponentVariables" */
export type ComponentVariables_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ComponentVariables_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ComponentVariables" */
export type ComponentVariables_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ComponentVariables" */
export type ComponentVariables_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ComponentVariables_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ComponentVariables_Stream_Cursor_Value_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type ComponentVariables_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ComponentVariables" */
export type ComponentVariables_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "ComponentVariables" */
export type ComponentVariables_Update_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId';

export type ComponentVariables_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ComponentVariables_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ComponentVariables_Set_Input>;
  /** filter the rows which have to be updated */
  where: ComponentVariables_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ComponentVariables_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ComponentVariables" */
export type ComponentVariables_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ComponentVariables_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ComponentVariables" */
export type ComponentVariables_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ComponentVariables_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ComponentVariables" */
export type ComponentVariables_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Components" */
export type Components = {
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** An object relationship */
  EvseType?: Maybe<EvseTypes>;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Components" */
export type ComponentsComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** aggregated selection of "Components" */
export type Components_Aggregate = {
  aggregate?: Maybe<Components_Aggregate_Fields>;
  nodes: Array<Components>;
};

export type Components_Aggregate_Bool_Exp = {
  count?: InputMaybe<Components_Aggregate_Bool_Exp_Count>;
};

export type Components_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Components_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Components_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Components" */
export type Components_Aggregate_Fields = {
  avg?: Maybe<Components_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Components_Max_Fields>;
  min?: Maybe<Components_Min_Fields>;
  stddev?: Maybe<Components_Stddev_Fields>;
  stddev_pop?: Maybe<Components_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Components_Stddev_Samp_Fields>;
  sum?: Maybe<Components_Sum_Fields>;
  var_pop?: Maybe<Components_Var_Pop_Fields>;
  var_samp?: Maybe<Components_Var_Samp_Fields>;
  variance?: Maybe<Components_Variance_Fields>;
};

/** aggregate fields of "Components" */
export type Components_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Components_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Components" */
export type Components_Aggregate_Order_By = {
  avg?: InputMaybe<Components_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Components_Max_Order_By>;
  min?: InputMaybe<Components_Min_Order_By>;
  stddev?: InputMaybe<Components_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Components_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Components_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Components_Sum_Order_By>;
  var_pop?: InputMaybe<Components_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Components_Var_Samp_Order_By>;
  variance?: InputMaybe<Components_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Components" */
export type Components_Arr_Rel_Insert_Input = {
  data: Array<Components_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** aggregate avg on columns */
export type Components_Avg_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Components" */
export type Components_Avg_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Components". All fields are combined with a logical 'AND'. */
export type Components_Bool_Exp = {
  ComponentVariables?: InputMaybe<ComponentVariables_Bool_Exp>;
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp>;
  EventData?: InputMaybe<EventData_Bool_Exp>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Bool_Exp>;
  EvseType?: InputMaybe<EvseTypes_Bool_Exp>;
  MessageInfos?: InputMaybe<MessageInfos_Bool_Exp>;
  MessageInfos_aggregate?: InputMaybe<MessageInfos_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Bool_Exp>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Components_Bool_Exp>>;
  _not?: InputMaybe<Components_Bool_Exp>;
  _or?: InputMaybe<Array<Components_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  instance?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Components" */
export type Components_Constraint =
  /** unique or primary key constraint on columns "instance", "name" */
  | 'Components_name_instance_key'
  /** unique or primary key constraint on columns "id" */
  | 'Components_pkey'
  /** unique or primary key constraint on columns "name" */
  | 'components_name';

/** input type for incrementing numeric columns in table "Components" */
export type Components_Inc_Input = {
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Components" */
export type Components_Insert_Input = {
  ComponentVariables?: InputMaybe<ComponentVariables_Arr_Rel_Insert_Input>;
  EventData?: InputMaybe<EventData_Arr_Rel_Insert_Input>;
  EvseType?: InputMaybe<EvseTypes_Obj_Rel_Insert_Input>;
  MessageInfos?: InputMaybe<MessageInfos_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Components_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Components" */
export type Components_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Components_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Components" */
export type Components_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Components" */
export type Components_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Components>;
};

/** input type for inserting object relation for remote table "Components" */
export type Components_Obj_Rel_Insert_Input = {
  data: Components_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** on_conflict condition type for table "Components" */
export type Components_On_Conflict = {
  constraint: Components_Constraint;
  update_columns?: Array<Components_Update_Column>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** Ordering options when selecting data from "Components". */
export type Components_Order_By = {
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Order_By>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Order_By>;
  EvseType?: InputMaybe<EvseTypes_Order_By>;
  MessageInfos_aggregate?: InputMaybe<MessageInfos_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Components */
export type Components_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Components" */
export type Components_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Components" */
export type Components_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Components_Stddev_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Components" */
export type Components_Stddev_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Components_Stddev_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Components" */
export type Components_Stddev_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Components_Stddev_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Components" */
export type Components_Stddev_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Components" */
export type Components_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Components_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Components_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Components_Sum_Fields = {
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Components" */
export type Components_Sum_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Components" */
export type Components_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type Components_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Components_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Components_Set_Input>;
  /** filter the rows which have to be updated */
  where: Components_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Components_Var_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Components" */
export type Components_Var_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Components_Var_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Components" */
export type Components_Var_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Components_Variance_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Components" */
export type Components_Variance_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "CompositeSchedules" */
export type CompositeSchedules = {
  /** An object relationship */
  Tenant: Tenants;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  chargingSchedulePeriod?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  scheduleStart?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "CompositeSchedules" */
export type CompositeSchedulesChargingSchedulePeriodArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "CompositeSchedules" */
export type CompositeSchedules_Aggregate = {
  aggregate?: Maybe<CompositeSchedules_Aggregate_Fields>;
  nodes: Array<CompositeSchedules>;
};

export type CompositeSchedules_Aggregate_Bool_Exp = {
  count?: InputMaybe<CompositeSchedules_Aggregate_Bool_Exp_Count>;
};

export type CompositeSchedules_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CompositeSchedules_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "CompositeSchedules" */
export type CompositeSchedules_Aggregate_Fields = {
  avg?: Maybe<CompositeSchedules_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CompositeSchedules_Max_Fields>;
  min?: Maybe<CompositeSchedules_Min_Fields>;
  stddev?: Maybe<CompositeSchedules_Stddev_Fields>;
  stddev_pop?: Maybe<CompositeSchedules_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CompositeSchedules_Stddev_Samp_Fields>;
  sum?: Maybe<CompositeSchedules_Sum_Fields>;
  var_pop?: Maybe<CompositeSchedules_Var_Pop_Fields>;
  var_samp?: Maybe<CompositeSchedules_Var_Samp_Fields>;
  variance?: Maybe<CompositeSchedules_Variance_Fields>;
};

/** aggregate fields of "CompositeSchedules" */
export type CompositeSchedules_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "CompositeSchedules" */
export type CompositeSchedules_Aggregate_Order_By = {
  avg?: InputMaybe<CompositeSchedules_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<CompositeSchedules_Max_Order_By>;
  min?: InputMaybe<CompositeSchedules_Min_Order_By>;
  stddev?: InputMaybe<CompositeSchedules_Stddev_Order_By>;
  stddev_pop?: InputMaybe<CompositeSchedules_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<CompositeSchedules_Stddev_Samp_Order_By>;
  sum?: InputMaybe<CompositeSchedules_Sum_Order_By>;
  var_pop?: InputMaybe<CompositeSchedules_Var_Pop_Order_By>;
  var_samp?: InputMaybe<CompositeSchedules_Var_Samp_Order_By>;
  variance?: InputMaybe<CompositeSchedules_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CompositeSchedules_Append_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "CompositeSchedules" */
export type CompositeSchedules_Arr_Rel_Insert_Input = {
  data: Array<CompositeSchedules_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<CompositeSchedules_On_Conflict>;
};

/** aggregate avg on columns */
export type CompositeSchedules_Avg_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Avg_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "CompositeSchedules". All fields are combined with a logical 'AND'. */
export type CompositeSchedules_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<CompositeSchedules_Bool_Exp>>;
  _not?: InputMaybe<CompositeSchedules_Bool_Exp>;
  _or?: InputMaybe<Array<CompositeSchedules_Bool_Exp>>;
  chargingRateUnit?: InputMaybe<String_Comparison_Exp>;
  chargingSchedulePeriod?: InputMaybe<Jsonb_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  duration?: InputMaybe<Int_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  scheduleStart?: InputMaybe<Timestamptz_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "CompositeSchedules" */
export type CompositeSchedules_Constraint =
  /** unique or primary key constraint on columns "id" */
  'CompositeSchedules_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CompositeSchedules_Delete_At_Path_Input = {
  chargingSchedulePeriod?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CompositeSchedules_Delete_Elem_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CompositeSchedules_Delete_Key_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "CompositeSchedules" */
export type CompositeSchedules_Inc_Input = {
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "CompositeSchedules" */
export type CompositeSchedules_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  scheduleStart?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type CompositeSchedules_Max_Fields = {
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  scheduleStart?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Max_Order_By = {
  chargingRateUnit?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  scheduleStart?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type CompositeSchedules_Min_Fields = {
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  scheduleStart?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Min_Order_By = {
  chargingRateUnit?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  scheduleStart?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "CompositeSchedules" */
export type CompositeSchedules_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<CompositeSchedules>;
};

/** on_conflict condition type for table "CompositeSchedules" */
export type CompositeSchedules_On_Conflict = {
  constraint: CompositeSchedules_Constraint;
  update_columns?: Array<CompositeSchedules_Update_Column>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

/** Ordering options when selecting data from "CompositeSchedules". */
export type CompositeSchedules_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  chargingSchedulePeriod?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  scheduleStart?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: CompositeSchedules */
export type CompositeSchedules_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CompositeSchedules_Prepend_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "CompositeSchedules" */
export type CompositeSchedules_Select_Column =
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'duration'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'scheduleStart'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "CompositeSchedules" */
export type CompositeSchedules_Set_Input = {
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  scheduleStart?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type CompositeSchedules_Stddev_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Stddev_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type CompositeSchedules_Stddev_Pop_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Stddev_Pop_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type CompositeSchedules_Stddev_Samp_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Stddev_Samp_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "CompositeSchedules" */
export type CompositeSchedules_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CompositeSchedules_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CompositeSchedules_Stream_Cursor_Value_Input = {
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  scheduleStart?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type CompositeSchedules_Sum_Fields = {
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Sum_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "CompositeSchedules" */
export type CompositeSchedules_Update_Column =
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'duration'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'scheduleStart'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type CompositeSchedules_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<CompositeSchedules_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<CompositeSchedules_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<CompositeSchedules_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<CompositeSchedules_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CompositeSchedules_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<CompositeSchedules_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CompositeSchedules_Set_Input>;
  /** filter the rows which have to be updated */
  where: CompositeSchedules_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CompositeSchedules_Var_Pop_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Var_Pop_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type CompositeSchedules_Var_Samp_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Var_Samp_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type CompositeSchedules_Variance_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "CompositeSchedules" */
export type CompositeSchedules_Variance_Order_By = {
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Connectors" */
export type Connectors = {
  /** An object relationship */
  ChargingStation: ChargingStations;
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An array relationship */
  StartTransactions: Array<StartTransactions>;
  /** An aggregate relationship */
  StartTransactions_aggregate: StartTransactions_Aggregate;
  /** An array relationship */
  Tariffs: Array<Tariffs>;
  /** An aggregate relationship */
  Tariffs_aggregate: Tariffs_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  connectorId: Scalars['Int']['output'];
  createdAt: Scalars['timestamptz']['output'];
  errorCode?: Maybe<Scalars['enum_Connectors_errorCode']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Int']['output']>;
  format?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  info?: Maybe<Scalars['String']['output']>;
  maximumAmperage?: Maybe<Scalars['Int']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Int']['output']>;
  maximumVoltage?: Maybe<Scalars['Int']['output']>;
  powerType?: Maybe<Scalars['String']['output']>;
  stationId: Scalars['String']['output'];
  status?: Maybe<Scalars['enum_Connectors_status']['output']>;
  tenantId: Scalars['Int']['output'];
  termsAndConditionsUrl?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "Connectors" */
export type ConnectorsStartTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

/** columns and relationships of "Connectors" */
export type ConnectorsStartTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

/** columns and relationships of "Connectors" */
export type ConnectorsTariffsArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

/** columns and relationships of "Connectors" */
export type ConnectorsTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

/** columns and relationships of "Connectors" */
export type ConnectorsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Connectors" */
export type ConnectorsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** aggregated selection of "Connectors" */
export type Connectors_Aggregate = {
  aggregate?: Maybe<Connectors_Aggregate_Fields>;
  nodes: Array<Connectors>;
};

export type Connectors_Aggregate_Bool_Exp = {
  count?: InputMaybe<Connectors_Aggregate_Bool_Exp_Count>;
};

export type Connectors_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Connectors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Connectors_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Connectors" */
export type Connectors_Aggregate_Fields = {
  avg?: Maybe<Connectors_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Connectors_Max_Fields>;
  min?: Maybe<Connectors_Min_Fields>;
  stddev?: Maybe<Connectors_Stddev_Fields>;
  stddev_pop?: Maybe<Connectors_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Connectors_Stddev_Samp_Fields>;
  sum?: Maybe<Connectors_Sum_Fields>;
  var_pop?: Maybe<Connectors_Var_Pop_Fields>;
  var_samp?: Maybe<Connectors_Var_Samp_Fields>;
  variance?: Maybe<Connectors_Variance_Fields>;
};

/** aggregate fields of "Connectors" */
export type Connectors_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Connectors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Connectors" */
export type Connectors_Aggregate_Order_By = {
  avg?: InputMaybe<Connectors_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Connectors_Max_Order_By>;
  min?: InputMaybe<Connectors_Min_Order_By>;
  stddev?: InputMaybe<Connectors_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Connectors_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Connectors_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Connectors_Sum_Order_By>;
  var_pop?: InputMaybe<Connectors_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Connectors_Var_Samp_Order_By>;
  variance?: InputMaybe<Connectors_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Connectors" */
export type Connectors_Arr_Rel_Insert_Input = {
  data: Array<Connectors_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Connectors_On_Conflict>;
};

/** aggregate avg on columns */
export type Connectors_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Connectors" */
export type Connectors_Avg_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Connectors". All fields are combined with a logical 'AND'. */
export type Connectors_Bool_Exp = {
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  Evse?: InputMaybe<Evses_Bool_Exp>;
  StartTransactions?: InputMaybe<StartTransactions_Bool_Exp>;
  StartTransactions_aggregate?: InputMaybe<StartTransactions_Aggregate_Bool_Exp>;
  Tariffs?: InputMaybe<Tariffs_Bool_Exp>;
  Tariffs_aggregate?: InputMaybe<Tariffs_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Connectors_Bool_Exp>>;
  _not?: InputMaybe<Connectors_Bool_Exp>;
  _or?: InputMaybe<Array<Connectors_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  errorCode?: InputMaybe<Enum_Connectors_ErrorCode_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  evseTypeConnectorId?: InputMaybe<Int_Comparison_Exp>;
  format?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  info?: InputMaybe<String_Comparison_Exp>;
  maximumAmperage?: InputMaybe<Int_Comparison_Exp>;
  maximumPowerWatts?: InputMaybe<Int_Comparison_Exp>;
  maximumVoltage?: InputMaybe<Int_Comparison_Exp>;
  powerType?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<Enum_Connectors_Status_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  termsAndConditionsUrl?: InputMaybe<String_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  vendorErrorCode?: InputMaybe<String_Comparison_Exp>;
  vendorId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Connectors" */
export type Connectors_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Connectors_pkey'
  /** unique or primary key constraint on columns "stationId", "connectorId" */
  | 'Connectors_stationId_connectorId_key';

/** input type for incrementing numeric columns in table "Connectors" */
export type Connectors_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  evseTypeConnectorId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maximumAmperage?: InputMaybe<Scalars['Int']['input']>;
  maximumPowerWatts?: InputMaybe<Scalars['Int']['input']>;
  maximumVoltage?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Connectors" */
export type Connectors_Insert_Input = {
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  StartTransactions?: InputMaybe<StartTransactions_Arr_Rel_Insert_Input>;
  Tariffs?: InputMaybe<Tariffs_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorCode?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  evseTypeConnectorId?: InputMaybe<Scalars['Int']['input']>;
  format?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  maximumAmperage?: InputMaybe<Scalars['Int']['input']>;
  maximumPowerWatts?: InputMaybe<Scalars['Int']['input']>;
  maximumVoltage?: InputMaybe<Scalars['Int']['input']>;
  powerType?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  termsAndConditionsUrl?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Connectors_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorCode?: Maybe<Scalars['enum_Connectors_errorCode']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Int']['output']>;
  format?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  maximumAmperage?: Maybe<Scalars['Int']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Int']['output']>;
  maximumVoltage?: Maybe<Scalars['Int']['output']>;
  powerType?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['enum_Connectors_status']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  termsAndConditionsUrl?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "Connectors" */
export type Connectors_Max_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  format?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  powerType?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  termsAndConditionsUrl?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Connectors_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorCode?: Maybe<Scalars['enum_Connectors_errorCode']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Int']['output']>;
  format?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  maximumAmperage?: Maybe<Scalars['Int']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Int']['output']>;
  maximumVoltage?: Maybe<Scalars['Int']['output']>;
  powerType?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['enum_Connectors_status']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  termsAndConditionsUrl?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "Connectors" */
export type Connectors_Min_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  format?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  powerType?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  termsAndConditionsUrl?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Connectors" */
export type Connectors_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Connectors>;
};

/** input type for inserting object relation for remote table "Connectors" */
export type Connectors_Obj_Rel_Insert_Input = {
  data: Connectors_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Connectors_On_Conflict>;
};

/** on_conflict condition type for table "Connectors" */
export type Connectors_On_Conflict = {
  constraint: Connectors_Constraint;
  update_columns?: Array<Connectors_Update_Column>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** Ordering options when selecting data from "Connectors". */
export type Connectors_Order_By = {
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  Evse?: InputMaybe<Evses_Order_By>;
  StartTransactions_aggregate?: InputMaybe<StartTransactions_Aggregate_Order_By>;
  Tariffs_aggregate?: InputMaybe<Tariffs_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  format?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  powerType?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  termsAndConditionsUrl?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Connectors */
export type Connectors_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Connectors" */
export type Connectors_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'errorCode'
  /** column name */
  | 'evseId'
  /** column name */
  | 'evseTypeConnectorId'
  /** column name */
  | 'format'
  /** column name */
  | 'id'
  /** column name */
  | 'info'
  /** column name */
  | 'maximumAmperage'
  /** column name */
  | 'maximumPowerWatts'
  /** column name */
  | 'maximumVoltage'
  /** column name */
  | 'powerType'
  /** column name */
  | 'stationId'
  /** column name */
  | 'status'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'termsAndConditionsUrl'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'vendorErrorCode'
  /** column name */
  | 'vendorId';

/** input type for updating data in table "Connectors" */
export type Connectors_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorCode?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  evseTypeConnectorId?: InputMaybe<Scalars['Int']['input']>;
  format?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  maximumAmperage?: InputMaybe<Scalars['Int']['input']>;
  maximumPowerWatts?: InputMaybe<Scalars['Int']['input']>;
  maximumVoltage?: InputMaybe<Scalars['Int']['input']>;
  powerType?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  termsAndConditionsUrl?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Connectors_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Connectors" */
export type Connectors_Stddev_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Connectors_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Connectors" */
export type Connectors_Stddev_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Connectors_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Connectors" */
export type Connectors_Stddev_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Connectors" */
export type Connectors_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Connectors_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Connectors_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorCode?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  evseTypeConnectorId?: InputMaybe<Scalars['Int']['input']>;
  format?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  maximumAmperage?: InputMaybe<Scalars['Int']['input']>;
  maximumPowerWatts?: InputMaybe<Scalars['Int']['input']>;
  maximumVoltage?: InputMaybe<Scalars['Int']['input']>;
  powerType?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  termsAndConditionsUrl?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Connectors_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maximumAmperage?: Maybe<Scalars['Int']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Int']['output']>;
  maximumVoltage?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Connectors" */
export type Connectors_Sum_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Connectors" */
export type Connectors_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'errorCode'
  /** column name */
  | 'evseId'
  /** column name */
  | 'evseTypeConnectorId'
  /** column name */
  | 'format'
  /** column name */
  | 'id'
  /** column name */
  | 'info'
  /** column name */
  | 'maximumAmperage'
  /** column name */
  | 'maximumPowerWatts'
  /** column name */
  | 'maximumVoltage'
  /** column name */
  | 'powerType'
  /** column name */
  | 'stationId'
  /** column name */
  | 'status'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'termsAndConditionsUrl'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'vendorErrorCode'
  /** column name */
  | 'vendorId';

export type Connectors_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Connectors_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Connectors_Set_Input>;
  /** filter the rows which have to be updated */
  where: Connectors_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Connectors_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Connectors" */
export type Connectors_Var_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Connectors_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Connectors" */
export type Connectors_Var_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Connectors_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  evseTypeConnectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maximumAmperage?: Maybe<Scalars['Float']['output']>;
  maximumPowerWatts?: Maybe<Scalars['Float']['output']>;
  maximumVoltage?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Connectors" */
export type Connectors_Variance_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeConnectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maximumAmperage?: InputMaybe<Order_By>;
  maximumPowerWatts?: InputMaybe<Order_By>;
  maximumVoltage?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "EventData" */
export type EventData = {
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  actualValue?: Maybe<Scalars['String']['output']>;
  cause?: Maybe<Scalars['Int']['output']>;
  cleared?: Maybe<Scalars['Boolean']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  eventId?: Maybe<Scalars['Int']['output']>;
  eventNotificationType?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  techCode?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  trigger?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "EventData" */
export type EventData_Aggregate = {
  aggregate?: Maybe<EventData_Aggregate_Fields>;
  nodes: Array<EventData>;
};

export type EventData_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<EventData_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<EventData_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<EventData_Aggregate_Bool_Exp_Count>;
};

export type EventData_Aggregate_Bool_Exp_Bool_And = {
  arguments: EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventData_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type EventData_Aggregate_Bool_Exp_Bool_Or = {
  arguments: EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventData_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type EventData_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<EventData_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventData_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "EventData" */
export type EventData_Aggregate_Fields = {
  avg?: Maybe<EventData_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventData_Max_Fields>;
  min?: Maybe<EventData_Min_Fields>;
  stddev?: Maybe<EventData_Stddev_Fields>;
  stddev_pop?: Maybe<EventData_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<EventData_Stddev_Samp_Fields>;
  sum?: Maybe<EventData_Sum_Fields>;
  var_pop?: Maybe<EventData_Var_Pop_Fields>;
  var_samp?: Maybe<EventData_Var_Samp_Fields>;
  variance?: Maybe<EventData_Variance_Fields>;
};

/** aggregate fields of "EventData" */
export type EventData_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<EventData_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "EventData" */
export type EventData_Aggregate_Order_By = {
  avg?: InputMaybe<EventData_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<EventData_Max_Order_By>;
  min?: InputMaybe<EventData_Min_Order_By>;
  stddev?: InputMaybe<EventData_Stddev_Order_By>;
  stddev_pop?: InputMaybe<EventData_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<EventData_Stddev_Samp_Order_By>;
  sum?: InputMaybe<EventData_Sum_Order_By>;
  var_pop?: InputMaybe<EventData_Var_Pop_Order_By>;
  var_samp?: InputMaybe<EventData_Var_Samp_Order_By>;
  variance?: InputMaybe<EventData_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "EventData" */
export type EventData_Arr_Rel_Insert_Input = {
  data: Array<EventData_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<EventData_On_Conflict>;
};

/** aggregate avg on columns */
export type EventData_Avg_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "EventData" */
export type EventData_Avg_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "EventData". All fields are combined with a logical 'AND'. */
export type EventData_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  _and?: InputMaybe<Array<EventData_Bool_Exp>>;
  _not?: InputMaybe<EventData_Bool_Exp>;
  _or?: InputMaybe<Array<EventData_Bool_Exp>>;
  actualValue?: InputMaybe<String_Comparison_Exp>;
  cause?: InputMaybe<Int_Comparison_Exp>;
  cleared?: InputMaybe<Boolean_Comparison_Exp>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  eventId?: InputMaybe<Int_Comparison_Exp>;
  eventNotificationType?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  techCode?: InputMaybe<String_Comparison_Exp>;
  techInfo?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionId?: InputMaybe<String_Comparison_Exp>;
  trigger?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
  variableMonitoringId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventData" */
export type EventData_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'EventData_pkey'
  /** unique or primary key constraint on columns "stationId", "eventId" */
  | 'EventData_stationId_eventId_key';

/** input type for incrementing numeric columns in table "EventData" */
export type EventData_Inc_Input = {
  cause?: InputMaybe<Scalars['Int']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "EventData" */
export type EventData_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  actualValue?: InputMaybe<Scalars['String']['input']>;
  cause?: InputMaybe<Scalars['Int']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  eventNotificationType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techCode?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  trigger?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type EventData_Max_Fields = {
  actualValue?: Maybe<Scalars['String']['output']>;
  cause?: Maybe<Scalars['Int']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['Int']['output']>;
  eventNotificationType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  techCode?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  trigger?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "EventData" */
export type EventData_Max_Order_By = {
  actualValue?: InputMaybe<Order_By>;
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  eventNotificationType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techCode?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type EventData_Min_Fields = {
  actualValue?: Maybe<Scalars['String']['output']>;
  cause?: Maybe<Scalars['Int']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['Int']['output']>;
  eventNotificationType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  techCode?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  trigger?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "EventData" */
export type EventData_Min_Order_By = {
  actualValue?: InputMaybe<Order_By>;
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  eventNotificationType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techCode?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "EventData" */
export type EventData_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<EventData>;
};

/** on_conflict condition type for table "EventData" */
export type EventData_On_Conflict = {
  constraint: EventData_Constraint;
  update_columns?: Array<EventData_Update_Column>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** Ordering options when selecting data from "EventData". */
export type EventData_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  actualValue?: InputMaybe<Order_By>;
  cause?: InputMaybe<Order_By>;
  cleared?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  eventNotificationType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techCode?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: EventData */
export type EventData_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "EventData" */
export type EventData_Select_Column =
  /** column name */
  | 'actualValue'
  /** column name */
  | 'cause'
  /** column name */
  | 'cleared'
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventId'
  /** column name */
  | 'eventNotificationType'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'techCode'
  /** column name */
  | 'techInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'trigger'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId'
  /** column name */
  | 'variableMonitoringId';

/** select "EventData_aggregate_bool_exp_bool_and_arguments_columns" columns of table "EventData" */
export type EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'cleared';

/** select "EventData_aggregate_bool_exp_bool_or_arguments_columns" columns of table "EventData" */
export type EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'cleared';

/** input type for updating data in table "EventData" */
export type EventData_Set_Input = {
  actualValue?: InputMaybe<Scalars['String']['input']>;
  cause?: InputMaybe<Scalars['Int']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  eventNotificationType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techCode?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  trigger?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type EventData_Stddev_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "EventData" */
export type EventData_Stddev_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type EventData_Stddev_Pop_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "EventData" */
export type EventData_Stddev_Pop_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type EventData_Stddev_Samp_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "EventData" */
export type EventData_Stddev_Samp_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "EventData" */
export type EventData_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: EventData_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type EventData_Stream_Cursor_Value_Input = {
  actualValue?: InputMaybe<Scalars['String']['input']>;
  cause?: InputMaybe<Scalars['Int']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  eventNotificationType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techCode?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  trigger?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type EventData_Sum_Fields = {
  cause?: Maybe<Scalars['Int']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  eventId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "EventData" */
export type EventData_Sum_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** update columns of table "EventData" */
export type EventData_Update_Column =
  /** column name */
  | 'actualValue'
  /** column name */
  | 'cause'
  /** column name */
  | 'cleared'
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventId'
  /** column name */
  | 'eventNotificationType'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'techCode'
  /** column name */
  | 'techInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'trigger'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId'
  /** column name */
  | 'variableMonitoringId';

export type EventData_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<EventData_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<EventData_Set_Input>;
  /** filter the rows which have to be updated */
  where: EventData_Bool_Exp;
};

/** aggregate var_pop on columns */
export type EventData_Var_Pop_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "EventData" */
export type EventData_Var_Pop_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type EventData_Var_Samp_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "EventData" */
export type EventData_Var_Samp_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type EventData_Variance_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "EventData" */
export type EventData_Variance_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypes = {
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "EvseTypes" */
export type EvseTypesVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** aggregated selection of "EvseTypes" */
export type EvseTypes_Aggregate = {
  aggregate?: Maybe<EvseTypes_Aggregate_Fields>;
  nodes: Array<EvseTypes>;
};

export type EvseTypes_Aggregate_Bool_Exp = {
  count?: InputMaybe<EvseTypes_Aggregate_Bool_Exp_Count>;
};

export type EvseTypes_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<EvseTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EvseTypes_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "EvseTypes" */
export type EvseTypes_Aggregate_Fields = {
  avg?: Maybe<EvseTypes_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EvseTypes_Max_Fields>;
  min?: Maybe<EvseTypes_Min_Fields>;
  stddev?: Maybe<EvseTypes_Stddev_Fields>;
  stddev_pop?: Maybe<EvseTypes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<EvseTypes_Stddev_Samp_Fields>;
  sum?: Maybe<EvseTypes_Sum_Fields>;
  var_pop?: Maybe<EvseTypes_Var_Pop_Fields>;
  var_samp?: Maybe<EvseTypes_Var_Samp_Fields>;
  variance?: Maybe<EvseTypes_Variance_Fields>;
};

/** aggregate fields of "EvseTypes" */
export type EvseTypes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<EvseTypes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "EvseTypes" */
export type EvseTypes_Aggregate_Order_By = {
  avg?: InputMaybe<EvseTypes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<EvseTypes_Max_Order_By>;
  min?: InputMaybe<EvseTypes_Min_Order_By>;
  stddev?: InputMaybe<EvseTypes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<EvseTypes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<EvseTypes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<EvseTypes_Sum_Order_By>;
  var_pop?: InputMaybe<EvseTypes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<EvseTypes_Var_Samp_Order_By>;
  variance?: InputMaybe<EvseTypes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "EvseTypes" */
export type EvseTypes_Arr_Rel_Insert_Input = {
  data: Array<EvseTypes_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<EvseTypes_On_Conflict>;
};

/** aggregate avg on columns */
export type EvseTypes_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "EvseTypes" */
export type EvseTypes_Avg_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "EvseTypes". All fields are combined with a logical 'AND'. */
export type EvseTypes_Bool_Exp = {
  Components?: InputMaybe<Components_Bool_Exp>;
  Components_aggregate?: InputMaybe<Components_Aggregate_Bool_Exp>;
  Reservations?: InputMaybe<Reservations_Bool_Exp>;
  Reservations_aggregate?: InputMaybe<Reservations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  TransactionEvents?: InputMaybe<TransactionEvents_Bool_Exp>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<EvseTypes_Bool_Exp>>;
  _not?: InputMaybe<EvseTypes_Bool_Exp>;
  _or?: InputMaybe<Array<EvseTypes_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "EvseTypes" */
export type EvseTypes_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  'EvseTypes_pkey';

/** input type for incrementing numeric columns in table "EvseTypes" */
export type EvseTypes_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "EvseTypes" */
export type EvseTypes_Insert_Input = {
  Components?: InputMaybe<Components_Arr_Rel_Insert_Input>;
  Reservations?: InputMaybe<Reservations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  TransactionEvents?: InputMaybe<TransactionEvents_Arr_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type EvseTypes_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "EvseTypes" */
export type EvseTypes_Max_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type EvseTypes_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "EvseTypes" */
export type EvseTypes_Min_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "EvseTypes" */
export type EvseTypes_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<EvseTypes>;
};

/** input type for inserting object relation for remote table "EvseTypes" */
export type EvseTypes_Obj_Rel_Insert_Input = {
  data: EvseTypes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<EvseTypes_On_Conflict>;
};

/** on_conflict condition type for table "EvseTypes" */
export type EvseTypes_On_Conflict = {
  constraint: EvseTypes_Constraint;
  update_columns?: Array<EvseTypes_Update_Column>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

/** Ordering options when selecting data from "EvseTypes". */
export type EvseTypes_Order_By = {
  Components_aggregate?: InputMaybe<Components_Aggregate_Order_By>;
  Reservations_aggregate?: InputMaybe<Reservations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: EvseTypes */
export type EvseTypes_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "EvseTypes" */
export type EvseTypes_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "EvseTypes" */
export type EvseTypes_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type EvseTypes_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "EvseTypes" */
export type EvseTypes_Stddev_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type EvseTypes_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "EvseTypes" */
export type EvseTypes_Stddev_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type EvseTypes_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "EvseTypes" */
export type EvseTypes_Stddev_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "EvseTypes" */
export type EvseTypes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: EvseTypes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type EvseTypes_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type EvseTypes_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "EvseTypes" */
export type EvseTypes_Sum_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "EvseTypes" */
export type EvseTypes_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type EvseTypes_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<EvseTypes_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<EvseTypes_Set_Input>;
  /** filter the rows which have to be updated */
  where: EvseTypes_Bool_Exp;
};

/** aggregate var_pop on columns */
export type EvseTypes_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "EvseTypes" */
export type EvseTypes_Var_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type EvseTypes_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "EvseTypes" */
export type EvseTypes_Var_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type EvseTypes_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "EvseTypes" */
export type EvseTypes_Variance_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Evses" */
export type Evses = {
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** An object relationship */
  ChargingStation?: Maybe<ChargingStations>;
  /** An array relationship */
  Connectors: Array<Connectors>;
  /** An aggregate relationship */
  Connectors_aggregate: Connectors_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  evseId?: Maybe<Scalars['String']['output']>;
  evseTypeId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  physicalReference?: Maybe<Scalars['String']['output']>;
  removed?: Maybe<Scalars['Boolean']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Evses" */
export type EvsesChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** aggregated selection of "Evses" */
export type Evses_Aggregate = {
  aggregate?: Maybe<Evses_Aggregate_Fields>;
  nodes: Array<Evses>;
};

export type Evses_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Evses_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Evses_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Evses_Aggregate_Bool_Exp_Count>;
};

export type Evses_Aggregate_Bool_Exp_Bool_And = {
  arguments: Evses_Select_Column_Evses_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Evses_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Evses_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Evses_Select_Column_Evses_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Evses_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Evses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Evses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Evses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Evses" */
export type Evses_Aggregate_Fields = {
  avg?: Maybe<Evses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Evses_Max_Fields>;
  min?: Maybe<Evses_Min_Fields>;
  stddev?: Maybe<Evses_Stddev_Fields>;
  stddev_pop?: Maybe<Evses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Evses_Stddev_Samp_Fields>;
  sum?: Maybe<Evses_Sum_Fields>;
  var_pop?: Maybe<Evses_Var_Pop_Fields>;
  var_samp?: Maybe<Evses_Var_Samp_Fields>;
  variance?: Maybe<Evses_Variance_Fields>;
};

/** aggregate fields of "Evses" */
export type Evses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Evses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Evses" */
export type Evses_Aggregate_Order_By = {
  avg?: InputMaybe<Evses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Evses_Max_Order_By>;
  min?: InputMaybe<Evses_Min_Order_By>;
  stddev?: InputMaybe<Evses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Evses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Evses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Evses_Sum_Order_By>;
  var_pop?: InputMaybe<Evses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Evses_Var_Samp_Order_By>;
  variance?: InputMaybe<Evses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Evses" */
export type Evses_Arr_Rel_Insert_Input = {
  data: Array<Evses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** aggregate avg on columns */
export type Evses_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Evses" */
export type Evses_Avg_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Evses". All fields are combined with a logical 'AND'. */
export type Evses_Bool_Exp = {
  ChargingNeeds?: InputMaybe<ChargingNeeds_Bool_Exp>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp>;
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  Connectors?: InputMaybe<Connectors_Bool_Exp>;
  Connectors_aggregate?: InputMaybe<Connectors_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Evses_Bool_Exp>>;
  _not?: InputMaybe<Evses_Bool_Exp>;
  _or?: InputMaybe<Array<Evses_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseId?: InputMaybe<String_Comparison_Exp>;
  evseTypeId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  physicalReference?: InputMaybe<String_Comparison_Exp>;
  removed?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Evses" */
export type Evses_Constraint =
  /** unique or primary key constraint on columns "id", "connectorId" */
  | 'Evses_id_connectorId_key'
  /** unique or primary key constraint on columns "id" */
  | 'Evses_pkey'
  /** unique or primary key constraint on columns "id" */
  | 'evses_id';

/** input type for incrementing numeric columns in table "Evses" */
export type Evses_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  evseTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Evses" */
export type Evses_Insert_Input = {
  ChargingNeeds?: InputMaybe<ChargingNeeds_Arr_Rel_Insert_Input>;
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  Connectors?: InputMaybe<Connectors_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['String']['input']>;
  evseTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  physicalReference?: InputMaybe<Scalars['String']['input']>;
  removed?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Evses_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['String']['output']>;
  evseTypeId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  physicalReference?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Evses" */
export type Evses_Max_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  physicalReference?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Evses_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['String']['output']>;
  evseTypeId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  physicalReference?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Evses" */
export type Evses_Min_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  physicalReference?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Evses" */
export type Evses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Evses>;
};

/** input type for inserting object relation for remote table "Evses" */
export type Evses_Obj_Rel_Insert_Input = {
  data: Evses_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** on_conflict condition type for table "Evses" */
export type Evses_On_Conflict = {
  constraint: Evses_Constraint;
  update_columns?: Array<Evses_Update_Column>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

/** Ordering options when selecting data from "Evses". */
export type Evses_Order_By = {
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Order_By>;
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  Connectors_aggregate?: InputMaybe<Connectors_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  physicalReference?: InputMaybe<Order_By>;
  removed?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Evses */
export type Evses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Evses" */
export type Evses_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'evseTypeId'
  /** column name */
  | 'id'
  /** column name */
  | 'physicalReference'
  /** column name */
  | 'removed'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** select "Evses_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Evses" */
export type Evses_Select_Column_Evses_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'removed';

/** select "Evses_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Evses" */
export type Evses_Select_Column_Evses_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'removed';

/** input type for updating data in table "Evses" */
export type Evses_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['String']['input']>;
  evseTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  physicalReference?: InputMaybe<Scalars['String']['input']>;
  removed?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Evses_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Evses" */
export type Evses_Stddev_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Evses_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Evses" */
export type Evses_Stddev_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Evses_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Evses" */
export type Evses_Stddev_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Evses" */
export type Evses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Evses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Evses_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['String']['input']>;
  evseTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  physicalReference?: InputMaybe<Scalars['String']['input']>;
  removed?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Evses_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  evseTypeId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Evses" */
export type Evses_Sum_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Evses" */
export type Evses_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'evseTypeId'
  /** column name */
  | 'id'
  /** column name */
  | 'physicalReference'
  /** column name */
  | 'removed'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type Evses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Evses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Evses_Set_Input>;
  /** filter the rows which have to be updated */
  where: Evses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Evses_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Evses" */
export type Evses_Var_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Evses_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Evses" */
export type Evses_Var_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Evses_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Evses" */
export type Evses_Variance_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "InstalledCertificates" */
export type InstalledCertificates = {
  /** An object relationship */
  Tenant: Tenants;
  certificateType: Scalars['enum_InstalledCertificates_certificateType']['output'];
  createdAt: Scalars['timestamptz']['output'];
  hashAlgorithm: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  issuerKeyHash: Scalars['String']['output'];
  issuerNameHash: Scalars['String']['output'];
  serialNumber: Scalars['String']['output'];
  stationId: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "InstalledCertificates" */
export type InstalledCertificates_Aggregate = {
  aggregate?: Maybe<InstalledCertificates_Aggregate_Fields>;
  nodes: Array<InstalledCertificates>;
};

export type InstalledCertificates_Aggregate_Bool_Exp = {
  count?: InputMaybe<InstalledCertificates_Aggregate_Bool_Exp_Count>;
};

export type InstalledCertificates_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<InstalledCertificates_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "InstalledCertificates" */
export type InstalledCertificates_Aggregate_Fields = {
  avg?: Maybe<InstalledCertificates_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<InstalledCertificates_Max_Fields>;
  min?: Maybe<InstalledCertificates_Min_Fields>;
  stddev?: Maybe<InstalledCertificates_Stddev_Fields>;
  stddev_pop?: Maybe<InstalledCertificates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<InstalledCertificates_Stddev_Samp_Fields>;
  sum?: Maybe<InstalledCertificates_Sum_Fields>;
  var_pop?: Maybe<InstalledCertificates_Var_Pop_Fields>;
  var_samp?: Maybe<InstalledCertificates_Var_Samp_Fields>;
  variance?: Maybe<InstalledCertificates_Variance_Fields>;
};

/** aggregate fields of "InstalledCertificates" */
export type InstalledCertificates_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "InstalledCertificates" */
export type InstalledCertificates_Aggregate_Order_By = {
  avg?: InputMaybe<InstalledCertificates_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<InstalledCertificates_Max_Order_By>;
  min?: InputMaybe<InstalledCertificates_Min_Order_By>;
  stddev?: InputMaybe<InstalledCertificates_Stddev_Order_By>;
  stddev_pop?: InputMaybe<InstalledCertificates_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<InstalledCertificates_Stddev_Samp_Order_By>;
  sum?: InputMaybe<InstalledCertificates_Sum_Order_By>;
  var_pop?: InputMaybe<InstalledCertificates_Var_Pop_Order_By>;
  var_samp?: InputMaybe<InstalledCertificates_Var_Samp_Order_By>;
  variance?: InputMaybe<InstalledCertificates_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "InstalledCertificates" */
export type InstalledCertificates_Arr_Rel_Insert_Input = {
  data: Array<InstalledCertificates_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<InstalledCertificates_On_Conflict>;
};

/** aggregate avg on columns */
export type InstalledCertificates_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "InstalledCertificates". All fields are combined with a logical 'AND'. */
export type InstalledCertificates_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<InstalledCertificates_Bool_Exp>>;
  _not?: InputMaybe<InstalledCertificates_Bool_Exp>;
  _or?: InputMaybe<Array<InstalledCertificates_Bool_Exp>>;
  certificateType?: InputMaybe<Enum_InstalledCertificates_CertificateType_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  hashAlgorithm?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  issuerKeyHash?: InputMaybe<String_Comparison_Exp>;
  issuerNameHash?: InputMaybe<String_Comparison_Exp>;
  serialNumber?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "InstalledCertificates" */
export type InstalledCertificates_Constraint =
  /** unique or primary key constraint on columns "id" */
  'InstalledCertificates_pkey';

/** input type for incrementing numeric columns in table "InstalledCertificates" */
export type InstalledCertificates_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "InstalledCertificates" */
export type InstalledCertificates_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  certificateType?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hashAlgorithm?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  issuerKeyHash?: InputMaybe<Scalars['String']['input']>;
  issuerNameHash?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type InstalledCertificates_Max_Fields = {
  certificateType?: Maybe<
    Scalars['enum_InstalledCertificates_certificateType']['output']
  >;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  hashAlgorithm?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuerKeyHash?: Maybe<Scalars['String']['output']>;
  issuerNameHash?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Max_Order_By = {
  certificateType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  hashAlgorithm?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issuerKeyHash?: InputMaybe<Order_By>;
  issuerNameHash?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type InstalledCertificates_Min_Fields = {
  certificateType?: Maybe<
    Scalars['enum_InstalledCertificates_certificateType']['output']
  >;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  hashAlgorithm?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuerKeyHash?: Maybe<Scalars['String']['output']>;
  issuerNameHash?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Min_Order_By = {
  certificateType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  hashAlgorithm?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issuerKeyHash?: InputMaybe<Order_By>;
  issuerNameHash?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "InstalledCertificates" */
export type InstalledCertificates_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<InstalledCertificates>;
};

/** on_conflict condition type for table "InstalledCertificates" */
export type InstalledCertificates_On_Conflict = {
  constraint: InstalledCertificates_Constraint;
  update_columns?: Array<InstalledCertificates_Update_Column>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

/** Ordering options when selecting data from "InstalledCertificates". */
export type InstalledCertificates_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  certificateType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  hashAlgorithm?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issuerKeyHash?: InputMaybe<Order_By>;
  issuerNameHash?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: InstalledCertificates */
export type InstalledCertificates_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "InstalledCertificates" */
export type InstalledCertificates_Select_Column =
  /** column name */
  | 'certificateType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'hashAlgorithm'
  /** column name */
  | 'id'
  /** column name */
  | 'issuerKeyHash'
  /** column name */
  | 'issuerNameHash'
  /** column name */
  | 'serialNumber'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "InstalledCertificates" */
export type InstalledCertificates_Set_Input = {
  certificateType?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hashAlgorithm?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  issuerKeyHash?: InputMaybe<Scalars['String']['input']>;
  issuerNameHash?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type InstalledCertificates_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type InstalledCertificates_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type InstalledCertificates_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "InstalledCertificates" */
export type InstalledCertificates_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: InstalledCertificates_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type InstalledCertificates_Stream_Cursor_Value_Input = {
  certificateType?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  hashAlgorithm?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  issuerKeyHash?: InputMaybe<Scalars['String']['input']>;
  issuerNameHash?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type InstalledCertificates_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "InstalledCertificates" */
export type InstalledCertificates_Update_Column =
  /** column name */
  | 'certificateType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'hashAlgorithm'
  /** column name */
  | 'id'
  /** column name */
  | 'issuerKeyHash'
  /** column name */
  | 'issuerNameHash'
  /** column name */
  | 'serialNumber'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type InstalledCertificates_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<InstalledCertificates_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<InstalledCertificates_Set_Input>;
  /** filter the rows which have to be updated */
  where: InstalledCertificates_Bool_Exp;
};

/** aggregate var_pop on columns */
export type InstalledCertificates_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type InstalledCertificates_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type InstalledCertificates_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "InstalledCertificates" */
export type InstalledCertificates_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** columns and relationships of "LatestStatusNotifications" */
export type LatestStatusNotifications = {
  /** An object relationship */
  ChargingStation?: Maybe<ChargingStations>;
  /** An object relationship */
  StatusNotification?: Maybe<StatusNotifications>;
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  statusNotificationId?: Maybe<Scalars['Int']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "LatestStatusNotifications" */
export type LatestStatusNotifications_Aggregate = {
  aggregate?: Maybe<LatestStatusNotifications_Aggregate_Fields>;
  nodes: Array<LatestStatusNotifications>;
};

export type LatestStatusNotifications_Aggregate_Bool_Exp = {
  count?: InputMaybe<LatestStatusNotifications_Aggregate_Bool_Exp_Count>;
};

export type LatestStatusNotifications_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "LatestStatusNotifications" */
export type LatestStatusNotifications_Aggregate_Fields = {
  avg?: Maybe<LatestStatusNotifications_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LatestStatusNotifications_Max_Fields>;
  min?: Maybe<LatestStatusNotifications_Min_Fields>;
  stddev?: Maybe<LatestStatusNotifications_Stddev_Fields>;
  stddev_pop?: Maybe<LatestStatusNotifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<LatestStatusNotifications_Stddev_Samp_Fields>;
  sum?: Maybe<LatestStatusNotifications_Sum_Fields>;
  var_pop?: Maybe<LatestStatusNotifications_Var_Pop_Fields>;
  var_samp?: Maybe<LatestStatusNotifications_Var_Samp_Fields>;
  variance?: Maybe<LatestStatusNotifications_Variance_Fields>;
};

/** aggregate fields of "LatestStatusNotifications" */
export type LatestStatusNotifications_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Aggregate_Order_By = {
  avg?: InputMaybe<LatestStatusNotifications_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<LatestStatusNotifications_Max_Order_By>;
  min?: InputMaybe<LatestStatusNotifications_Min_Order_By>;
  stddev?: InputMaybe<LatestStatusNotifications_Stddev_Order_By>;
  stddev_pop?: InputMaybe<LatestStatusNotifications_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<LatestStatusNotifications_Stddev_Samp_Order_By>;
  sum?: InputMaybe<LatestStatusNotifications_Sum_Order_By>;
  var_pop?: InputMaybe<LatestStatusNotifications_Var_Pop_Order_By>;
  var_samp?: InputMaybe<LatestStatusNotifications_Var_Samp_Order_By>;
  variance?: InputMaybe<LatestStatusNotifications_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "LatestStatusNotifications" */
export type LatestStatusNotifications_Arr_Rel_Insert_Input = {
  data: Array<LatestStatusNotifications_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<LatestStatusNotifications_On_Conflict>;
};

/** aggregate avg on columns */
export type LatestStatusNotifications_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "LatestStatusNotifications". All fields are combined with a logical 'AND'. */
export type LatestStatusNotifications_Bool_Exp = {
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  StatusNotification?: InputMaybe<StatusNotifications_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<LatestStatusNotifications_Bool_Exp>>;
  _not?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
  _or?: InputMaybe<Array<LatestStatusNotifications_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  statusNotificationId?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "LatestStatusNotifications" */
export type LatestStatusNotifications_Constraint =
  /** unique or primary key constraint on columns "id" */
  'LatestStatusNotifications_pkey';

/** input type for incrementing numeric columns in table "LatestStatusNotifications" */
export type LatestStatusNotifications_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  statusNotificationId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "LatestStatusNotifications" */
export type LatestStatusNotifications_Insert_Input = {
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  StatusNotification?: InputMaybe<StatusNotifications_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  statusNotificationId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type LatestStatusNotifications_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  statusNotificationId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type LatestStatusNotifications_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  statusNotificationId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "LatestStatusNotifications" */
export type LatestStatusNotifications_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<LatestStatusNotifications>;
};

/** on_conflict condition type for table "LatestStatusNotifications" */
export type LatestStatusNotifications_On_Conflict = {
  constraint: LatestStatusNotifications_Constraint;
  update_columns?: Array<LatestStatusNotifications_Update_Column>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** Ordering options when selecting data from "LatestStatusNotifications". */
export type LatestStatusNotifications_Order_By = {
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  StatusNotification?: InputMaybe<StatusNotifications_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: LatestStatusNotifications */
export type LatestStatusNotifications_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'statusNotificationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "LatestStatusNotifications" */
export type LatestStatusNotifications_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  statusNotificationId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type LatestStatusNotifications_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type LatestStatusNotifications_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type LatestStatusNotifications_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "LatestStatusNotifications" */
export type LatestStatusNotifications_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: LatestStatusNotifications_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type LatestStatusNotifications_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  statusNotificationId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type LatestStatusNotifications_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  statusNotificationId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'statusNotificationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type LatestStatusNotifications_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<LatestStatusNotifications_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LatestStatusNotifications_Set_Input>;
  /** filter the rows which have to be updated */
  where: LatestStatusNotifications_Bool_Exp;
};

/** aggregate var_pop on columns */
export type LatestStatusNotifications_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type LatestStatusNotifications_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type LatestStatusNotifications_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  statusNotificationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "LatestStatusNotifications" */
export type LatestStatusNotifications_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  statusNotificationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizations = {
  /** An object relationship */
  Authorization?: Maybe<Authorizations>;
  /** An array relationship */
  LocalListVersionAuthorizations: Array<LocalListVersionAuthorizations>;
  /** An aggregate relationship */
  LocalListVersionAuthorizations_aggregate: LocalListVersionAuthorizations_Aggregate;
  /** An array relationship */
  SendLocalListAuthorizations: Array<SendLocalListAuthorizations>;
  /** An aggregate relationship */
  SendLocalListAuthorizations_aggregate: SendLocalListAuthorizations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  additionalInfo?: Maybe<Scalars['jsonb']['output']>;
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  /** An object relationship */
  authorizationByGroupauthorizationid?: Maybe<Authorizations>;
  authorizationId?: Maybe<Scalars['Int']['output']>;
  cacheExpiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  customData?: Maybe<Scalars['jsonb']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  idToken: Scalars['String']['output'];
  idTokenType?: Maybe<Scalars['String']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  personalMessage?: Maybe<Scalars['json']['output']>;
  status: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsLocalListVersionAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsLocalListVersionAuthorizations_AggregateArgs =
  {
    distinct_on?: InputMaybe<
      Array<LocalListVersionAuthorizations_Select_Column>
    >;
    limit?: InputMaybe<Scalars['Int']['input']>;
    offset?: InputMaybe<Scalars['Int']['input']>;
    order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
    where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
  };

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsSendLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsSendLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsAdditionalInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsCustomDataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "LocalListAuthorizations" */
export type LocalListAuthorizationsPersonalMessageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "LocalListAuthorizations" */
export type LocalListAuthorizations_Aggregate = {
  aggregate?: Maybe<LocalListAuthorizations_Aggregate_Fields>;
  nodes: Array<LocalListAuthorizations>;
};

export type LocalListAuthorizations_Aggregate_Bool_Exp = {
  count?: InputMaybe<LocalListAuthorizations_Aggregate_Bool_Exp_Count>;
};

export type LocalListAuthorizations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "LocalListAuthorizations" */
export type LocalListAuthorizations_Aggregate_Fields = {
  avg?: Maybe<LocalListAuthorizations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocalListAuthorizations_Max_Fields>;
  min?: Maybe<LocalListAuthorizations_Min_Fields>;
  stddev?: Maybe<LocalListAuthorizations_Stddev_Fields>;
  stddev_pop?: Maybe<LocalListAuthorizations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<LocalListAuthorizations_Stddev_Samp_Fields>;
  sum?: Maybe<LocalListAuthorizations_Sum_Fields>;
  var_pop?: Maybe<LocalListAuthorizations_Var_Pop_Fields>;
  var_samp?: Maybe<LocalListAuthorizations_Var_Samp_Fields>;
  variance?: Maybe<LocalListAuthorizations_Variance_Fields>;
};

/** aggregate fields of "LocalListAuthorizations" */
export type LocalListAuthorizations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Aggregate_Order_By = {
  avg?: InputMaybe<LocalListAuthorizations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<LocalListAuthorizations_Max_Order_By>;
  min?: InputMaybe<LocalListAuthorizations_Min_Order_By>;
  stddev?: InputMaybe<LocalListAuthorizations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<LocalListAuthorizations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<LocalListAuthorizations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<LocalListAuthorizations_Sum_Order_By>;
  var_pop?: InputMaybe<LocalListAuthorizations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<LocalListAuthorizations_Var_Samp_Order_By>;
  variance?: InputMaybe<LocalListAuthorizations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type LocalListAuthorizations_Append_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "LocalListAuthorizations" */
export type LocalListAuthorizations_Arr_Rel_Insert_Input = {
  data: Array<LocalListAuthorizations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<LocalListAuthorizations_On_Conflict>;
};

/** aggregate avg on columns */
export type LocalListAuthorizations_Avg_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Avg_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "LocalListAuthorizations". All fields are combined with a logical 'AND'. */
export type LocalListAuthorizations_Bool_Exp = {
  Authorization?: InputMaybe<Authorizations_Bool_Exp>;
  LocalListVersionAuthorizations?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
  LocalListVersionAuthorizations_aggregate?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Bool_Exp>;
  SendLocalListAuthorizations?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
  SendLocalListAuthorizations_aggregate?: InputMaybe<SendLocalListAuthorizations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<LocalListAuthorizations_Bool_Exp>>;
  _not?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  _or?: InputMaybe<Array<LocalListAuthorizations_Bool_Exp>>;
  additionalInfo?: InputMaybe<Jsonb_Comparison_Exp>;
  allowedConnectorTypes?: InputMaybe<String_Array_Comparison_Exp>;
  authorizationByGroupauthorizationid?: InputMaybe<Authorizations_Bool_Exp>;
  authorizationId?: InputMaybe<Int_Comparison_Exp>;
  cacheExpiryDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  chargingPriority?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  customData?: InputMaybe<Jsonb_Comparison_Exp>;
  disallowedEvseIdPrefixes?: InputMaybe<String_Array_Comparison_Exp>;
  groupAuthorizationId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idToken?: InputMaybe<String_Comparison_Exp>;
  idTokenType?: InputMaybe<String_Comparison_Exp>;
  language1?: InputMaybe<String_Comparison_Exp>;
  language2?: InputMaybe<String_Comparison_Exp>;
  personalMessage?: InputMaybe<Json_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "LocalListAuthorizations" */
export type LocalListAuthorizations_Constraint =
  /** unique or primary key constraint on columns "id" */
  'LocalListAuthorizations_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type LocalListAuthorizations_Delete_At_Path_Input = {
  additionalInfo?: InputMaybe<Array<Scalars['String']['input']>>;
  customData?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type LocalListAuthorizations_Delete_Elem_Input = {
  additionalInfo?: InputMaybe<Scalars['Int']['input']>;
  customData?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type LocalListAuthorizations_Delete_Key_Input = {
  additionalInfo?: InputMaybe<Scalars['String']['input']>;
  customData?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "LocalListAuthorizations" */
export type LocalListAuthorizations_Inc_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "LocalListAuthorizations" */
export type LocalListAuthorizations_Insert_Input = {
  Authorization?: InputMaybe<Authorizations_Obj_Rel_Insert_Input>;
  LocalListVersionAuthorizations?: InputMaybe<LocalListVersionAuthorizations_Arr_Rel_Insert_Input>;
  SendLocalListAuthorizations?: InputMaybe<SendLocalListAuthorizations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  authorizationByGroupauthorizationid?: InputMaybe<Authorizations_Obj_Rel_Insert_Input>;
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  cacheExpiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type LocalListAuthorizations_Max_Fields = {
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  authorizationId?: Maybe<Scalars['Int']['output']>;
  cacheExpiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['String']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Max_Order_By = {
  allowedConnectorTypes?: InputMaybe<Order_By>;
  authorizationId?: InputMaybe<Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type LocalListAuthorizations_Min_Fields = {
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  authorizationId?: Maybe<Scalars['Int']['output']>;
  cacheExpiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['String']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Min_Order_By = {
  allowedConnectorTypes?: InputMaybe<Order_By>;
  authorizationId?: InputMaybe<Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "LocalListAuthorizations" */
export type LocalListAuthorizations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<LocalListAuthorizations>;
};

/** input type for inserting object relation for remote table "LocalListAuthorizations" */
export type LocalListAuthorizations_Obj_Rel_Insert_Input = {
  data: LocalListAuthorizations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<LocalListAuthorizations_On_Conflict>;
};

/** on_conflict condition type for table "LocalListAuthorizations" */
export type LocalListAuthorizations_On_Conflict = {
  constraint: LocalListAuthorizations_Constraint;
  update_columns?: Array<LocalListAuthorizations_Update_Column>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

/** Ordering options when selecting data from "LocalListAuthorizations". */
export type LocalListAuthorizations_Order_By = {
  Authorization?: InputMaybe<Authorizations_Order_By>;
  LocalListVersionAuthorizations_aggregate?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Order_By>;
  SendLocalListAuthorizations_aggregate?: InputMaybe<SendLocalListAuthorizations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  additionalInfo?: InputMaybe<Order_By>;
  allowedConnectorTypes?: InputMaybe<Order_By>;
  authorizationByGroupauthorizationid?: InputMaybe<Authorizations_Order_By>;
  authorizationId?: InputMaybe<Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  customData?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  personalMessage?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: LocalListAuthorizations */
export type LocalListAuthorizations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type LocalListAuthorizations_Prepend_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Select_Column =
  /** column name */
  | 'additionalInfo'
  /** column name */
  | 'allowedConnectorTypes'
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'cacheExpiryDateTime'
  /** column name */
  | 'chargingPriority'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'disallowedEvseIdPrefixes'
  /** column name */
  | 'groupAuthorizationId'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'language1'
  /** column name */
  | 'language2'
  /** column name */
  | 'personalMessage'
  /** column name */
  | 'status'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "LocalListAuthorizations" */
export type LocalListAuthorizations_Set_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  cacheExpiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type LocalListAuthorizations_Stddev_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Stddev_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type LocalListAuthorizations_Stddev_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Stddev_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type LocalListAuthorizations_Stddev_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Stddev_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "LocalListAuthorizations" */
export type LocalListAuthorizations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: LocalListAuthorizations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type LocalListAuthorizations_Stream_Cursor_Value_Input = {
  additionalInfo?: InputMaybe<Scalars['jsonb']['input']>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  cacheExpiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  groupAuthorizationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type LocalListAuthorizations_Sum_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Sum_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Update_Column =
  /** column name */
  | 'additionalInfo'
  /** column name */
  | 'allowedConnectorTypes'
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'cacheExpiryDateTime'
  /** column name */
  | 'chargingPriority'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'disallowedEvseIdPrefixes'
  /** column name */
  | 'groupAuthorizationId'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'language1'
  /** column name */
  | 'language2'
  /** column name */
  | 'personalMessage'
  /** column name */
  | 'status'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type LocalListAuthorizations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<LocalListAuthorizations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<LocalListAuthorizations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<LocalListAuthorizations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<LocalListAuthorizations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<LocalListAuthorizations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<LocalListAuthorizations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LocalListAuthorizations_Set_Input>;
  /** filter the rows which have to be updated */
  where: LocalListAuthorizations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type LocalListAuthorizations_Var_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Var_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type LocalListAuthorizations_Var_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Var_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type LocalListAuthorizations_Variance_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupAuthorizationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "LocalListAuthorizations" */
export type LocalListAuthorizations_Variance_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  groupAuthorizationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations = {
  /** An object relationship */
  LocalListAuthorization: LocalListAuthorizations;
  /** An object relationship */
  LocalListVersion: LocalListVersions;
  /** An object relationship */
  Tenant: Tenants;
  authorizationId: Scalars['Int']['output'];
  createdAt: Scalars['timestamptz']['output'];
  localListVersionId: Scalars['Int']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Aggregate = {
  aggregate?: Maybe<LocalListVersionAuthorizations_Aggregate_Fields>;
  nodes: Array<LocalListVersionAuthorizations>;
};

export type LocalListVersionAuthorizations_Aggregate_Bool_Exp = {
  count?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Bool_Exp_Count>;
};

export type LocalListVersionAuthorizations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Aggregate_Fields = {
  avg?: Maybe<LocalListVersionAuthorizations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocalListVersionAuthorizations_Max_Fields>;
  min?: Maybe<LocalListVersionAuthorizations_Min_Fields>;
  stddev?: Maybe<LocalListVersionAuthorizations_Stddev_Fields>;
  stddev_pop?: Maybe<LocalListVersionAuthorizations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<LocalListVersionAuthorizations_Stddev_Samp_Fields>;
  sum?: Maybe<LocalListVersionAuthorizations_Sum_Fields>;
  var_pop?: Maybe<LocalListVersionAuthorizations_Var_Pop_Fields>;
  var_samp?: Maybe<LocalListVersionAuthorizations_Var_Samp_Fields>;
  variance?: Maybe<LocalListVersionAuthorizations_Variance_Fields>;
};

/** aggregate fields of "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Aggregate_Order_By = {
  avg?: InputMaybe<LocalListVersionAuthorizations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<LocalListVersionAuthorizations_Max_Order_By>;
  min?: InputMaybe<LocalListVersionAuthorizations_Min_Order_By>;
  stddev?: InputMaybe<LocalListVersionAuthorizations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<LocalListVersionAuthorizations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<LocalListVersionAuthorizations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<LocalListVersionAuthorizations_Sum_Order_By>;
  var_pop?: InputMaybe<LocalListVersionAuthorizations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<LocalListVersionAuthorizations_Var_Samp_Order_By>;
  variance?: InputMaybe<LocalListVersionAuthorizations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Arr_Rel_Insert_Input = {
  data: Array<LocalListVersionAuthorizations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<LocalListVersionAuthorizations_On_Conflict>;
};

/** aggregate avg on columns */
export type LocalListVersionAuthorizations_Avg_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Avg_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "LocalListVersionAuthorizations". All fields are combined with a logical 'AND'. */
export type LocalListVersionAuthorizations_Bool_Exp = {
  LocalListAuthorization?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  LocalListVersion?: InputMaybe<LocalListVersions_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<LocalListVersionAuthorizations_Bool_Exp>>;
  _not?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
  _or?: InputMaybe<Array<LocalListVersionAuthorizations_Bool_Exp>>;
  authorizationId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  localListVersionId?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Constraint =
  /** unique or primary key constraint on columns "localListVersionId", "authorizationId" */
  'LocalListVersionAuthorizations_pkey';

/** input type for incrementing numeric columns in table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Inc_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  localListVersionId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Insert_Input = {
  LocalListAuthorization?: InputMaybe<LocalListAuthorizations_Obj_Rel_Insert_Input>;
  LocalListVersion?: InputMaybe<LocalListVersions_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  localListVersionId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type LocalListVersionAuthorizations_Max_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  localListVersionId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Max_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type LocalListVersionAuthorizations_Min_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  localListVersionId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Min_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<LocalListVersionAuthorizations>;
};

/** on_conflict condition type for table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_On_Conflict = {
  constraint: LocalListVersionAuthorizations_Constraint;
  update_columns?: Array<LocalListVersionAuthorizations_Update_Column>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

/** Ordering options when selecting data from "LocalListVersionAuthorizations". */
export type LocalListVersionAuthorizations_Order_By = {
  LocalListAuthorization?: InputMaybe<LocalListAuthorizations_Order_By>;
  LocalListVersion?: InputMaybe<LocalListVersions_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  authorizationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: LocalListVersionAuthorizations */
export type LocalListVersionAuthorizations_Pk_Columns_Input = {
  authorizationId: Scalars['Int']['input'];
  localListVersionId: Scalars['Int']['input'];
};

/** select columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Select_Column =
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'localListVersionId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Set_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  localListVersionId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type LocalListVersionAuthorizations_Stddev_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Stddev_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type LocalListVersionAuthorizations_Stddev_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Stddev_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type LocalListVersionAuthorizations_Stddev_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Stddev_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: LocalListVersionAuthorizations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type LocalListVersionAuthorizations_Stream_Cursor_Value_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  localListVersionId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type LocalListVersionAuthorizations_Sum_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  localListVersionId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Sum_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Update_Column =
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'localListVersionId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type LocalListVersionAuthorizations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<LocalListVersionAuthorizations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LocalListVersionAuthorizations_Set_Input>;
  /** filter the rows which have to be updated */
  where: LocalListVersionAuthorizations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type LocalListVersionAuthorizations_Var_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Var_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type LocalListVersionAuthorizations_Var_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Var_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type LocalListVersionAuthorizations_Variance_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  localListVersionId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "LocalListVersionAuthorizations" */
export type LocalListVersionAuthorizations_Variance_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  localListVersionId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "LocalListVersions" */
export type LocalListVersions = {
  /** An array relationship */
  LocalListVersionAuthorizations: Array<LocalListVersionAuthorizations>;
  /** An aggregate relationship */
  LocalListVersionAuthorizations_aggregate: LocalListVersionAuthorizations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "LocalListVersions" */
export type LocalListVersionsLocalListVersionAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

/** columns and relationships of "LocalListVersions" */
export type LocalListVersionsLocalListVersionAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

/** aggregated selection of "LocalListVersions" */
export type LocalListVersions_Aggregate = {
  aggregate?: Maybe<LocalListVersions_Aggregate_Fields>;
  nodes: Array<LocalListVersions>;
};

export type LocalListVersions_Aggregate_Bool_Exp = {
  count?: InputMaybe<LocalListVersions_Aggregate_Bool_Exp_Count>;
};

export type LocalListVersions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<LocalListVersions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "LocalListVersions" */
export type LocalListVersions_Aggregate_Fields = {
  avg?: Maybe<LocalListVersions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<LocalListVersions_Max_Fields>;
  min?: Maybe<LocalListVersions_Min_Fields>;
  stddev?: Maybe<LocalListVersions_Stddev_Fields>;
  stddev_pop?: Maybe<LocalListVersions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<LocalListVersions_Stddev_Samp_Fields>;
  sum?: Maybe<LocalListVersions_Sum_Fields>;
  var_pop?: Maybe<LocalListVersions_Var_Pop_Fields>;
  var_samp?: Maybe<LocalListVersions_Var_Samp_Fields>;
  variance?: Maybe<LocalListVersions_Variance_Fields>;
};

/** aggregate fields of "LocalListVersions" */
export type LocalListVersions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "LocalListVersions" */
export type LocalListVersions_Aggregate_Order_By = {
  avg?: InputMaybe<LocalListVersions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<LocalListVersions_Max_Order_By>;
  min?: InputMaybe<LocalListVersions_Min_Order_By>;
  stddev?: InputMaybe<LocalListVersions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<LocalListVersions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<LocalListVersions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<LocalListVersions_Sum_Order_By>;
  var_pop?: InputMaybe<LocalListVersions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<LocalListVersions_Var_Samp_Order_By>;
  variance?: InputMaybe<LocalListVersions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "LocalListVersions" */
export type LocalListVersions_Arr_Rel_Insert_Input = {
  data: Array<LocalListVersions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<LocalListVersions_On_Conflict>;
};

/** aggregate avg on columns */
export type LocalListVersions_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "LocalListVersions" */
export type LocalListVersions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "LocalListVersions". All fields are combined with a logical 'AND'. */
export type LocalListVersions_Bool_Exp = {
  LocalListVersionAuthorizations?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
  LocalListVersionAuthorizations_aggregate?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<LocalListVersions_Bool_Exp>>;
  _not?: InputMaybe<LocalListVersions_Bool_Exp>;
  _or?: InputMaybe<Array<LocalListVersions_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  versionNumber?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "LocalListVersions" */
export type LocalListVersions_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'LocalListVersions_pkey'
  /** unique or primary key constraint on columns "stationId" */
  | 'LocalListVersions_stationId_key';

/** input type for incrementing numeric columns in table "LocalListVersions" */
export type LocalListVersions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "LocalListVersions" */
export type LocalListVersions_Insert_Input = {
  LocalListVersionAuthorizations?: InputMaybe<LocalListVersionAuthorizations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type LocalListVersions_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "LocalListVersions" */
export type LocalListVersions_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type LocalListVersions_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "LocalListVersions" */
export type LocalListVersions_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "LocalListVersions" */
export type LocalListVersions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<LocalListVersions>;
};

/** input type for inserting object relation for remote table "LocalListVersions" */
export type LocalListVersions_Obj_Rel_Insert_Input = {
  data: LocalListVersions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<LocalListVersions_On_Conflict>;
};

/** on_conflict condition type for table "LocalListVersions" */
export type LocalListVersions_On_Conflict = {
  constraint: LocalListVersions_Constraint;
  update_columns?: Array<LocalListVersions_Update_Column>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

/** Ordering options when selecting data from "LocalListVersions". */
export type LocalListVersions_Order_By = {
  LocalListVersionAuthorizations_aggregate?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** primary key columns input for table: LocalListVersions */
export type LocalListVersions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "LocalListVersions" */
export type LocalListVersions_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber';

/** input type for updating data in table "LocalListVersions" */
export type LocalListVersions_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type LocalListVersions_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "LocalListVersions" */
export type LocalListVersions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type LocalListVersions_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "LocalListVersions" */
export type LocalListVersions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type LocalListVersions_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "LocalListVersions" */
export type LocalListVersions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "LocalListVersions" */
export type LocalListVersions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: LocalListVersions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type LocalListVersions_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type LocalListVersions_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "LocalListVersions" */
export type LocalListVersions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** update columns of table "LocalListVersions" */
export type LocalListVersions_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber';

export type LocalListVersions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<LocalListVersions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<LocalListVersions_Set_Input>;
  /** filter the rows which have to be updated */
  where: LocalListVersions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type LocalListVersions_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "LocalListVersions" */
export type LocalListVersions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type LocalListVersions_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "LocalListVersions" */
export type LocalListVersions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type LocalListVersions_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "LocalListVersions" */
export type LocalListVersions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** columns and relationships of "Locations" */
export type Locations = {
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  coordinates?: Maybe<Scalars['geometry']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  facilities?: Maybe<Scalars['jsonb']['output']>;
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  openingHours?: Maybe<Scalars['jsonb']['output']>;
  parkingType?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  publishUpstream?: Maybe<Scalars['Boolean']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timeZone?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Locations" */
export type LocationsChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** columns and relationships of "Locations" */
export type LocationsChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** columns and relationships of "Locations" */
export type LocationsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Locations" */
export type LocationsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Locations" */
export type LocationsFacilitiesArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Locations" */
export type LocationsOpeningHoursArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Locations" */
export type Locations_Aggregate = {
  aggregate?: Maybe<Locations_Aggregate_Fields>;
  nodes: Array<Locations>;
};

export type Locations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Locations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Locations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Locations_Aggregate_Bool_Exp_Count>;
};

export type Locations_Aggregate_Bool_Exp_Bool_And = {
  arguments: Locations_Select_Column_Locations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Locations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Locations_Select_Column_Locations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Locations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Locations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Locations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Locations" */
export type Locations_Aggregate_Fields = {
  avg?: Maybe<Locations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locations_Max_Fields>;
  min?: Maybe<Locations_Min_Fields>;
  stddev?: Maybe<Locations_Stddev_Fields>;
  stddev_pop?: Maybe<Locations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locations_Stddev_Samp_Fields>;
  sum?: Maybe<Locations_Sum_Fields>;
  var_pop?: Maybe<Locations_Var_Pop_Fields>;
  var_samp?: Maybe<Locations_Var_Samp_Fields>;
  variance?: Maybe<Locations_Variance_Fields>;
};

/** aggregate fields of "Locations" */
export type Locations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Locations" */
export type Locations_Aggregate_Order_By = {
  avg?: InputMaybe<Locations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Locations_Max_Order_By>;
  min?: InputMaybe<Locations_Min_Order_By>;
  stddev?: InputMaybe<Locations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Locations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Locations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Locations_Sum_Order_By>;
  var_pop?: InputMaybe<Locations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Locations_Var_Samp_Order_By>;
  variance?: InputMaybe<Locations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Locations_Append_Input = {
  facilities?: InputMaybe<Scalars['jsonb']['input']>;
  openingHours?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "Locations" */
export type Locations_Arr_Rel_Insert_Input = {
  data: Array<Locations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** aggregate avg on columns */
export type Locations_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Locations" */
export type Locations_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Locations". All fields are combined with a logical 'AND'. */
export type Locations_Bool_Exp = {
  ChargingStations?: InputMaybe<ChargingStations_Bool_Exp>;
  ChargingStations_aggregate?: InputMaybe<ChargingStations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Locations_Bool_Exp>>;
  _not?: InputMaybe<Locations_Bool_Exp>;
  _or?: InputMaybe<Array<Locations_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  coordinates?: InputMaybe<Geometry_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  facilities?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  openingHours?: InputMaybe<Jsonb_Comparison_Exp>;
  parkingType?: InputMaybe<String_Comparison_Exp>;
  postalCode?: InputMaybe<String_Comparison_Exp>;
  publishUpstream?: InputMaybe<Boolean_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timeZone?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Locations" */
export type Locations_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Locations_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Locations_Delete_At_Path_Input = {
  facilities?: InputMaybe<Array<Scalars['String']['input']>>;
  openingHours?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Locations_Delete_Elem_Input = {
  facilities?: InputMaybe<Scalars['Int']['input']>;
  openingHours?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Locations_Delete_Key_Input = {
  facilities?: InputMaybe<Scalars['String']['input']>;
  openingHours?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "Locations" */
export type Locations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Locations" */
export type Locations_Insert_Input = {
  ChargingStations?: InputMaybe<ChargingStations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  facilities?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  openingHours?: InputMaybe<Scalars['jsonb']['input']>;
  parkingType?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  publishUpstream?: InputMaybe<Scalars['Boolean']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Locations_Max_Fields = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parkingType?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeZone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Locations" */
export type Locations_Max_Order_By = {
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parkingType?: InputMaybe<Order_By>;
  postalCode?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeZone?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Locations_Min_Fields = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parkingType?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeZone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Locations" */
export type Locations_Min_Order_By = {
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  parkingType?: InputMaybe<Order_By>;
  postalCode?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeZone?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Locations" */
export type Locations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Locations>;
};

/** input type for inserting object relation for remote table "Locations" */
export type Locations_Obj_Rel_Insert_Input = {
  data: Locations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** on_conflict condition type for table "Locations" */
export type Locations_On_Conflict = {
  constraint: Locations_Constraint;
  update_columns?: Array<Locations_Update_Column>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

/** Ordering options when selecting data from "Locations". */
export type Locations_Order_By = {
  ChargingStations_aggregate?: InputMaybe<ChargingStations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  coordinates?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  facilities?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  openingHours?: InputMaybe<Order_By>;
  parkingType?: InputMaybe<Order_By>;
  postalCode?: InputMaybe<Order_By>;
  publishUpstream?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeZone?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Locations */
export type Locations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Locations_Prepend_Input = {
  facilities?: InputMaybe<Scalars['jsonb']['input']>;
  openingHours?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "Locations" */
export type Locations_Select_Column =
  /** column name */
  | 'address'
  /** column name */
  | 'city'
  /** column name */
  | 'coordinates'
  /** column name */
  | 'country'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'facilities'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'openingHours'
  /** column name */
  | 'parkingType'
  /** column name */
  | 'postalCode'
  /** column name */
  | 'publishUpstream'
  /** column name */
  | 'state'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timeZone'
  /** column name */
  | 'updatedAt';

/** select "Locations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Locations" */
export type Locations_Select_Column_Locations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'publishUpstream';

/** select "Locations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Locations" */
export type Locations_Select_Column_Locations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'publishUpstream';

/** input type for updating data in table "Locations" */
export type Locations_Set_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  facilities?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  openingHours?: InputMaybe<Scalars['jsonb']['input']>;
  parkingType?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  publishUpstream?: InputMaybe<Scalars['Boolean']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Locations_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Locations" */
export type Locations_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Locations_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Locations" */
export type Locations_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Locations_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Locations" */
export type Locations_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Locations" */
export type Locations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Locations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Locations_Stream_Cursor_Value_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  facilities?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  openingHours?: InputMaybe<Scalars['jsonb']['input']>;
  parkingType?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  publishUpstream?: InputMaybe<Scalars['Boolean']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Locations_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Locations" */
export type Locations_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Locations" */
export type Locations_Update_Column =
  /** column name */
  | 'address'
  /** column name */
  | 'city'
  /** column name */
  | 'coordinates'
  /** column name */
  | 'country'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'facilities'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'openingHours'
  /** column name */
  | 'parkingType'
  /** column name */
  | 'postalCode'
  /** column name */
  | 'publishUpstream'
  /** column name */
  | 'state'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timeZone'
  /** column name */
  | 'updatedAt';

export type Locations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Locations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Locations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Locations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Locations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Locations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Locations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Locations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Locations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Locations_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Locations" */
export type Locations_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Locations_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Locations" */
export type Locations_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Locations_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Locations" */
export type Locations_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "MessageInfos" */
export type MessageInfos = {
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  Tenant: Tenants;
  active?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  displayComponentId?: Maybe<Scalars['Int']['output']>;
  endDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  message?: Maybe<Scalars['json']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  startDateTime?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "MessageInfos" */
export type MessageInfosMessageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "MessageInfos" */
export type MessageInfos_Aggregate = {
  aggregate?: Maybe<MessageInfos_Aggregate_Fields>;
  nodes: Array<MessageInfos>;
};

export type MessageInfos_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<MessageInfos_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<MessageInfos_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<MessageInfos_Aggregate_Bool_Exp_Count>;
};

export type MessageInfos_Aggregate_Bool_Exp_Bool_And = {
  arguments: MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MessageInfos_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type MessageInfos_Aggregate_Bool_Exp_Bool_Or = {
  arguments: MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MessageInfos_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type MessageInfos_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<MessageInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MessageInfos_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "MessageInfos" */
export type MessageInfos_Aggregate_Fields = {
  avg?: Maybe<MessageInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MessageInfos_Max_Fields>;
  min?: Maybe<MessageInfos_Min_Fields>;
  stddev?: Maybe<MessageInfos_Stddev_Fields>;
  stddev_pop?: Maybe<MessageInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<MessageInfos_Stddev_Samp_Fields>;
  sum?: Maybe<MessageInfos_Sum_Fields>;
  var_pop?: Maybe<MessageInfos_Var_Pop_Fields>;
  var_samp?: Maybe<MessageInfos_Var_Samp_Fields>;
  variance?: Maybe<MessageInfos_Variance_Fields>;
};

/** aggregate fields of "MessageInfos" */
export type MessageInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<MessageInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "MessageInfos" */
export type MessageInfos_Aggregate_Order_By = {
  avg?: InputMaybe<MessageInfos_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<MessageInfos_Max_Order_By>;
  min?: InputMaybe<MessageInfos_Min_Order_By>;
  stddev?: InputMaybe<MessageInfos_Stddev_Order_By>;
  stddev_pop?: InputMaybe<MessageInfos_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<MessageInfos_Stddev_Samp_Order_By>;
  sum?: InputMaybe<MessageInfos_Sum_Order_By>;
  var_pop?: InputMaybe<MessageInfos_Var_Pop_Order_By>;
  var_samp?: InputMaybe<MessageInfos_Var_Samp_Order_By>;
  variance?: InputMaybe<MessageInfos_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "MessageInfos" */
export type MessageInfos_Arr_Rel_Insert_Input = {
  data: Array<MessageInfos_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<MessageInfos_On_Conflict>;
};

/** aggregate avg on columns */
export type MessageInfos_Avg_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "MessageInfos" */
export type MessageInfos_Avg_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "MessageInfos". All fields are combined with a logical 'AND'. */
export type MessageInfos_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<MessageInfos_Bool_Exp>>;
  _not?: InputMaybe<MessageInfos_Bool_Exp>;
  _or?: InputMaybe<Array<MessageInfos_Bool_Exp>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  displayComponentId?: InputMaybe<Int_Comparison_Exp>;
  endDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  message?: InputMaybe<Json_Comparison_Exp>;
  priority?: InputMaybe<String_Comparison_Exp>;
  startDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  transactionId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "MessageInfos" */
export type MessageInfos_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  | 'MessageInfos_pkey'
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'MessageInfos_stationId_id_key';

/** input type for incrementing numeric columns in table "MessageInfos" */
export type MessageInfos_Inc_Input = {
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  displayComponentId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "MessageInfos" */
export type MessageInfos_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  displayComponentId?: InputMaybe<Scalars['Int']['input']>;
  endDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['json']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  startDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type MessageInfos_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  displayComponentId?: Maybe<Scalars['Int']['output']>;
  endDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  startDateTime?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "MessageInfos" */
export type MessageInfos_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  endDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDateTime?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type MessageInfos_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  displayComponentId?: Maybe<Scalars['Int']['output']>;
  endDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  startDateTime?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "MessageInfos" */
export type MessageInfos_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  endDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDateTime?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "MessageInfos" */
export type MessageInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<MessageInfos>;
};

/** on_conflict condition type for table "MessageInfos" */
export type MessageInfos_On_Conflict = {
  constraint: MessageInfos_Constraint;
  update_columns?: Array<MessageInfos_Update_Column>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "MessageInfos". */
export type MessageInfos_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  active?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  endDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDateTime?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: MessageInfos */
export type MessageInfos_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "MessageInfos" */
export type MessageInfos_Select_Column =
  /** column name */
  | 'active'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'displayComponentId'
  /** column name */
  | 'endDateTime'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'priority'
  /** column name */
  | 'startDateTime'
  /** column name */
  | 'state'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

/** select "MessageInfos_aggregate_bool_exp_bool_and_arguments_columns" columns of table "MessageInfos" */
export type MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'active';

/** select "MessageInfos_aggregate_bool_exp_bool_or_arguments_columns" columns of table "MessageInfos" */
export type MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'active';

/** input type for updating data in table "MessageInfos" */
export type MessageInfos_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  displayComponentId?: InputMaybe<Scalars['Int']['input']>;
  endDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['json']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  startDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type MessageInfos_Stddev_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "MessageInfos" */
export type MessageInfos_Stddev_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type MessageInfos_Stddev_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "MessageInfos" */
export type MessageInfos_Stddev_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type MessageInfos_Stddev_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "MessageInfos" */
export type MessageInfos_Stddev_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "MessageInfos" */
export type MessageInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: MessageInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type MessageInfos_Stream_Cursor_Value_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  displayComponentId?: InputMaybe<Scalars['Int']['input']>;
  endDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['json']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  startDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type MessageInfos_Sum_Fields = {
  databaseId?: Maybe<Scalars['Int']['output']>;
  displayComponentId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "MessageInfos" */
export type MessageInfos_Sum_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "MessageInfos" */
export type MessageInfos_Update_Column =
  /** column name */
  | 'active'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'displayComponentId'
  /** column name */
  | 'endDateTime'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'priority'
  /** column name */
  | 'startDateTime'
  /** column name */
  | 'state'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

export type MessageInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<MessageInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<MessageInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: MessageInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type MessageInfos_Var_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "MessageInfos" */
export type MessageInfos_Var_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type MessageInfos_Var_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "MessageInfos" */
export type MessageInfos_Var_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type MessageInfos_Variance_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  displayComponentId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "MessageInfos" */
export type MessageInfos_Variance_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  displayComponentId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "MeterValues" */
export type MeterValues = {
  /** An object relationship */
  StopTransaction?: Maybe<StopTransactions>;
  /** An object relationship */
  Tariff?: Maybe<Tariffs>;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  /** An object relationship */
  TransactionEvent?: Maybe<TransactionEvents>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  customData?: Maybe<Scalars['jsonb']['output']>;
  id: Scalars['Int']['output'];
  sampledValue?: Maybe<Scalars['json']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "MeterValues" */
export type MeterValuesCustomDataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "MeterValues" */
export type MeterValuesSampledValueArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "MeterValues" */
export type MeterValues_Aggregate = {
  aggregate?: Maybe<MeterValues_Aggregate_Fields>;
  nodes: Array<MeterValues>;
};

export type MeterValues_Aggregate_Bool_Exp = {
  count?: InputMaybe<MeterValues_Aggregate_Bool_Exp_Count>;
};

export type MeterValues_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<MeterValues_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MeterValues_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "MeterValues" */
export type MeterValues_Aggregate_Fields = {
  avg?: Maybe<MeterValues_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MeterValues_Max_Fields>;
  min?: Maybe<MeterValues_Min_Fields>;
  stddev?: Maybe<MeterValues_Stddev_Fields>;
  stddev_pop?: Maybe<MeterValues_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<MeterValues_Stddev_Samp_Fields>;
  sum?: Maybe<MeterValues_Sum_Fields>;
  var_pop?: Maybe<MeterValues_Var_Pop_Fields>;
  var_samp?: Maybe<MeterValues_Var_Samp_Fields>;
  variance?: Maybe<MeterValues_Variance_Fields>;
};

/** aggregate fields of "MeterValues" */
export type MeterValues_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<MeterValues_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "MeterValues" */
export type MeterValues_Aggregate_Order_By = {
  avg?: InputMaybe<MeterValues_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<MeterValues_Max_Order_By>;
  min?: InputMaybe<MeterValues_Min_Order_By>;
  stddev?: InputMaybe<MeterValues_Stddev_Order_By>;
  stddev_pop?: InputMaybe<MeterValues_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<MeterValues_Stddev_Samp_Order_By>;
  sum?: InputMaybe<MeterValues_Sum_Order_By>;
  var_pop?: InputMaybe<MeterValues_Var_Pop_Order_By>;
  var_samp?: InputMaybe<MeterValues_Var_Samp_Order_By>;
  variance?: InputMaybe<MeterValues_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type MeterValues_Append_Input = {
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "MeterValues" */
export type MeterValues_Arr_Rel_Insert_Input = {
  data: Array<MeterValues_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<MeterValues_On_Conflict>;
};

/** aggregate avg on columns */
export type MeterValues_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "MeterValues" */
export type MeterValues_Avg_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "MeterValues". All fields are combined with a logical 'AND'. */
export type MeterValues_Bool_Exp = {
  StopTransaction?: InputMaybe<StopTransactions_Bool_Exp>;
  Tariff?: InputMaybe<Tariffs_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  TransactionEvent?: InputMaybe<TransactionEvents_Bool_Exp>;
  _and?: InputMaybe<Array<MeterValues_Bool_Exp>>;
  _not?: InputMaybe<MeterValues_Bool_Exp>;
  _or?: InputMaybe<Array<MeterValues_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  customData?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  sampledValue?: InputMaybe<Json_Comparison_Exp>;
  stopTransactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  tariffId?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  transactionEventId?: InputMaybe<Int_Comparison_Exp>;
  transactionId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "MeterValues" */
export type MeterValues_Constraint =
  /** unique or primary key constraint on columns "id" */
  'MeterValues_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type MeterValues_Delete_At_Path_Input = {
  customData?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type MeterValues_Delete_Elem_Input = {
  customData?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type MeterValues_Delete_Key_Input = {
  customData?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "MeterValues" */
export type MeterValues_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stopTransactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "MeterValues" */
export type MeterValues_Insert_Input = {
  StopTransaction?: InputMaybe<StopTransactions_Obj_Rel_Insert_Input>;
  Tariff?: InputMaybe<Tariffs_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  TransactionEvent?: InputMaybe<TransactionEvents_Obj_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sampledValue?: InputMaybe<Scalars['json']['input']>;
  stopTransactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type MeterValues_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "MeterValues" */
export type MeterValues_Max_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type MeterValues_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "MeterValues" */
export type MeterValues_Min_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "MeterValues" */
export type MeterValues_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<MeterValues>;
};

/** on_conflict condition type for table "MeterValues" */
export type MeterValues_On_Conflict = {
  constraint: MeterValues_Constraint;
  update_columns?: Array<MeterValues_Update_Column>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** Ordering options when selecting data from "MeterValues". */
export type MeterValues_Order_By = {
  StopTransaction?: InputMaybe<StopTransactions_Order_By>;
  Tariff?: InputMaybe<Tariffs_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  TransactionEvent?: InputMaybe<TransactionEvents_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  customData?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sampledValue?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: MeterValues */
export type MeterValues_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type MeterValues_Prepend_Input = {
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "MeterValues" */
export type MeterValues_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'id'
  /** column name */
  | 'sampledValue'
  /** column name */
  | 'stopTransactionDatabaseId'
  /** column name */
  | 'tariffId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionEventId'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "MeterValues" */
export type MeterValues_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sampledValue?: InputMaybe<Scalars['json']['input']>;
  stopTransactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type MeterValues_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "MeterValues" */
export type MeterValues_Stddev_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type MeterValues_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "MeterValues" */
export type MeterValues_Stddev_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type MeterValues_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "MeterValues" */
export type MeterValues_Stddev_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "MeterValues" */
export type MeterValues_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: MeterValues_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type MeterValues_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sampledValue?: InputMaybe<Scalars['json']['input']>;
  stopTransactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type MeterValues_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "MeterValues" */
export type MeterValues_Sum_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** update columns of table "MeterValues" */
export type MeterValues_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'id'
  /** column name */
  | 'sampledValue'
  /** column name */
  | 'stopTransactionDatabaseId'
  /** column name */
  | 'tariffId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionEventId'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

export type MeterValues_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<MeterValues_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<MeterValues_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<MeterValues_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<MeterValues_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<MeterValues_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<MeterValues_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<MeterValues_Set_Input>;
  /** filter the rows which have to be updated */
  where: MeterValues_Bool_Exp;
};

/** aggregate var_pop on columns */
export type MeterValues_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "MeterValues" */
export type MeterValues_Var_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type MeterValues_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "MeterValues" */
export type MeterValues_Var_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type MeterValues_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stopTransactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "MeterValues" */
export type MeterValues_Variance_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stopTransactionDatabaseId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** columns and relationships of "OCPPMessages" */
export type OcppMessages = {
  /** An object relationship */
  Tenant: Tenants;
  action?: Maybe<Scalars['String']['output']>;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  message?: Maybe<Scalars['jsonb']['output']>;
  origin?: Maybe<Scalars['String']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "OCPPMessages" */
export type OcppMessagesMessageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "OCPPMessages" */
export type OcppMessages_Aggregate = {
  aggregate?: Maybe<OcppMessages_Aggregate_Fields>;
  nodes: Array<OcppMessages>;
};

export type OcppMessages_Aggregate_Bool_Exp = {
  count?: InputMaybe<OcppMessages_Aggregate_Bool_Exp_Count>;
};

export type OcppMessages_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<OcppMessages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<OcppMessages_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "OCPPMessages" */
export type OcppMessages_Aggregate_Fields = {
  avg?: Maybe<OcppMessages_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcppMessages_Max_Fields>;
  min?: Maybe<OcppMessages_Min_Fields>;
  stddev?: Maybe<OcppMessages_Stddev_Fields>;
  stddev_pop?: Maybe<OcppMessages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcppMessages_Stddev_Samp_Fields>;
  sum?: Maybe<OcppMessages_Sum_Fields>;
  var_pop?: Maybe<OcppMessages_Var_Pop_Fields>;
  var_samp?: Maybe<OcppMessages_Var_Samp_Fields>;
  variance?: Maybe<OcppMessages_Variance_Fields>;
};

/** aggregate fields of "OCPPMessages" */
export type OcppMessages_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcppMessages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "OCPPMessages" */
export type OcppMessages_Aggregate_Order_By = {
  avg?: InputMaybe<OcppMessages_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<OcppMessages_Max_Order_By>;
  min?: InputMaybe<OcppMessages_Min_Order_By>;
  stddev?: InputMaybe<OcppMessages_Stddev_Order_By>;
  stddev_pop?: InputMaybe<OcppMessages_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<OcppMessages_Stddev_Samp_Order_By>;
  sum?: InputMaybe<OcppMessages_Sum_Order_By>;
  var_pop?: InputMaybe<OcppMessages_Var_Pop_Order_By>;
  var_samp?: InputMaybe<OcppMessages_Var_Samp_Order_By>;
  variance?: InputMaybe<OcppMessages_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OcppMessages_Append_Input = {
  message?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "OCPPMessages" */
export type OcppMessages_Arr_Rel_Insert_Input = {
  data: Array<OcppMessages_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<OcppMessages_On_Conflict>;
};

/** aggregate avg on columns */
export type OcppMessages_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "OCPPMessages" */
export type OcppMessages_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "OCPPMessages". All fields are combined with a logical 'AND'. */
export type OcppMessages_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<OcppMessages_Bool_Exp>>;
  _not?: InputMaybe<OcppMessages_Bool_Exp>;
  _or?: InputMaybe<Array<OcppMessages_Bool_Exp>>;
  action?: InputMaybe<String_Comparison_Exp>;
  correlationId?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  message?: InputMaybe<Jsonb_Comparison_Exp>;
  origin?: InputMaybe<String_Comparison_Exp>;
  protocol?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OCPPMessages" */
export type OcppMessages_Constraint =
  /** unique or primary key constraint on columns "id" */
  'OCPPMessages_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OcppMessages_Delete_At_Path_Input = {
  message?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OcppMessages_Delete_Elem_Input = {
  message?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OcppMessages_Delete_Key_Input = {
  message?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "OCPPMessages" */
export type OcppMessages_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OCPPMessages" */
export type OcppMessages_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  action?: InputMaybe<Scalars['String']['input']>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['jsonb']['input']>;
  origin?: InputMaybe<Scalars['String']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type OcppMessages_Max_Fields = {
  action?: Maybe<Scalars['String']['output']>;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  origin?: Maybe<Scalars['String']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "OCPPMessages" */
export type OcppMessages_Max_Order_By = {
  action?: InputMaybe<Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  origin?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type OcppMessages_Min_Fields = {
  action?: Maybe<Scalars['String']['output']>;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  origin?: Maybe<Scalars['String']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "OCPPMessages" */
export type OcppMessages_Min_Order_By = {
  action?: InputMaybe<Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  origin?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "OCPPMessages" */
export type OcppMessages_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcppMessages>;
};

/** on_conflict condition type for table "OCPPMessages" */
export type OcppMessages_On_Conflict = {
  constraint: OcppMessages_Constraint;
  update_columns?: Array<OcppMessages_Update_Column>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

/** Ordering options when selecting data from "OCPPMessages". */
export type OcppMessages_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  action?: InputMaybe<Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  origin?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OCPPMessages */
export type OcppMessages_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OcppMessages_Prepend_Input = {
  message?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "OCPPMessages" */
export type OcppMessages_Select_Column =
  /** column name */
  | 'action'
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'origin'
  /** column name */
  | 'protocol'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "OCPPMessages" */
export type OcppMessages_Set_Input = {
  action?: InputMaybe<Scalars['String']['input']>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['jsonb']['input']>;
  origin?: InputMaybe<Scalars['String']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type OcppMessages_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "OCPPMessages" */
export type OcppMessages_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type OcppMessages_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "OCPPMessages" */
export type OcppMessages_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type OcppMessages_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "OCPPMessages" */
export type OcppMessages_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "OCPPMessages" */
export type OcppMessages_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcppMessages_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcppMessages_Stream_Cursor_Value_Input = {
  action?: InputMaybe<Scalars['String']['input']>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['jsonb']['input']>;
  origin?: InputMaybe<Scalars['String']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type OcppMessages_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "OCPPMessages" */
export type OcppMessages_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "OCPPMessages" */
export type OcppMessages_Update_Column =
  /** column name */
  | 'action'
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'origin'
  /** column name */
  | 'protocol'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'updatedAt';

export type OcppMessages_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<OcppMessages_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<OcppMessages_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<OcppMessages_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<OcppMessages_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcppMessages_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<OcppMessages_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcppMessages_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcppMessages_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcppMessages_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "OCPPMessages" */
export type OcppMessages_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type OcppMessages_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "OCPPMessages" */
export type OcppMessages_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type OcppMessages_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "OCPPMessages" */
export type OcppMessages_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Reservations" */
export type Reservations = {
  /** An object relationship */
  EvseType?: Maybe<EvseTypes>;
  /** An object relationship */
  Tenant: Tenants;
  connectorType?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  expiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  groupIdToken?: Maybe<Scalars['jsonb']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['jsonb']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  reserveStatus?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  terminatedByTransaction?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Reservations" */
export type ReservationsGroupIdTokenArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Reservations" */
export type ReservationsIdTokenArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Reservations" */
export type Reservations_Aggregate = {
  aggregate?: Maybe<Reservations_Aggregate_Fields>;
  nodes: Array<Reservations>;
};

export type Reservations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Reservations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Reservations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Reservations_Aggregate_Bool_Exp_Count>;
};

export type Reservations_Aggregate_Bool_Exp_Bool_And = {
  arguments: Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reservations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Reservations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reservations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Reservations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Reservations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reservations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Reservations" */
export type Reservations_Aggregate_Fields = {
  avg?: Maybe<Reservations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Reservations_Max_Fields>;
  min?: Maybe<Reservations_Min_Fields>;
  stddev?: Maybe<Reservations_Stddev_Fields>;
  stddev_pop?: Maybe<Reservations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Reservations_Stddev_Samp_Fields>;
  sum?: Maybe<Reservations_Sum_Fields>;
  var_pop?: Maybe<Reservations_Var_Pop_Fields>;
  var_samp?: Maybe<Reservations_Var_Samp_Fields>;
  variance?: Maybe<Reservations_Variance_Fields>;
};

/** aggregate fields of "Reservations" */
export type Reservations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Reservations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Reservations" */
export type Reservations_Aggregate_Order_By = {
  avg?: InputMaybe<Reservations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Reservations_Max_Order_By>;
  min?: InputMaybe<Reservations_Min_Order_By>;
  stddev?: InputMaybe<Reservations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Reservations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Reservations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Reservations_Sum_Order_By>;
  var_pop?: InputMaybe<Reservations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Reservations_Var_Samp_Order_By>;
  variance?: InputMaybe<Reservations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Reservations_Append_Input = {
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "Reservations" */
export type Reservations_Arr_Rel_Insert_Input = {
  data: Array<Reservations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** aggregate avg on columns */
export type Reservations_Avg_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Reservations" */
export type Reservations_Avg_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Reservations". All fields are combined with a logical 'AND'. */
export type Reservations_Bool_Exp = {
  EvseType?: InputMaybe<EvseTypes_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<Reservations_Bool_Exp>>;
  _not?: InputMaybe<Reservations_Bool_Exp>;
  _or?: InputMaybe<Array<Reservations_Bool_Exp>>;
  connectorType?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  expiryDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  groupIdToken?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idToken?: InputMaybe<Jsonb_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  reserveStatus?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  terminatedByTransaction?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Reservations" */
export type Reservations_Constraint =
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'Reservations_id_stationId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'Reservations_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Reservations_Delete_At_Path_Input = {
  groupIdToken?: InputMaybe<Array<Scalars['String']['input']>>;
  idToken?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Reservations_Delete_Elem_Input = {
  groupIdToken?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Reservations_Delete_Key_Input = {
  groupIdToken?: InputMaybe<Scalars['String']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "Reservations" */
export type Reservations_Inc_Input = {
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Reservations" */
export type Reservations_Insert_Input = {
  EvseType?: InputMaybe<EvseTypes_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  connectorType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  expiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  reserveStatus?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  terminatedByTransaction?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Reservations_Max_Fields = {
  connectorType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  expiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reserveStatus?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  terminatedByTransaction?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Reservations" */
export type Reservations_Max_Order_By = {
  connectorType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  expiryDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reserveStatus?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  terminatedByTransaction?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Reservations_Min_Fields = {
  connectorType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  expiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reserveStatus?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  terminatedByTransaction?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Reservations" */
export type Reservations_Min_Order_By = {
  connectorType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  expiryDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reserveStatus?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  terminatedByTransaction?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Reservations" */
export type Reservations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Reservations>;
};

/** on_conflict condition type for table "Reservations" */
export type Reservations_On_Conflict = {
  constraint: Reservations_Constraint;
  update_columns?: Array<Reservations_Update_Column>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** Ordering options when selecting data from "Reservations". */
export type Reservations_Order_By = {
  EvseType?: InputMaybe<EvseTypes_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  connectorType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  expiryDateTime?: InputMaybe<Order_By>;
  groupIdToken?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  reserveStatus?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  terminatedByTransaction?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Reservations */
export type Reservations_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Reservations_Prepend_Input = {
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "Reservations" */
export type Reservations_Select_Column =
  /** column name */
  | 'connectorType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'expiryDateTime'
  /** column name */
  | 'groupIdToken'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'isActive'
  /** column name */
  | 'reserveStatus'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'terminatedByTransaction'
  /** column name */
  | 'updatedAt';

/** select "Reservations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Reservations" */
export type Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isActive';

/** select "Reservations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Reservations" */
export type Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isActive';

/** input type for updating data in table "Reservations" */
export type Reservations_Set_Input = {
  connectorType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  expiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  reserveStatus?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  terminatedByTransaction?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Reservations_Stddev_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Reservations" */
export type Reservations_Stddev_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Reservations_Stddev_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Reservations" */
export type Reservations_Stddev_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Reservations_Stddev_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Reservations" */
export type Reservations_Stddev_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Reservations" */
export type Reservations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reservations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reservations_Stream_Cursor_Value_Input = {
  connectorType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  expiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  reserveStatus?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  terminatedByTransaction?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Reservations_Sum_Fields = {
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Reservations" */
export type Reservations_Sum_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Reservations" */
export type Reservations_Update_Column =
  /** column name */
  | 'connectorType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'expiryDateTime'
  /** column name */
  | 'groupIdToken'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'isActive'
  /** column name */
  | 'reserveStatus'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'terminatedByTransaction'
  /** column name */
  | 'updatedAt';

export type Reservations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Reservations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Reservations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Reservations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Reservations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Reservations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Reservations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Reservations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Reservations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Reservations_Var_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Reservations" */
export type Reservations_Var_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Reservations_Var_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Reservations" */
export type Reservations_Var_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Reservations_Variance_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Reservations" */
export type Reservations_Variance_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "SalesTariffs" */
export type SalesTariffs = {
  /** An object relationship */
  ChargingSchedule?: Maybe<ChargingSchedules>;
  /** An object relationship */
  Tenant: Tenants;
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  salesTariffDescription?: Maybe<Scalars['String']['output']>;
  salesTariffEntry?: Maybe<Scalars['jsonb']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "SalesTariffs" */
export type SalesTariffsSalesTariffEntryArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "SalesTariffs" */
export type SalesTariffs_Aggregate = {
  aggregate?: Maybe<SalesTariffs_Aggregate_Fields>;
  nodes: Array<SalesTariffs>;
};

export type SalesTariffs_Aggregate_Bool_Exp = {
  count?: InputMaybe<SalesTariffs_Aggregate_Bool_Exp_Count>;
};

export type SalesTariffs_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SalesTariffs_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "SalesTariffs" */
export type SalesTariffs_Aggregate_Fields = {
  avg?: Maybe<SalesTariffs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SalesTariffs_Max_Fields>;
  min?: Maybe<SalesTariffs_Min_Fields>;
  stddev?: Maybe<SalesTariffs_Stddev_Fields>;
  stddev_pop?: Maybe<SalesTariffs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SalesTariffs_Stddev_Samp_Fields>;
  sum?: Maybe<SalesTariffs_Sum_Fields>;
  var_pop?: Maybe<SalesTariffs_Var_Pop_Fields>;
  var_samp?: Maybe<SalesTariffs_Var_Samp_Fields>;
  variance?: Maybe<SalesTariffs_Variance_Fields>;
};

/** aggregate fields of "SalesTariffs" */
export type SalesTariffs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "SalesTariffs" */
export type SalesTariffs_Aggregate_Order_By = {
  avg?: InputMaybe<SalesTariffs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<SalesTariffs_Max_Order_By>;
  min?: InputMaybe<SalesTariffs_Min_Order_By>;
  stddev?: InputMaybe<SalesTariffs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<SalesTariffs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<SalesTariffs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<SalesTariffs_Sum_Order_By>;
  var_pop?: InputMaybe<SalesTariffs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<SalesTariffs_Var_Samp_Order_By>;
  variance?: InputMaybe<SalesTariffs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SalesTariffs_Append_Input = {
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "SalesTariffs" */
export type SalesTariffs_Arr_Rel_Insert_Input = {
  data: Array<SalesTariffs_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<SalesTariffs_On_Conflict>;
};

/** aggregate avg on columns */
export type SalesTariffs_Avg_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "SalesTariffs" */
export type SalesTariffs_Avg_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "SalesTariffs". All fields are combined with a logical 'AND'. */
export type SalesTariffs_Bool_Exp = {
  ChargingSchedule?: InputMaybe<ChargingSchedules_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<SalesTariffs_Bool_Exp>>;
  _not?: InputMaybe<SalesTariffs_Bool_Exp>;
  _or?: InputMaybe<Array<SalesTariffs_Bool_Exp>>;
  chargingScheduleDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  numEPriceLevels?: InputMaybe<Int_Comparison_Exp>;
  salesTariffDescription?: InputMaybe<String_Comparison_Exp>;
  salesTariffEntry?: InputMaybe<Jsonb_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SalesTariffs" */
export type SalesTariffs_Constraint =
  /** unique or primary key constraint on columns "id", "chargingScheduleDatabaseId" */
  | 'SalesTariffs_id_chargingScheduleDatabaseId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'SalesTariffs_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SalesTariffs_Delete_At_Path_Input = {
  salesTariffEntry?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SalesTariffs_Delete_Elem_Input = {
  salesTariffEntry?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SalesTariffs_Delete_Key_Input = {
  salesTariffEntry?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "SalesTariffs" */
export type SalesTariffs_Inc_Input = {
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SalesTariffs" */
export type SalesTariffs_Insert_Input = {
  ChargingSchedule?: InputMaybe<ChargingSchedules_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  salesTariffDescription?: InputMaybe<Scalars['String']['input']>;
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SalesTariffs_Max_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  salesTariffDescription?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "SalesTariffs" */
export type SalesTariffs_Max_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  salesTariffDescription?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type SalesTariffs_Min_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  salesTariffDescription?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "SalesTariffs" */
export type SalesTariffs_Min_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  salesTariffDescription?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "SalesTariffs" */
export type SalesTariffs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SalesTariffs>;
};

/** on_conflict condition type for table "SalesTariffs" */
export type SalesTariffs_On_Conflict = {
  constraint: SalesTariffs_Constraint;
  update_columns?: Array<SalesTariffs_Update_Column>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** Ordering options when selecting data from "SalesTariffs". */
export type SalesTariffs_Order_By = {
  ChargingSchedule?: InputMaybe<ChargingSchedules_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  salesTariffDescription?: InputMaybe<Order_By>;
  salesTariffEntry?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SalesTariffs */
export type SalesTariffs_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SalesTariffs_Prepend_Input = {
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "SalesTariffs" */
export type SalesTariffs_Select_Column =
  /** column name */
  | 'chargingScheduleDatabaseId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'numEPriceLevels'
  /** column name */
  | 'salesTariffDescription'
  /** column name */
  | 'salesTariffEntry'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "SalesTariffs" */
export type SalesTariffs_Set_Input = {
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  salesTariffDescription?: InputMaybe<Scalars['String']['input']>;
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SalesTariffs_Stddev_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "SalesTariffs" */
export type SalesTariffs_Stddev_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SalesTariffs_Stddev_Pop_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "SalesTariffs" */
export type SalesTariffs_Stddev_Pop_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SalesTariffs_Stddev_Samp_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "SalesTariffs" */
export type SalesTariffs_Stddev_Samp_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "SalesTariffs" */
export type SalesTariffs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SalesTariffs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SalesTariffs_Stream_Cursor_Value_Input = {
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  salesTariffDescription?: InputMaybe<Scalars['String']['input']>;
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SalesTariffs_Sum_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "SalesTariffs" */
export type SalesTariffs_Sum_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "SalesTariffs" */
export type SalesTariffs_Update_Column =
  /** column name */
  | 'chargingScheduleDatabaseId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'numEPriceLevels'
  /** column name */
  | 'salesTariffDescription'
  /** column name */
  | 'salesTariffEntry'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type SalesTariffs_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<SalesTariffs_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<SalesTariffs_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<SalesTariffs_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<SalesTariffs_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SalesTariffs_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<SalesTariffs_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SalesTariffs_Set_Input>;
  /** filter the rows which have to be updated */
  where: SalesTariffs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SalesTariffs_Var_Pop_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "SalesTariffs" */
export type SalesTariffs_Var_Pop_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SalesTariffs_Var_Samp_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "SalesTariffs" */
export type SalesTariffs_Var_Samp_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type SalesTariffs_Variance_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "SalesTariffs" */
export type SalesTariffs_Variance_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "SecurityEvents" */
export type SecurityEvents = {
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "SecurityEvents" */
export type SecurityEvents_Aggregate = {
  aggregate?: Maybe<SecurityEvents_Aggregate_Fields>;
  nodes: Array<SecurityEvents>;
};

export type SecurityEvents_Aggregate_Bool_Exp = {
  count?: InputMaybe<SecurityEvents_Aggregate_Bool_Exp_Count>;
};

export type SecurityEvents_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SecurityEvents_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "SecurityEvents" */
export type SecurityEvents_Aggregate_Fields = {
  avg?: Maybe<SecurityEvents_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SecurityEvents_Max_Fields>;
  min?: Maybe<SecurityEvents_Min_Fields>;
  stddev?: Maybe<SecurityEvents_Stddev_Fields>;
  stddev_pop?: Maybe<SecurityEvents_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SecurityEvents_Stddev_Samp_Fields>;
  sum?: Maybe<SecurityEvents_Sum_Fields>;
  var_pop?: Maybe<SecurityEvents_Var_Pop_Fields>;
  var_samp?: Maybe<SecurityEvents_Var_Samp_Fields>;
  variance?: Maybe<SecurityEvents_Variance_Fields>;
};

/** aggregate fields of "SecurityEvents" */
export type SecurityEvents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "SecurityEvents" */
export type SecurityEvents_Aggregate_Order_By = {
  avg?: InputMaybe<SecurityEvents_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<SecurityEvents_Max_Order_By>;
  min?: InputMaybe<SecurityEvents_Min_Order_By>;
  stddev?: InputMaybe<SecurityEvents_Stddev_Order_By>;
  stddev_pop?: InputMaybe<SecurityEvents_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<SecurityEvents_Stddev_Samp_Order_By>;
  sum?: InputMaybe<SecurityEvents_Sum_Order_By>;
  var_pop?: InputMaybe<SecurityEvents_Var_Pop_Order_By>;
  var_samp?: InputMaybe<SecurityEvents_Var_Samp_Order_By>;
  variance?: InputMaybe<SecurityEvents_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "SecurityEvents" */
export type SecurityEvents_Arr_Rel_Insert_Input = {
  data: Array<SecurityEvents_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<SecurityEvents_On_Conflict>;
};

/** aggregate avg on columns */
export type SecurityEvents_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "SecurityEvents" */
export type SecurityEvents_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "SecurityEvents". All fields are combined with a logical 'AND'. */
export type SecurityEvents_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<SecurityEvents_Bool_Exp>>;
  _not?: InputMaybe<SecurityEvents_Bool_Exp>;
  _or?: InputMaybe<Array<SecurityEvents_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  techInfo?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SecurityEvents" */
export type SecurityEvents_Constraint =
  /** unique or primary key constraint on columns "id" */
  'SecurityEvents_pkey';

/** input type for incrementing numeric columns in table "SecurityEvents" */
export type SecurityEvents_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SecurityEvents" */
export type SecurityEvents_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SecurityEvents_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "SecurityEvents" */
export type SecurityEvents_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type SecurityEvents_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "SecurityEvents" */
export type SecurityEvents_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "SecurityEvents" */
export type SecurityEvents_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SecurityEvents>;
};

/** on_conflict condition type for table "SecurityEvents" */
export type SecurityEvents_On_Conflict = {
  constraint: SecurityEvents_Constraint;
  update_columns?: Array<SecurityEvents_Update_Column>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

/** Ordering options when selecting data from "SecurityEvents". */
export type SecurityEvents_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SecurityEvents */
export type SecurityEvents_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "SecurityEvents" */
export type SecurityEvents_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'techInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "SecurityEvents" */
export type SecurityEvents_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SecurityEvents_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "SecurityEvents" */
export type SecurityEvents_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SecurityEvents_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "SecurityEvents" */
export type SecurityEvents_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SecurityEvents_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "SecurityEvents" */
export type SecurityEvents_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "SecurityEvents" */
export type SecurityEvents_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SecurityEvents_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SecurityEvents_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SecurityEvents_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "SecurityEvents" */
export type SecurityEvents_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "SecurityEvents" */
export type SecurityEvents_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'techInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

export type SecurityEvents_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SecurityEvents_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SecurityEvents_Set_Input>;
  /** filter the rows which have to be updated */
  where: SecurityEvents_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SecurityEvents_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "SecurityEvents" */
export type SecurityEvents_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SecurityEvents_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "SecurityEvents" */
export type SecurityEvents_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type SecurityEvents_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "SecurityEvents" */
export type SecurityEvents_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations = {
  /** An object relationship */
  LocalListAuthorization: LocalListAuthorizations;
  /** An object relationship */
  SendLocalList: SendLocalLists;
  /** An object relationship */
  Tenant: Tenants;
  authorizationId: Scalars['Int']['output'];
  createdAt: Scalars['timestamptz']['output'];
  sendLocalListId: Scalars['Int']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Aggregate = {
  aggregate?: Maybe<SendLocalListAuthorizations_Aggregate_Fields>;
  nodes: Array<SendLocalListAuthorizations>;
};

export type SendLocalListAuthorizations_Aggregate_Bool_Exp = {
  count?: InputMaybe<SendLocalListAuthorizations_Aggregate_Bool_Exp_Count>;
};

export type SendLocalListAuthorizations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Aggregate_Fields = {
  avg?: Maybe<SendLocalListAuthorizations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SendLocalListAuthorizations_Max_Fields>;
  min?: Maybe<SendLocalListAuthorizations_Min_Fields>;
  stddev?: Maybe<SendLocalListAuthorizations_Stddev_Fields>;
  stddev_pop?: Maybe<SendLocalListAuthorizations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SendLocalListAuthorizations_Stddev_Samp_Fields>;
  sum?: Maybe<SendLocalListAuthorizations_Sum_Fields>;
  var_pop?: Maybe<SendLocalListAuthorizations_Var_Pop_Fields>;
  var_samp?: Maybe<SendLocalListAuthorizations_Var_Samp_Fields>;
  variance?: Maybe<SendLocalListAuthorizations_Variance_Fields>;
};

/** aggregate fields of "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Aggregate_Order_By = {
  avg?: InputMaybe<SendLocalListAuthorizations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<SendLocalListAuthorizations_Max_Order_By>;
  min?: InputMaybe<SendLocalListAuthorizations_Min_Order_By>;
  stddev?: InputMaybe<SendLocalListAuthorizations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<SendLocalListAuthorizations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<SendLocalListAuthorizations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<SendLocalListAuthorizations_Sum_Order_By>;
  var_pop?: InputMaybe<SendLocalListAuthorizations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<SendLocalListAuthorizations_Var_Samp_Order_By>;
  variance?: InputMaybe<SendLocalListAuthorizations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Arr_Rel_Insert_Input = {
  data: Array<SendLocalListAuthorizations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<SendLocalListAuthorizations_On_Conflict>;
};

/** aggregate avg on columns */
export type SendLocalListAuthorizations_Avg_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Avg_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "SendLocalListAuthorizations". All fields are combined with a logical 'AND'. */
export type SendLocalListAuthorizations_Bool_Exp = {
  LocalListAuthorization?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  SendLocalList?: InputMaybe<SendLocalLists_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<SendLocalListAuthorizations_Bool_Exp>>;
  _not?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
  _or?: InputMaybe<Array<SendLocalListAuthorizations_Bool_Exp>>;
  authorizationId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  sendLocalListId?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Constraint =
  /** unique or primary key constraint on columns "authorizationId", "sendLocalListId" */
  'SendLocalListAuthorizations_pkey';

/** input type for incrementing numeric columns in table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Inc_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  sendLocalListId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Insert_Input = {
  LocalListAuthorization?: InputMaybe<LocalListAuthorizations_Obj_Rel_Insert_Input>;
  SendLocalList?: InputMaybe<SendLocalLists_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  sendLocalListId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SendLocalListAuthorizations_Max_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  sendLocalListId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Max_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type SendLocalListAuthorizations_Min_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  sendLocalListId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Min_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SendLocalListAuthorizations>;
};

/** on_conflict condition type for table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_On_Conflict = {
  constraint: SendLocalListAuthorizations_Constraint;
  update_columns?: Array<SendLocalListAuthorizations_Update_Column>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** Ordering options when selecting data from "SendLocalListAuthorizations". */
export type SendLocalListAuthorizations_Order_By = {
  LocalListAuthorization?: InputMaybe<LocalListAuthorizations_Order_By>;
  SendLocalList?: InputMaybe<SendLocalLists_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  authorizationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SendLocalListAuthorizations */
export type SendLocalListAuthorizations_Pk_Columns_Input = {
  authorizationId: Scalars['Int']['input'];
  sendLocalListId: Scalars['Int']['input'];
};

/** select columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Select_Column =
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'sendLocalListId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Set_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  sendLocalListId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SendLocalListAuthorizations_Stddev_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Stddev_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SendLocalListAuthorizations_Stddev_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Stddev_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SendLocalListAuthorizations_Stddev_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Stddev_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SendLocalListAuthorizations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SendLocalListAuthorizations_Stream_Cursor_Value_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  sendLocalListId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SendLocalListAuthorizations_Sum_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  sendLocalListId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Sum_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Update_Column =
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'sendLocalListId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type SendLocalListAuthorizations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SendLocalListAuthorizations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SendLocalListAuthorizations_Set_Input>;
  /** filter the rows which have to be updated */
  where: SendLocalListAuthorizations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SendLocalListAuthorizations_Var_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Var_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SendLocalListAuthorizations_Var_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Var_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type SendLocalListAuthorizations_Variance_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  sendLocalListId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "SendLocalListAuthorizations" */
export type SendLocalListAuthorizations_Variance_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  sendLocalListId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "SendLocalLists" */
export type SendLocalLists = {
  /** An array relationship */
  SendLocalListAuthorizations: Array<SendLocalListAuthorizations>;
  /** An aggregate relationship */
  SendLocalListAuthorizations_aggregate: SendLocalListAuthorizations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updateType?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "SendLocalLists" */
export type SendLocalListsSendLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "SendLocalLists" */
export type SendLocalListsSendLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** aggregated selection of "SendLocalLists" */
export type SendLocalLists_Aggregate = {
  aggregate?: Maybe<SendLocalLists_Aggregate_Fields>;
  nodes: Array<SendLocalLists>;
};

export type SendLocalLists_Aggregate_Bool_Exp = {
  count?: InputMaybe<SendLocalLists_Aggregate_Bool_Exp_Count>;
};

export type SendLocalLists_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SendLocalLists_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "SendLocalLists" */
export type SendLocalLists_Aggregate_Fields = {
  avg?: Maybe<SendLocalLists_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SendLocalLists_Max_Fields>;
  min?: Maybe<SendLocalLists_Min_Fields>;
  stddev?: Maybe<SendLocalLists_Stddev_Fields>;
  stddev_pop?: Maybe<SendLocalLists_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SendLocalLists_Stddev_Samp_Fields>;
  sum?: Maybe<SendLocalLists_Sum_Fields>;
  var_pop?: Maybe<SendLocalLists_Var_Pop_Fields>;
  var_samp?: Maybe<SendLocalLists_Var_Samp_Fields>;
  variance?: Maybe<SendLocalLists_Variance_Fields>;
};

/** aggregate fields of "SendLocalLists" */
export type SendLocalLists_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "SendLocalLists" */
export type SendLocalLists_Aggregate_Order_By = {
  avg?: InputMaybe<SendLocalLists_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<SendLocalLists_Max_Order_By>;
  min?: InputMaybe<SendLocalLists_Min_Order_By>;
  stddev?: InputMaybe<SendLocalLists_Stddev_Order_By>;
  stddev_pop?: InputMaybe<SendLocalLists_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<SendLocalLists_Stddev_Samp_Order_By>;
  sum?: InputMaybe<SendLocalLists_Sum_Order_By>;
  var_pop?: InputMaybe<SendLocalLists_Var_Pop_Order_By>;
  var_samp?: InputMaybe<SendLocalLists_Var_Samp_Order_By>;
  variance?: InputMaybe<SendLocalLists_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "SendLocalLists" */
export type SendLocalLists_Arr_Rel_Insert_Input = {
  data: Array<SendLocalLists_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<SendLocalLists_On_Conflict>;
};

/** aggregate avg on columns */
export type SendLocalLists_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "SendLocalLists" */
export type SendLocalLists_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "SendLocalLists". All fields are combined with a logical 'AND'. */
export type SendLocalLists_Bool_Exp = {
  SendLocalListAuthorizations?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
  SendLocalListAuthorizations_aggregate?: InputMaybe<SendLocalListAuthorizations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<SendLocalLists_Bool_Exp>>;
  _not?: InputMaybe<SendLocalLists_Bool_Exp>;
  _or?: InputMaybe<Array<SendLocalLists_Bool_Exp>>;
  correlationId?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updateType?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  versionNumber?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "SendLocalLists" */
export type SendLocalLists_Constraint =
  /** unique or primary key constraint on columns "id" */
  'SendLocalLists_pkey';

/** input type for incrementing numeric columns in table "SendLocalLists" */
export type SendLocalLists_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SendLocalLists" */
export type SendLocalLists_Insert_Input = {
  SendLocalListAuthorizations?: InputMaybe<SendLocalListAuthorizations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updateType?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type SendLocalLists_Max_Fields = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updateType?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "SendLocalLists" */
export type SendLocalLists_Max_Order_By = {
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updateType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type SendLocalLists_Min_Fields = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updateType?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "SendLocalLists" */
export type SendLocalLists_Min_Order_By = {
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updateType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "SendLocalLists" */
export type SendLocalLists_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SendLocalLists>;
};

/** input type for inserting object relation for remote table "SendLocalLists" */
export type SendLocalLists_Obj_Rel_Insert_Input = {
  data: SendLocalLists_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<SendLocalLists_On_Conflict>;
};

/** on_conflict condition type for table "SendLocalLists" */
export type SendLocalLists_On_Conflict = {
  constraint: SendLocalLists_Constraint;
  update_columns?: Array<SendLocalLists_Update_Column>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

/** Ordering options when selecting data from "SendLocalLists". */
export type SendLocalLists_Order_By = {
  SendLocalListAuthorizations_aggregate?: InputMaybe<SendLocalListAuthorizations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updateType?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SendLocalLists */
export type SendLocalLists_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "SendLocalLists" */
export type SendLocalLists_Select_Column =
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updateType'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber';

/** input type for updating data in table "SendLocalLists" */
export type SendLocalLists_Set_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updateType?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type SendLocalLists_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "SendLocalLists" */
export type SendLocalLists_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SendLocalLists_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "SendLocalLists" */
export type SendLocalLists_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SendLocalLists_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "SendLocalLists" */
export type SendLocalLists_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "SendLocalLists" */
export type SendLocalLists_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SendLocalLists_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SendLocalLists_Stream_Cursor_Value_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updateType?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  versionNumber?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type SendLocalLists_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  versionNumber?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "SendLocalLists" */
export type SendLocalLists_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** update columns of table "SendLocalLists" */
export type SendLocalLists_Update_Column =
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updateType'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'versionNumber';

export type SendLocalLists_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SendLocalLists_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SendLocalLists_Set_Input>;
  /** filter the rows which have to be updated */
  where: SendLocalLists_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SendLocalLists_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "SendLocalLists" */
export type SendLocalLists_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SendLocalLists_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "SendLocalLists" */
export type SendLocalLists_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type SendLocalLists_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  versionNumber?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "SendLocalLists" */
export type SendLocalLists_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  versionNumber?: InputMaybe<Order_By>;
};

/** columns and relationships of "ServerNetworkProfiles" */
export type ServerNetworkProfiles = {
  /** An array relationship */
  ChargingStationNetworkProfiles: Array<ChargingStationNetworkProfiles>;
  /** An aggregate relationship */
  ChargingStationNetworkProfiles_aggregate: ChargingStationNetworkProfiles_Aggregate;
  /** An array relationship */
  SetNetworkProfiles: Array<SetNetworkProfiles>;
  /** An aggregate relationship */
  SetNetworkProfiles_aggregate: SetNetworkProfiles_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  allowUnknownChargingStations?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  host?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  mtlsCertificateAuthorityKeyFilePath?: Maybe<Scalars['String']['output']>;
  pingInterval?: Maybe<Scalars['Int']['output']>;
  port?: Maybe<Scalars['Int']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  rootCACertificateFilePath?: Maybe<Scalars['String']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  tenantId: Scalars['Int']['output'];
  tlsCertificateChainFilePath?: Maybe<Scalars['String']['output']>;
  tlsKeyFilePath?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ServerNetworkProfiles" */
export type ServerNetworkProfilesChargingStationNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "ServerNetworkProfiles" */
export type ServerNetworkProfilesChargingStationNetworkProfiles_AggregateArgs =
  {
    distinct_on?: InputMaybe<
      Array<ChargingStationNetworkProfiles_Select_Column>
    >;
    limit?: InputMaybe<Scalars['Int']['input']>;
    offset?: InputMaybe<Scalars['Int']['input']>;
    order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
    where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  };

/** columns and relationships of "ServerNetworkProfiles" */
export type ServerNetworkProfilesSetNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "ServerNetworkProfiles" */
export type ServerNetworkProfilesSetNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

/** aggregated selection of "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Aggregate = {
  aggregate?: Maybe<ServerNetworkProfiles_Aggregate_Fields>;
  nodes: Array<ServerNetworkProfiles>;
};

export type ServerNetworkProfiles_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ServerNetworkProfiles_Aggregate_Bool_Exp_Count>;
};

export type ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_And = {
  arguments: ServerNetworkProfiles_Select_Column_ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ServerNetworkProfiles_Select_Column_ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ServerNetworkProfiles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Aggregate_Fields = {
  avg?: Maybe<ServerNetworkProfiles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerNetworkProfiles_Max_Fields>;
  min?: Maybe<ServerNetworkProfiles_Min_Fields>;
  stddev?: Maybe<ServerNetworkProfiles_Stddev_Fields>;
  stddev_pop?: Maybe<ServerNetworkProfiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerNetworkProfiles_Stddev_Samp_Fields>;
  sum?: Maybe<ServerNetworkProfiles_Sum_Fields>;
  var_pop?: Maybe<ServerNetworkProfiles_Var_Pop_Fields>;
  var_samp?: Maybe<ServerNetworkProfiles_Var_Samp_Fields>;
  variance?: Maybe<ServerNetworkProfiles_Variance_Fields>;
};

/** aggregate fields of "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Aggregate_Order_By = {
  avg?: InputMaybe<ServerNetworkProfiles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ServerNetworkProfiles_Max_Order_By>;
  min?: InputMaybe<ServerNetworkProfiles_Min_Order_By>;
  stddev?: InputMaybe<ServerNetworkProfiles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ServerNetworkProfiles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ServerNetworkProfiles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ServerNetworkProfiles_Sum_Order_By>;
  var_pop?: InputMaybe<ServerNetworkProfiles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ServerNetworkProfiles_Var_Samp_Order_By>;
  variance?: InputMaybe<ServerNetworkProfiles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Arr_Rel_Insert_Input = {
  data: Array<ServerNetworkProfiles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerNetworkProfiles_On_Conflict>;
};

/** aggregate avg on columns */
export type ServerNetworkProfiles_Avg_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Avg_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ServerNetworkProfiles". All fields are combined with a logical 'AND'. */
export type ServerNetworkProfiles_Bool_Exp = {
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Bool_Exp>;
  SetNetworkProfiles?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
  SetNetworkProfiles_aggregate?: InputMaybe<SetNetworkProfiles_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<ServerNetworkProfiles_Bool_Exp>>;
  _not?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  _or?: InputMaybe<Array<ServerNetworkProfiles_Bool_Exp>>;
  allowUnknownChargingStations?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  host?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  messageTimeout?: InputMaybe<Int_Comparison_Exp>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<String_Comparison_Exp>;
  pingInterval?: InputMaybe<Int_Comparison_Exp>;
  port?: InputMaybe<Int_Comparison_Exp>;
  protocol?: InputMaybe<String_Comparison_Exp>;
  rootCACertificateFilePath?: InputMaybe<String_Comparison_Exp>;
  securityProfile?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  tlsCertificateChainFilePath?: InputMaybe<String_Comparison_Exp>;
  tlsKeyFilePath?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ServerNetworkProfiles_pkey';

/** input type for incrementing numeric columns in table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Inc_Input = {
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  pingInterval?: InputMaybe<Scalars['Int']['input']>;
  port?: InputMaybe<Scalars['Int']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Insert_Input = {
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Arr_Rel_Insert_Input>;
  SetNetworkProfiles?: InputMaybe<SetNetworkProfiles_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  allowUnknownChargingStations?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  host?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<Scalars['String']['input']>;
  pingInterval?: InputMaybe<Scalars['Int']['input']>;
  port?: InputMaybe<Scalars['Int']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  rootCACertificateFilePath?: InputMaybe<Scalars['String']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tlsCertificateChainFilePath?: InputMaybe<Scalars['String']['input']>;
  tlsKeyFilePath?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ServerNetworkProfiles_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  mtlsCertificateAuthorityKeyFilePath?: Maybe<Scalars['String']['output']>;
  pingInterval?: Maybe<Scalars['Int']['output']>;
  port?: Maybe<Scalars['Int']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  rootCACertificateFilePath?: Maybe<Scalars['String']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  tlsCertificateChainFilePath?: Maybe<Scalars['String']['output']>;
  tlsKeyFilePath?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  host?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  rootCACertificateFilePath?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tlsCertificateChainFilePath?: InputMaybe<Order_By>;
  tlsKeyFilePath?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ServerNetworkProfiles_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  mtlsCertificateAuthorityKeyFilePath?: Maybe<Scalars['String']['output']>;
  pingInterval?: Maybe<Scalars['Int']['output']>;
  port?: Maybe<Scalars['Int']['output']>;
  protocol?: Maybe<Scalars['String']['output']>;
  rootCACertificateFilePath?: Maybe<Scalars['String']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  tlsCertificateChainFilePath?: Maybe<Scalars['String']['output']>;
  tlsKeyFilePath?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  host?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  rootCACertificateFilePath?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tlsCertificateChainFilePath?: InputMaybe<Order_By>;
  tlsKeyFilePath?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerNetworkProfiles>;
};

/** input type for inserting object relation for remote table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Obj_Rel_Insert_Input = {
  data: ServerNetworkProfiles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerNetworkProfiles_On_Conflict>;
};

/** on_conflict condition type for table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_On_Conflict = {
  constraint: ServerNetworkProfiles_Constraint;
  update_columns?: Array<ServerNetworkProfiles_Update_Column>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

/** Ordering options when selecting data from "ServerNetworkProfiles". */
export type ServerNetworkProfiles_Order_By = {
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Order_By>;
  SetNetworkProfiles_aggregate?: InputMaybe<SetNetworkProfiles_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  allowUnknownChargingStations?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  host?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  protocol?: InputMaybe<Order_By>;
  rootCACertificateFilePath?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  tlsCertificateChainFilePath?: InputMaybe<Order_By>;
  tlsKeyFilePath?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ServerNetworkProfiles */
export type ServerNetworkProfiles_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** select columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Select_Column =
  /** column name */
  | 'allowUnknownChargingStations'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'host'
  /** column name */
  | 'id'
  /** column name */
  | 'messageTimeout'
  /** column name */
  | 'mtlsCertificateAuthorityKeyFilePath'
  /** column name */
  | 'pingInterval'
  /** column name */
  | 'port'
  /** column name */
  | 'protocol'
  /** column name */
  | 'rootCACertificateFilePath'
  /** column name */
  | 'securityProfile'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'tlsCertificateChainFilePath'
  /** column name */
  | 'tlsKeyFilePath'
  /** column name */
  | 'updatedAt';

/** select "ServerNetworkProfiles_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Select_Column_ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'allowUnknownChargingStations';

/** select "ServerNetworkProfiles_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Select_Column_ServerNetworkProfiles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'allowUnknownChargingStations';

/** input type for updating data in table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Set_Input = {
  allowUnknownChargingStations?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  host?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<Scalars['String']['input']>;
  pingInterval?: InputMaybe<Scalars['Int']['input']>;
  port?: InputMaybe<Scalars['Int']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  rootCACertificateFilePath?: InputMaybe<Scalars['String']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tlsCertificateChainFilePath?: InputMaybe<Scalars['String']['input']>;
  tlsKeyFilePath?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ServerNetworkProfiles_Stddev_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Stddev_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ServerNetworkProfiles_Stddev_Pop_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Stddev_Pop_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ServerNetworkProfiles_Stddev_Samp_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Stddev_Samp_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerNetworkProfiles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerNetworkProfiles_Stream_Cursor_Value_Input = {
  allowUnknownChargingStations?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  host?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  mtlsCertificateAuthorityKeyFilePath?: InputMaybe<Scalars['String']['input']>;
  pingInterval?: InputMaybe<Scalars['Int']['input']>;
  port?: InputMaybe<Scalars['Int']['input']>;
  protocol?: InputMaybe<Scalars['String']['input']>;
  rootCACertificateFilePath?: InputMaybe<Scalars['String']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  tlsCertificateChainFilePath?: InputMaybe<Scalars['String']['input']>;
  tlsKeyFilePath?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ServerNetworkProfiles_Sum_Fields = {
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  pingInterval?: Maybe<Scalars['Int']['output']>;
  port?: Maybe<Scalars['Int']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Sum_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Update_Column =
  /** column name */
  | 'allowUnknownChargingStations'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'host'
  /** column name */
  | 'id'
  /** column name */
  | 'messageTimeout'
  /** column name */
  | 'mtlsCertificateAuthorityKeyFilePath'
  /** column name */
  | 'pingInterval'
  /** column name */
  | 'port'
  /** column name */
  | 'protocol'
  /** column name */
  | 'rootCACertificateFilePath'
  /** column name */
  | 'securityProfile'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'tlsCertificateChainFilePath'
  /** column name */
  | 'tlsKeyFilePath'
  /** column name */
  | 'updatedAt';

export type ServerNetworkProfiles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerNetworkProfiles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerNetworkProfiles_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerNetworkProfiles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerNetworkProfiles_Var_Pop_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Var_Pop_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ServerNetworkProfiles_Var_Samp_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Var_Samp_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ServerNetworkProfiles_Variance_Fields = {
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  pingInterval?: Maybe<Scalars['Float']['output']>;
  port?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ServerNetworkProfiles" */
export type ServerNetworkProfiles_Variance_Order_By = {
  messageTimeout?: InputMaybe<Order_By>;
  pingInterval?: InputMaybe<Order_By>;
  port?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "SetNetworkProfiles" */
export type SetNetworkProfiles = {
  /** An array relationship */
  ChargingStationNetworkProfiles: Array<ChargingStationNetworkProfiles>;
  /** An aggregate relationship */
  ChargingStationNetworkProfiles_aggregate: ChargingStationNetworkProfiles_Aggregate;
  /** An object relationship */
  ServerNetworkProfile?: Maybe<ServerNetworkProfiles>;
  /** An object relationship */
  Tenant: Tenants;
  apn?: Maybe<Scalars['String']['output']>;
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  ocppCsmsUrl?: Maybe<Scalars['String']['output']>;
  ocppInterface?: Maybe<Scalars['String']['output']>;
  ocppTransport?: Maybe<Scalars['String']['output']>;
  ocppVersion?: Maybe<Scalars['String']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  vpn?: Maybe<Scalars['String']['output']>;
  websocketServerConfigId?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "SetNetworkProfiles" */
export type SetNetworkProfilesChargingStationNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "SetNetworkProfiles" */
export type SetNetworkProfilesChargingStationNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** aggregated selection of "SetNetworkProfiles" */
export type SetNetworkProfiles_Aggregate = {
  aggregate?: Maybe<SetNetworkProfiles_Aggregate_Fields>;
  nodes: Array<SetNetworkProfiles>;
};

export type SetNetworkProfiles_Aggregate_Bool_Exp = {
  count?: InputMaybe<SetNetworkProfiles_Aggregate_Bool_Exp_Count>;
};

export type SetNetworkProfiles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "SetNetworkProfiles" */
export type SetNetworkProfiles_Aggregate_Fields = {
  avg?: Maybe<SetNetworkProfiles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SetNetworkProfiles_Max_Fields>;
  min?: Maybe<SetNetworkProfiles_Min_Fields>;
  stddev?: Maybe<SetNetworkProfiles_Stddev_Fields>;
  stddev_pop?: Maybe<SetNetworkProfiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SetNetworkProfiles_Stddev_Samp_Fields>;
  sum?: Maybe<SetNetworkProfiles_Sum_Fields>;
  var_pop?: Maybe<SetNetworkProfiles_Var_Pop_Fields>;
  var_samp?: Maybe<SetNetworkProfiles_Var_Samp_Fields>;
  variance?: Maybe<SetNetworkProfiles_Variance_Fields>;
};

/** aggregate fields of "SetNetworkProfiles" */
export type SetNetworkProfiles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Aggregate_Order_By = {
  avg?: InputMaybe<SetNetworkProfiles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<SetNetworkProfiles_Max_Order_By>;
  min?: InputMaybe<SetNetworkProfiles_Min_Order_By>;
  stddev?: InputMaybe<SetNetworkProfiles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<SetNetworkProfiles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<SetNetworkProfiles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<SetNetworkProfiles_Sum_Order_By>;
  var_pop?: InputMaybe<SetNetworkProfiles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<SetNetworkProfiles_Var_Samp_Order_By>;
  variance?: InputMaybe<SetNetworkProfiles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "SetNetworkProfiles" */
export type SetNetworkProfiles_Arr_Rel_Insert_Input = {
  data: Array<SetNetworkProfiles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<SetNetworkProfiles_On_Conflict>;
};

/** aggregate avg on columns */
export type SetNetworkProfiles_Avg_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Avg_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "SetNetworkProfiles". All fields are combined with a logical 'AND'. */
export type SetNetworkProfiles_Bool_Exp = {
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Bool_Exp>;
  ServerNetworkProfile?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<SetNetworkProfiles_Bool_Exp>>;
  _not?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
  _or?: InputMaybe<Array<SetNetworkProfiles_Bool_Exp>>;
  apn?: InputMaybe<String_Comparison_Exp>;
  configurationSlot?: InputMaybe<Int_Comparison_Exp>;
  correlationId?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  messageTimeout?: InputMaybe<Int_Comparison_Exp>;
  ocppCsmsUrl?: InputMaybe<String_Comparison_Exp>;
  ocppInterface?: InputMaybe<String_Comparison_Exp>;
  ocppTransport?: InputMaybe<String_Comparison_Exp>;
  ocppVersion?: InputMaybe<String_Comparison_Exp>;
  securityProfile?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  vpn?: InputMaybe<String_Comparison_Exp>;
  websocketServerConfigId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "SetNetworkProfiles" */
export type SetNetworkProfiles_Constraint =
  /** unique or primary key constraint on columns "correlationId" */
  | 'SetNetworkProfiles_correlationId_key'
  /** unique or primary key constraint on columns "correlationId" */
  | 'SetNetworkProfiles_correlationId_key1'
  /** unique or primary key constraint on columns "correlationId" */
  | 'SetNetworkProfiles_correlationId_key2'
  /** unique or primary key constraint on columns "correlationId" */
  | 'SetNetworkProfiles_correlationId_key3'
  /** unique or primary key constraint on columns "correlationId" */
  | 'SetNetworkProfiles_correlationId_key4'
  /** unique or primary key constraint on columns "correlationId" */
  | 'SetNetworkProfiles_correlationId_key5'
  /** unique or primary key constraint on columns "id" */
  | 'SetNetworkProfiles_pkey';

/** input type for incrementing numeric columns in table "SetNetworkProfiles" */
export type SetNetworkProfiles_Inc_Input = {
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SetNetworkProfiles" */
export type SetNetworkProfiles_Insert_Input = {
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Arr_Rel_Insert_Input>;
  ServerNetworkProfile?: InputMaybe<ServerNetworkProfiles_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  apn?: InputMaybe<Scalars['String']['input']>;
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  ocppCsmsUrl?: InputMaybe<Scalars['String']['input']>;
  ocppInterface?: InputMaybe<Scalars['String']['input']>;
  ocppTransport?: InputMaybe<Scalars['String']['input']>;
  ocppVersion?: InputMaybe<Scalars['String']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vpn?: InputMaybe<Scalars['String']['input']>;
  websocketServerConfigId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type SetNetworkProfiles_Max_Fields = {
  apn?: Maybe<Scalars['String']['output']>;
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  ocppCsmsUrl?: Maybe<Scalars['String']['output']>;
  ocppInterface?: Maybe<Scalars['String']['output']>;
  ocppTransport?: Maybe<Scalars['String']['output']>;
  ocppVersion?: Maybe<Scalars['String']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  vpn?: Maybe<Scalars['String']['output']>;
  websocketServerConfigId?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Max_Order_By = {
  apn?: InputMaybe<Order_By>;
  configurationSlot?: InputMaybe<Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  ocppCsmsUrl?: InputMaybe<Order_By>;
  ocppInterface?: InputMaybe<Order_By>;
  ocppTransport?: InputMaybe<Order_By>;
  ocppVersion?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vpn?: InputMaybe<Order_By>;
  websocketServerConfigId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type SetNetworkProfiles_Min_Fields = {
  apn?: Maybe<Scalars['String']['output']>;
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  ocppCsmsUrl?: Maybe<Scalars['String']['output']>;
  ocppInterface?: Maybe<Scalars['String']['output']>;
  ocppTransport?: Maybe<Scalars['String']['output']>;
  ocppVersion?: Maybe<Scalars['String']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  vpn?: Maybe<Scalars['String']['output']>;
  websocketServerConfigId?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Min_Order_By = {
  apn?: InputMaybe<Order_By>;
  configurationSlot?: InputMaybe<Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  ocppCsmsUrl?: InputMaybe<Order_By>;
  ocppInterface?: InputMaybe<Order_By>;
  ocppTransport?: InputMaybe<Order_By>;
  ocppVersion?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vpn?: InputMaybe<Order_By>;
  websocketServerConfigId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "SetNetworkProfiles" */
export type SetNetworkProfiles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SetNetworkProfiles>;
};

/** input type for inserting object relation for remote table "SetNetworkProfiles" */
export type SetNetworkProfiles_Obj_Rel_Insert_Input = {
  data: SetNetworkProfiles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<SetNetworkProfiles_On_Conflict>;
};

/** on_conflict condition type for table "SetNetworkProfiles" */
export type SetNetworkProfiles_On_Conflict = {
  constraint: SetNetworkProfiles_Constraint;
  update_columns?: Array<SetNetworkProfiles_Update_Column>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

/** Ordering options when selecting data from "SetNetworkProfiles". */
export type SetNetworkProfiles_Order_By = {
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Order_By>;
  ServerNetworkProfile?: InputMaybe<ServerNetworkProfiles_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  apn?: InputMaybe<Order_By>;
  configurationSlot?: InputMaybe<Order_By>;
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  ocppCsmsUrl?: InputMaybe<Order_By>;
  ocppInterface?: InputMaybe<Order_By>;
  ocppTransport?: InputMaybe<Order_By>;
  ocppVersion?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vpn?: InputMaybe<Order_By>;
  websocketServerConfigId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SetNetworkProfiles */
export type SetNetworkProfiles_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Select_Column =
  /** column name */
  | 'apn'
  /** column name */
  | 'configurationSlot'
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'messageTimeout'
  /** column name */
  | 'ocppCsmsUrl'
  /** column name */
  | 'ocppInterface'
  /** column name */
  | 'ocppTransport'
  /** column name */
  | 'ocppVersion'
  /** column name */
  | 'securityProfile'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'vpn'
  /** column name */
  | 'websocketServerConfigId';

/** input type for updating data in table "SetNetworkProfiles" */
export type SetNetworkProfiles_Set_Input = {
  apn?: InputMaybe<Scalars['String']['input']>;
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  ocppCsmsUrl?: InputMaybe<Scalars['String']['input']>;
  ocppInterface?: InputMaybe<Scalars['String']['input']>;
  ocppTransport?: InputMaybe<Scalars['String']['input']>;
  ocppVersion?: InputMaybe<Scalars['String']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vpn?: InputMaybe<Scalars['String']['input']>;
  websocketServerConfigId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type SetNetworkProfiles_Stddev_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Stddev_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SetNetworkProfiles_Stddev_Pop_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Stddev_Pop_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SetNetworkProfiles_Stddev_Samp_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Stddev_Samp_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "SetNetworkProfiles" */
export type SetNetworkProfiles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SetNetworkProfiles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SetNetworkProfiles_Stream_Cursor_Value_Input = {
  apn?: InputMaybe<Scalars['String']['input']>;
  configurationSlot?: InputMaybe<Scalars['Int']['input']>;
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageTimeout?: InputMaybe<Scalars['Int']['input']>;
  ocppCsmsUrl?: InputMaybe<Scalars['String']['input']>;
  ocppInterface?: InputMaybe<Scalars['String']['input']>;
  ocppTransport?: InputMaybe<Scalars['String']['input']>;
  ocppVersion?: InputMaybe<Scalars['String']['input']>;
  securityProfile?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vpn?: InputMaybe<Scalars['String']['input']>;
  websocketServerConfigId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type SetNetworkProfiles_Sum_Fields = {
  configurationSlot?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageTimeout?: Maybe<Scalars['Int']['output']>;
  securityProfile?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Sum_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Update_Column =
  /** column name */
  | 'apn'
  /** column name */
  | 'configurationSlot'
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'messageTimeout'
  /** column name */
  | 'ocppCsmsUrl'
  /** column name */
  | 'ocppInterface'
  /** column name */
  | 'ocppTransport'
  /** column name */
  | 'ocppVersion'
  /** column name */
  | 'securityProfile'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'vpn'
  /** column name */
  | 'websocketServerConfigId';

export type SetNetworkProfiles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SetNetworkProfiles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SetNetworkProfiles_Set_Input>;
  /** filter the rows which have to be updated */
  where: SetNetworkProfiles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SetNetworkProfiles_Var_Pop_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Var_Pop_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SetNetworkProfiles_Var_Samp_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Var_Samp_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type SetNetworkProfiles_Variance_Fields = {
  configurationSlot?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  messageTimeout?: Maybe<Scalars['Float']['output']>;
  securityProfile?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "SetNetworkProfiles" */
export type SetNetworkProfiles_Variance_Order_By = {
  configurationSlot?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageTimeout?: InputMaybe<Order_By>;
  securityProfile?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "StartTransactions" */
export type StartTransactions = {
  /** An object relationship */
  Connector?: Maybe<Connectors>;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  connectorDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  idTokenDatabaseId?: Maybe<Scalars['Int']['output']>;
  meterStart?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "StartTransactions" */
export type StartTransactions_Aggregate = {
  aggregate?: Maybe<StartTransactions_Aggregate_Fields>;
  nodes: Array<StartTransactions>;
};

export type StartTransactions_Aggregate_Bool_Exp = {
  count?: InputMaybe<StartTransactions_Aggregate_Bool_Exp_Count>;
};

export type StartTransactions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<StartTransactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<StartTransactions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "StartTransactions" */
export type StartTransactions_Aggregate_Fields = {
  avg?: Maybe<StartTransactions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<StartTransactions_Max_Fields>;
  min?: Maybe<StartTransactions_Min_Fields>;
  stddev?: Maybe<StartTransactions_Stddev_Fields>;
  stddev_pop?: Maybe<StartTransactions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<StartTransactions_Stddev_Samp_Fields>;
  sum?: Maybe<StartTransactions_Sum_Fields>;
  var_pop?: Maybe<StartTransactions_Var_Pop_Fields>;
  var_samp?: Maybe<StartTransactions_Var_Samp_Fields>;
  variance?: Maybe<StartTransactions_Variance_Fields>;
};

/** aggregate fields of "StartTransactions" */
export type StartTransactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<StartTransactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "StartTransactions" */
export type StartTransactions_Aggregate_Order_By = {
  avg?: InputMaybe<StartTransactions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<StartTransactions_Max_Order_By>;
  min?: InputMaybe<StartTransactions_Min_Order_By>;
  stddev?: InputMaybe<StartTransactions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<StartTransactions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<StartTransactions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<StartTransactions_Sum_Order_By>;
  var_pop?: InputMaybe<StartTransactions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<StartTransactions_Var_Samp_Order_By>;
  variance?: InputMaybe<StartTransactions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "StartTransactions" */
export type StartTransactions_Arr_Rel_Insert_Input = {
  data: Array<StartTransactions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<StartTransactions_On_Conflict>;
};

/** aggregate avg on columns */
export type StartTransactions_Avg_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "StartTransactions" */
export type StartTransactions_Avg_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "StartTransactions". All fields are combined with a logical 'AND'. */
export type StartTransactions_Bool_Exp = {
  Connector?: InputMaybe<Connectors_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<StartTransactions_Bool_Exp>>;
  _not?: InputMaybe<StartTransactions_Bool_Exp>;
  _or?: InputMaybe<Array<StartTransactions_Bool_Exp>>;
  connectorDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idTokenDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  meterStart?: InputMaybe<Int_Comparison_Exp>;
  reservationId?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "StartTransactions" */
export type StartTransactions_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'StartTransactions_pkey'
  /** unique or primary key constraint on columns "transactionDatabaseId" */
  | 'StartTransactions_transactionDatabaseId_unique';

/** input type for incrementing numeric columns in table "StartTransactions" */
export type StartTransactions_Inc_Input = {
  connectorDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  meterStart?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "StartTransactions" */
export type StartTransactions_Insert_Input = {
  Connector?: InputMaybe<Connectors_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  connectorDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  meterStart?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type StartTransactions_Max_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Int']['output']>;
  meterStart?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "StartTransactions" */
export type StartTransactions_Max_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type StartTransactions_Min_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Int']['output']>;
  meterStart?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "StartTransactions" */
export type StartTransactions_Min_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "StartTransactions" */
export type StartTransactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<StartTransactions>;
};

/** input type for inserting object relation for remote table "StartTransactions" */
export type StartTransactions_Obj_Rel_Insert_Input = {
  data: StartTransactions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<StartTransactions_On_Conflict>;
};

/** on_conflict condition type for table "StartTransactions" */
export type StartTransactions_On_Conflict = {
  constraint: StartTransactions_Constraint;
  update_columns?: Array<StartTransactions_Update_Column>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

/** Ordering options when selecting data from "StartTransactions". */
export type StartTransactions_Order_By = {
  Connector?: InputMaybe<Connectors_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  connectorDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: StartTransactions */
export type StartTransactions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "StartTransactions" */
export type StartTransactions_Select_Column =
  /** column name */
  | 'connectorDatabaseId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenDatabaseId'
  /** column name */
  | 'meterStart'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "StartTransactions" */
export type StartTransactions_Set_Input = {
  connectorDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  meterStart?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type StartTransactions_Stddev_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "StartTransactions" */
export type StartTransactions_Stddev_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type StartTransactions_Stddev_Pop_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "StartTransactions" */
export type StartTransactions_Stddev_Pop_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type StartTransactions_Stddev_Samp_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "StartTransactions" */
export type StartTransactions_Stddev_Samp_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "StartTransactions" */
export type StartTransactions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: StartTransactions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type StartTransactions_Stream_Cursor_Value_Input = {
  connectorDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  meterStart?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type StartTransactions_Sum_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Int']['output']>;
  meterStart?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "StartTransactions" */
export type StartTransactions_Sum_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "StartTransactions" */
export type StartTransactions_Update_Column =
  /** column name */
  | 'connectorDatabaseId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenDatabaseId'
  /** column name */
  | 'meterStart'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

export type StartTransactions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<StartTransactions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<StartTransactions_Set_Input>;
  /** filter the rows which have to be updated */
  where: StartTransactions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type StartTransactions_Var_Pop_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "StartTransactions" */
export type StartTransactions_Var_Pop_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type StartTransactions_Var_Samp_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "StartTransactions" */
export type StartTransactions_Var_Samp_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type StartTransactions_Variance_Fields = {
  connectorDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenDatabaseId?: Maybe<Scalars['Float']['output']>;
  meterStart?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "StartTransactions" */
export type StartTransactions_Variance_Order_By = {
  connectorDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenDatabaseId?: InputMaybe<Order_By>;
  meterStart?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "StatusNotifications" */
export type StatusNotifications = {
  /** An object relationship */
  ChargingStation?: Maybe<ChargingStations>;
  /** An array relationship */
  LatestStatusNotifications: Array<LatestStatusNotifications>;
  /** An aggregate relationship */
  LatestStatusNotifications_aggregate: LatestStatusNotifications_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  connectorId?: Maybe<Scalars['Int']['output']>;
  connectorStatus?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  errorCode?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  info?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "StatusNotifications" */
export type StatusNotificationsLatestStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** columns and relationships of "StatusNotifications" */
export type StatusNotificationsLatestStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** aggregated selection of "StatusNotifications" */
export type StatusNotifications_Aggregate = {
  aggregate?: Maybe<StatusNotifications_Aggregate_Fields>;
  nodes: Array<StatusNotifications>;
};

export type StatusNotifications_Aggregate_Bool_Exp = {
  count?: InputMaybe<StatusNotifications_Aggregate_Bool_Exp_Count>;
};

export type StatusNotifications_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<StatusNotifications_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "StatusNotifications" */
export type StatusNotifications_Aggregate_Fields = {
  avg?: Maybe<StatusNotifications_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<StatusNotifications_Max_Fields>;
  min?: Maybe<StatusNotifications_Min_Fields>;
  stddev?: Maybe<StatusNotifications_Stddev_Fields>;
  stddev_pop?: Maybe<StatusNotifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<StatusNotifications_Stddev_Samp_Fields>;
  sum?: Maybe<StatusNotifications_Sum_Fields>;
  var_pop?: Maybe<StatusNotifications_Var_Pop_Fields>;
  var_samp?: Maybe<StatusNotifications_Var_Samp_Fields>;
  variance?: Maybe<StatusNotifications_Variance_Fields>;
};

/** aggregate fields of "StatusNotifications" */
export type StatusNotifications_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "StatusNotifications" */
export type StatusNotifications_Aggregate_Order_By = {
  avg?: InputMaybe<StatusNotifications_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<StatusNotifications_Max_Order_By>;
  min?: InputMaybe<StatusNotifications_Min_Order_By>;
  stddev?: InputMaybe<StatusNotifications_Stddev_Order_By>;
  stddev_pop?: InputMaybe<StatusNotifications_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<StatusNotifications_Stddev_Samp_Order_By>;
  sum?: InputMaybe<StatusNotifications_Sum_Order_By>;
  var_pop?: InputMaybe<StatusNotifications_Var_Pop_Order_By>;
  var_samp?: InputMaybe<StatusNotifications_Var_Samp_Order_By>;
  variance?: InputMaybe<StatusNotifications_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "StatusNotifications" */
export type StatusNotifications_Arr_Rel_Insert_Input = {
  data: Array<StatusNotifications_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** aggregate avg on columns */
export type StatusNotifications_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "StatusNotifications" */
export type StatusNotifications_Avg_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "StatusNotifications". All fields are combined with a logical 'AND'. */
export type StatusNotifications_Bool_Exp = {
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  LatestStatusNotifications?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
  LatestStatusNotifications_aggregate?: InputMaybe<LatestStatusNotifications_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<StatusNotifications_Bool_Exp>>;
  _not?: InputMaybe<StatusNotifications_Bool_Exp>;
  _or?: InputMaybe<Array<StatusNotifications_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  connectorStatus?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  errorCode?: InputMaybe<String_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  info?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  vendorErrorCode?: InputMaybe<String_Comparison_Exp>;
  vendorId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "StatusNotifications" */
export type StatusNotifications_Constraint =
  /** unique or primary key constraint on columns "id" */
  'StatusNotifications_pkey';

/** input type for incrementing numeric columns in table "StatusNotifications" */
export type StatusNotifications_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "StatusNotifications" */
export type StatusNotifications_Insert_Input = {
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  LatestStatusNotifications?: InputMaybe<LatestStatusNotifications_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  connectorStatus?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorCode?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type StatusNotifications_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  connectorStatus?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorCode?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "StatusNotifications" */
export type StatusNotifications_Max_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  connectorStatus?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type StatusNotifications_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  connectorStatus?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  errorCode?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "StatusNotifications" */
export type StatusNotifications_Min_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  connectorStatus?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "StatusNotifications" */
export type StatusNotifications_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<StatusNotifications>;
};

/** input type for inserting object relation for remote table "StatusNotifications" */
export type StatusNotifications_Obj_Rel_Insert_Input = {
  data: StatusNotifications_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** on_conflict condition type for table "StatusNotifications" */
export type StatusNotifications_On_Conflict = {
  constraint: StatusNotifications_Constraint;
  update_columns?: Array<StatusNotifications_Update_Column>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** Ordering options when selecting data from "StatusNotifications". */
export type StatusNotifications_Order_By = {
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  LatestStatusNotifications_aggregate?: InputMaybe<LatestStatusNotifications_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  connectorStatus?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: StatusNotifications */
export type StatusNotifications_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "StatusNotifications" */
export type StatusNotifications_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'connectorStatus'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'errorCode'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'info'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'vendorErrorCode'
  /** column name */
  | 'vendorId';

/** input type for updating data in table "StatusNotifications" */
export type StatusNotifications_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  connectorStatus?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorCode?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type StatusNotifications_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "StatusNotifications" */
export type StatusNotifications_Stddev_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type StatusNotifications_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "StatusNotifications" */
export type StatusNotifications_Stddev_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type StatusNotifications_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "StatusNotifications" */
export type StatusNotifications_Stddev_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "StatusNotifications" */
export type StatusNotifications_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: StatusNotifications_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type StatusNotifications_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  connectorStatus?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  errorCode?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type StatusNotifications_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "StatusNotifications" */
export type StatusNotifications_Sum_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "StatusNotifications" */
export type StatusNotifications_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'connectorStatus'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'errorCode'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'info'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'vendorErrorCode'
  /** column name */
  | 'vendorId';

export type StatusNotifications_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<StatusNotifications_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<StatusNotifications_Set_Input>;
  /** filter the rows which have to be updated */
  where: StatusNotifications_Bool_Exp;
};

/** aggregate var_pop on columns */
export type StatusNotifications_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "StatusNotifications" */
export type StatusNotifications_Var_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type StatusNotifications_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "StatusNotifications" */
export type StatusNotifications_Var_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type StatusNotifications_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "StatusNotifications" */
export type StatusNotifications_Variance_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "StopTransactions" */
export type StopTransactions = {
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  idTokenType?: Maybe<Scalars['String']['output']>;
  idTokenValue?: Maybe<Scalars['String']['output']>;
  meterStop?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "StopTransactions" */
export type StopTransactionsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "StopTransactions" */
export type StopTransactionsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** aggregated selection of "StopTransactions" */
export type StopTransactions_Aggregate = {
  aggregate?: Maybe<StopTransactions_Aggregate_Fields>;
  nodes: Array<StopTransactions>;
};

export type StopTransactions_Aggregate_Bool_Exp = {
  count?: InputMaybe<StopTransactions_Aggregate_Bool_Exp_Count>;
};

export type StopTransactions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<StopTransactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<StopTransactions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "StopTransactions" */
export type StopTransactions_Aggregate_Fields = {
  avg?: Maybe<StopTransactions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<StopTransactions_Max_Fields>;
  min?: Maybe<StopTransactions_Min_Fields>;
  stddev?: Maybe<StopTransactions_Stddev_Fields>;
  stddev_pop?: Maybe<StopTransactions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<StopTransactions_Stddev_Samp_Fields>;
  sum?: Maybe<StopTransactions_Sum_Fields>;
  var_pop?: Maybe<StopTransactions_Var_Pop_Fields>;
  var_samp?: Maybe<StopTransactions_Var_Samp_Fields>;
  variance?: Maybe<StopTransactions_Variance_Fields>;
};

/** aggregate fields of "StopTransactions" */
export type StopTransactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<StopTransactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "StopTransactions" */
export type StopTransactions_Aggregate_Order_By = {
  avg?: InputMaybe<StopTransactions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<StopTransactions_Max_Order_By>;
  min?: InputMaybe<StopTransactions_Min_Order_By>;
  stddev?: InputMaybe<StopTransactions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<StopTransactions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<StopTransactions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<StopTransactions_Sum_Order_By>;
  var_pop?: InputMaybe<StopTransactions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<StopTransactions_Var_Samp_Order_By>;
  variance?: InputMaybe<StopTransactions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "StopTransactions" */
export type StopTransactions_Arr_Rel_Insert_Input = {
  data: Array<StopTransactions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<StopTransactions_On_Conflict>;
};

/** aggregate avg on columns */
export type StopTransactions_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "StopTransactions" */
export type StopTransactions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "StopTransactions". All fields are combined with a logical 'AND'. */
export type StopTransactions_Bool_Exp = {
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<StopTransactions_Bool_Exp>>;
  _not?: InputMaybe<StopTransactions_Bool_Exp>;
  _or?: InputMaybe<Array<StopTransactions_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idTokenType?: InputMaybe<String_Comparison_Exp>;
  idTokenValue?: InputMaybe<String_Comparison_Exp>;
  meterStop?: InputMaybe<Int_Comparison_Exp>;
  reason?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "StopTransactions" */
export type StopTransactions_Constraint =
  /** unique or primary key constraint on columns "id" */
  'StopTransactions_pkey';

/** input type for incrementing numeric columns in table "StopTransactions" */
export type StopTransactions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  meterStop?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "StopTransactions" */
export type StopTransactions_Insert_Input = {
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  idTokenValue?: InputMaybe<Scalars['String']['input']>;
  meterStop?: InputMaybe<Scalars['Int']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type StopTransactions_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  idTokenValue?: Maybe<Scalars['String']['output']>;
  meterStop?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "StopTransactions" */
export type StopTransactions_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  idTokenValue?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type StopTransactions_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  idTokenValue?: Maybe<Scalars['String']['output']>;
  meterStop?: Maybe<Scalars['Int']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "StopTransactions" */
export type StopTransactions_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  idTokenValue?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "StopTransactions" */
export type StopTransactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<StopTransactions>;
};

/** input type for inserting object relation for remote table "StopTransactions" */
export type StopTransactions_Obj_Rel_Insert_Input = {
  data: StopTransactions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<StopTransactions_On_Conflict>;
};

/** on_conflict condition type for table "StopTransactions" */
export type StopTransactions_On_Conflict = {
  constraint: StopTransactions_Constraint;
  update_columns?: Array<StopTransactions_Update_Column>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

/** Ordering options when selecting data from "StopTransactions". */
export type StopTransactions_Order_By = {
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  idTokenValue?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  reason?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: StopTransactions */
export type StopTransactions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "StopTransactions" */
export type StopTransactions_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'idTokenValue'
  /** column name */
  | 'meterStop'
  /** column name */
  | 'reason'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "StopTransactions" */
export type StopTransactions_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  idTokenValue?: InputMaybe<Scalars['String']['input']>;
  meterStop?: InputMaybe<Scalars['Int']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type StopTransactions_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "StopTransactions" */
export type StopTransactions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type StopTransactions_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "StopTransactions" */
export type StopTransactions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type StopTransactions_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "StopTransactions" */
export type StopTransactions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "StopTransactions" */
export type StopTransactions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: StopTransactions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type StopTransactions_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  idTokenValue?: InputMaybe<Scalars['String']['input']>;
  meterStop?: InputMaybe<Scalars['Int']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type StopTransactions_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  meterStop?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "StopTransactions" */
export type StopTransactions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "StopTransactions" */
export type StopTransactions_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'idTokenValue'
  /** column name */
  | 'meterStop'
  /** column name */
  | 'reason'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

export type StopTransactions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<StopTransactions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<StopTransactions_Set_Input>;
  /** filter the rows which have to be updated */
  where: StopTransactions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type StopTransactions_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "StopTransactions" */
export type StopTransactions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type StopTransactions_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "StopTransactions" */
export type StopTransactions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type StopTransactions_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  meterStop?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "StopTransactions" */
export type StopTransactions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  meterStop?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Array_Comparison_Exp = {
  /** is the array contained in the given array value */
  _contained_in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the array contain the given value */
  _contains?: InputMaybe<Array<Scalars['String']['input']>>;
  _eq?: InputMaybe<Array<Scalars['String']['input']>>;
  _gt?: InputMaybe<Array<Scalars['String']['input']>>;
  _gte?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Array<Scalars['String']['input']>>;
  _lte?: InputMaybe<Array<Scalars['String']['input']>>;
  _neq?: InputMaybe<Array<Scalars['String']['input']>>;
  _nin?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Subscriptions" */
export type Subscriptions = {
  /** An object relationship */
  Tenant: Tenants;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  messageRegexFilter?: Maybe<Scalars['String']['output']>;
  onClose?: Maybe<Scalars['Boolean']['output']>;
  onConnect?: Maybe<Scalars['Boolean']['output']>;
  onMessage?: Maybe<Scalars['Boolean']['output']>;
  sentMessage?: Maybe<Scalars['Boolean']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "Subscriptions" */
export type Subscriptions_Aggregate = {
  aggregate?: Maybe<Subscriptions_Aggregate_Fields>;
  nodes: Array<Subscriptions>;
};

export type Subscriptions_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Subscriptions_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Subscriptions_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Subscriptions_Aggregate_Bool_Exp_Count>;
};

export type Subscriptions_Aggregate_Bool_Exp_Bool_And = {
  arguments: Subscriptions_Select_Column_Subscriptions_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Subscriptions_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Subscriptions_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Subscriptions_Select_Column_Subscriptions_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Subscriptions_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Subscriptions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Subscriptions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Subscriptions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Subscriptions" */
export type Subscriptions_Aggregate_Fields = {
  avg?: Maybe<Subscriptions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Subscriptions_Max_Fields>;
  min?: Maybe<Subscriptions_Min_Fields>;
  stddev?: Maybe<Subscriptions_Stddev_Fields>;
  stddev_pop?: Maybe<Subscriptions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Subscriptions_Stddev_Samp_Fields>;
  sum?: Maybe<Subscriptions_Sum_Fields>;
  var_pop?: Maybe<Subscriptions_Var_Pop_Fields>;
  var_samp?: Maybe<Subscriptions_Var_Samp_Fields>;
  variance?: Maybe<Subscriptions_Variance_Fields>;
};

/** aggregate fields of "Subscriptions" */
export type Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Subscriptions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Subscriptions" */
export type Subscriptions_Aggregate_Order_By = {
  avg?: InputMaybe<Subscriptions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Subscriptions_Max_Order_By>;
  min?: InputMaybe<Subscriptions_Min_Order_By>;
  stddev?: InputMaybe<Subscriptions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Subscriptions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Subscriptions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Subscriptions_Sum_Order_By>;
  var_pop?: InputMaybe<Subscriptions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Subscriptions_Var_Samp_Order_By>;
  variance?: InputMaybe<Subscriptions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Subscriptions" */
export type Subscriptions_Arr_Rel_Insert_Input = {
  data: Array<Subscriptions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Subscriptions_On_Conflict>;
};

/** aggregate avg on columns */
export type Subscriptions_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Subscriptions" */
export type Subscriptions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Subscriptions". All fields are combined with a logical 'AND'. */
export type Subscriptions_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<Subscriptions_Bool_Exp>>;
  _not?: InputMaybe<Subscriptions_Bool_Exp>;
  _or?: InputMaybe<Array<Subscriptions_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  messageRegexFilter?: InputMaybe<String_Comparison_Exp>;
  onClose?: InputMaybe<Boolean_Comparison_Exp>;
  onConnect?: InputMaybe<Boolean_Comparison_Exp>;
  onMessage?: InputMaybe<Boolean_Comparison_Exp>;
  sentMessage?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Subscriptions" */
export type Subscriptions_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Subscriptions_pkey';

/** input type for incrementing numeric columns in table "Subscriptions" */
export type Subscriptions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Subscriptions" */
export type Subscriptions_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageRegexFilter?: InputMaybe<Scalars['String']['input']>;
  onClose?: InputMaybe<Scalars['Boolean']['input']>;
  onConnect?: InputMaybe<Scalars['Boolean']['input']>;
  onMessage?: InputMaybe<Scalars['Boolean']['input']>;
  sentMessage?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Subscriptions_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageRegexFilter?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "Subscriptions" */
export type Subscriptions_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageRegexFilter?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Subscriptions_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageRegexFilter?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "Subscriptions" */
export type Subscriptions_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageRegexFilter?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Subscriptions" */
export type Subscriptions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Subscriptions>;
};

/** on_conflict condition type for table "Subscriptions" */
export type Subscriptions_On_Conflict = {
  constraint: Subscriptions_Constraint;
  update_columns?: Array<Subscriptions_Update_Column>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

/** Ordering options when selecting data from "Subscriptions". */
export type Subscriptions_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageRegexFilter?: InputMaybe<Order_By>;
  onClose?: InputMaybe<Order_By>;
  onConnect?: InputMaybe<Order_By>;
  onMessage?: InputMaybe<Order_By>;
  sentMessage?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Subscriptions */
export type Subscriptions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Subscriptions" */
export type Subscriptions_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'messageRegexFilter'
  /** column name */
  | 'onClose'
  /** column name */
  | 'onConnect'
  /** column name */
  | 'onMessage'
  /** column name */
  | 'sentMessage'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

/** select "Subscriptions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Subscriptions" */
export type Subscriptions_Select_Column_Subscriptions_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  | 'onClose'
  /** column name */
  | 'onConnect'
  /** column name */
  | 'onMessage'
  /** column name */
  | 'sentMessage';

/** select "Subscriptions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Subscriptions" */
export type Subscriptions_Select_Column_Subscriptions_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  | 'onClose'
  /** column name */
  | 'onConnect'
  /** column name */
  | 'onMessage'
  /** column name */
  | 'sentMessage';

/** input type for updating data in table "Subscriptions" */
export type Subscriptions_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageRegexFilter?: InputMaybe<Scalars['String']['input']>;
  onClose?: InputMaybe<Scalars['Boolean']['input']>;
  onConnect?: InputMaybe<Scalars['Boolean']['input']>;
  onMessage?: InputMaybe<Scalars['Boolean']['input']>;
  sentMessage?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Subscriptions_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Subscriptions" */
export type Subscriptions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Subscriptions_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Subscriptions" */
export type Subscriptions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Subscriptions_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Subscriptions" */
export type Subscriptions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Subscriptions" */
export type Subscriptions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Subscriptions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Subscriptions_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageRegexFilter?: InputMaybe<Scalars['String']['input']>;
  onClose?: InputMaybe<Scalars['Boolean']['input']>;
  onConnect?: InputMaybe<Scalars['Boolean']['input']>;
  onMessage?: InputMaybe<Scalars['Boolean']['input']>;
  sentMessage?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Subscriptions_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Subscriptions" */
export type Subscriptions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Subscriptions" */
export type Subscriptions_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'messageRegexFilter'
  /** column name */
  | 'onClose'
  /** column name */
  | 'onConnect'
  /** column name */
  | 'onMessage'
  /** column name */
  | 'sentMessage'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

export type Subscriptions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Subscriptions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Subscriptions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Subscriptions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Subscriptions_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Subscriptions" */
export type Subscriptions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Subscriptions_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Subscriptions" */
export type Subscriptions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Subscriptions_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Subscriptions" */
export type Subscriptions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Tariffs" */
export type Tariffs = {
  /** An object relationship */
  Connector?: Maybe<Connectors>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  currency: Scalars['bpchar']['output'];
  id: Scalars['Int']['output'];
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh: Scalars['numeric']['output'];
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tariffAltText?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Tariffs" */
export type TariffsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Tariffs" */
export type TariffsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Tariffs" */
export type TariffsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Tariffs" */
export type TariffsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** aggregated selection of "Tariffs" */
export type Tariffs_Aggregate = {
  aggregate?: Maybe<Tariffs_Aggregate_Fields>;
  nodes: Array<Tariffs>;
};

export type Tariffs_Aggregate_Bool_Exp = {
  count?: InputMaybe<Tariffs_Aggregate_Bool_Exp_Count>;
};

export type Tariffs_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Tariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Tariffs_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Tariffs" */
export type Tariffs_Aggregate_Fields = {
  avg?: Maybe<Tariffs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Tariffs_Max_Fields>;
  min?: Maybe<Tariffs_Min_Fields>;
  stddev?: Maybe<Tariffs_Stddev_Fields>;
  stddev_pop?: Maybe<Tariffs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tariffs_Stddev_Samp_Fields>;
  sum?: Maybe<Tariffs_Sum_Fields>;
  var_pop?: Maybe<Tariffs_Var_Pop_Fields>;
  var_samp?: Maybe<Tariffs_Var_Samp_Fields>;
  variance?: Maybe<Tariffs_Variance_Fields>;
};

/** aggregate fields of "Tariffs" */
export type Tariffs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Tariffs" */
export type Tariffs_Aggregate_Order_By = {
  avg?: InputMaybe<Tariffs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Tariffs_Max_Order_By>;
  min?: InputMaybe<Tariffs_Min_Order_By>;
  stddev?: InputMaybe<Tariffs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Tariffs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Tariffs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Tariffs_Sum_Order_By>;
  var_pop?: InputMaybe<Tariffs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Tariffs_Var_Samp_Order_By>;
  variance?: InputMaybe<Tariffs_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Tariffs" */
export type Tariffs_Arr_Rel_Insert_Input = {
  data: Array<Tariffs_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Tariffs_On_Conflict>;
};

/** aggregate avg on columns */
export type Tariffs_Avg_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Tariffs" */
export type Tariffs_Avg_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Tariffs". All fields are combined with a logical 'AND'. */
export type Tariffs_Bool_Exp = {
  Connector?: InputMaybe<Connectors_Bool_Exp>;
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Tariffs_Bool_Exp>>;
  _not?: InputMaybe<Tariffs_Bool_Exp>;
  _or?: InputMaybe<Array<Tariffs_Bool_Exp>>;
  authorizationAmount?: InputMaybe<Numeric_Comparison_Exp>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<Bpchar_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  paymentFee?: InputMaybe<Numeric_Comparison_Exp>;
  pricePerKwh?: InputMaybe<Numeric_Comparison_Exp>;
  pricePerMin?: InputMaybe<Numeric_Comparison_Exp>;
  pricePerSession?: InputMaybe<Numeric_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tariffAltText?: InputMaybe<String_Comparison_Exp>;
  taxRate?: InputMaybe<Numeric_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Tariffs" */
export type Tariffs_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Tariffs_pkey'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key1'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key2'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key3'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key4'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key5';

/** input type for incrementing numeric columns in table "Tariffs" */
export type Tariffs_Inc_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Tariffs" */
export type Tariffs_Insert_Input = {
  Connector?: InputMaybe<Connectors_Obj_Rel_Insert_Input>;
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['bpchar']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tariffAltText?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Tariffs_Max_Fields = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['bpchar']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh?: Maybe<Scalars['numeric']['output']>;
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tariffAltText?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Tariffs" */
export type Tariffs_Max_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tariffAltText?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Tariffs_Min_Fields = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['bpchar']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh?: Maybe<Scalars['numeric']['output']>;
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tariffAltText?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Tariffs" */
export type Tariffs_Min_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tariffAltText?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Tariffs" */
export type Tariffs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Tariffs>;
};

/** input type for inserting object relation for remote table "Tariffs" */
export type Tariffs_Obj_Rel_Insert_Input = {
  data: Tariffs_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tariffs_On_Conflict>;
};

/** on_conflict condition type for table "Tariffs" */
export type Tariffs_On_Conflict = {
  constraint: Tariffs_Constraint;
  update_columns?: Array<Tariffs_Update_Column>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

/** Ordering options when selecting data from "Tariffs". */
export type Tariffs_Order_By = {
  Connector?: InputMaybe<Connectors_Order_By>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tariffAltText?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Tariffs */
export type Tariffs_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Tariffs" */
export type Tariffs_Select_Column =
  /** column name */
  | 'authorizationAmount'
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'id'
  /** column name */
  | 'paymentFee'
  /** column name */
  | 'pricePerKwh'
  /** column name */
  | 'pricePerMin'
  /** column name */
  | 'pricePerSession'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tariffAltText'
  /** column name */
  | 'taxRate'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Tariffs" */
export type Tariffs_Set_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['bpchar']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tariffAltText?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Tariffs_Stddev_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Tariffs" */
export type Tariffs_Stddev_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tariffs_Stddev_Pop_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Tariffs" */
export type Tariffs_Stddev_Pop_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tariffs_Stddev_Samp_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Tariffs" */
export type Tariffs_Stddev_Samp_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Tariffs" */
export type Tariffs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tariffs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tariffs_Stream_Cursor_Value_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['bpchar']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tariffAltText?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Tariffs_Sum_Fields = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh?: Maybe<Scalars['numeric']['output']>;
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Tariffs" */
export type Tariffs_Sum_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Tariffs" */
export type Tariffs_Update_Column =
  /** column name */
  | 'authorizationAmount'
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'id'
  /** column name */
  | 'paymentFee'
  /** column name */
  | 'pricePerKwh'
  /** column name */
  | 'pricePerMin'
  /** column name */
  | 'pricePerSession'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tariffAltText'
  /** column name */
  | 'taxRate'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type Tariffs_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tariffs_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tariffs_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tariffs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tariffs_Var_Pop_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Tariffs" */
export type Tariffs_Var_Pop_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tariffs_Var_Samp_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Tariffs" */
export type Tariffs_Var_Samp_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Tariffs_Variance_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Tariffs" */
export type Tariffs_Variance_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "TenantPartners" */
export type TenantPartners = {
  /** An array relationship */
  AsyncJobStatuses: Array<AsyncJobStatuses>;
  /** An aggregate relationship */
  AsyncJobStatuses_aggregate: AsyncJobStatuses_Aggregate;
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  countryCode: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  partnerProfileOCPI?: Maybe<Scalars['jsonb']['output']>;
  partyId: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "TenantPartners" */
export type TenantPartnersAsyncJobStatusesArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

/** columns and relationships of "TenantPartners" */
export type TenantPartnersAsyncJobStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

/** columns and relationships of "TenantPartners" */
export type TenantPartnersAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "TenantPartners" */
export type TenantPartnersAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "TenantPartners" */
export type TenantPartnersPartnerProfileOcpiArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "TenantPartners" */
export type TenantPartners_Aggregate = {
  aggregate?: Maybe<TenantPartners_Aggregate_Fields>;
  nodes: Array<TenantPartners>;
};

export type TenantPartners_Aggregate_Bool_Exp = {
  count?: InputMaybe<TenantPartners_Aggregate_Bool_Exp_Count>;
};

export type TenantPartners_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<TenantPartners_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TenantPartners_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "TenantPartners" */
export type TenantPartners_Aggregate_Fields = {
  avg?: Maybe<TenantPartners_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TenantPartners_Max_Fields>;
  min?: Maybe<TenantPartners_Min_Fields>;
  stddev?: Maybe<TenantPartners_Stddev_Fields>;
  stddev_pop?: Maybe<TenantPartners_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<TenantPartners_Stddev_Samp_Fields>;
  sum?: Maybe<TenantPartners_Sum_Fields>;
  var_pop?: Maybe<TenantPartners_Var_Pop_Fields>;
  var_samp?: Maybe<TenantPartners_Var_Samp_Fields>;
  variance?: Maybe<TenantPartners_Variance_Fields>;
};

/** aggregate fields of "TenantPartners" */
export type TenantPartners_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TenantPartners_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "TenantPartners" */
export type TenantPartners_Aggregate_Order_By = {
  avg?: InputMaybe<TenantPartners_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<TenantPartners_Max_Order_By>;
  min?: InputMaybe<TenantPartners_Min_Order_By>;
  stddev?: InputMaybe<TenantPartners_Stddev_Order_By>;
  stddev_pop?: InputMaybe<TenantPartners_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<TenantPartners_Stddev_Samp_Order_By>;
  sum?: InputMaybe<TenantPartners_Sum_Order_By>;
  var_pop?: InputMaybe<TenantPartners_Var_Pop_Order_By>;
  var_samp?: InputMaybe<TenantPartners_Var_Samp_Order_By>;
  variance?: InputMaybe<TenantPartners_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type TenantPartners_Append_Input = {
  partnerProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "TenantPartners" */
export type TenantPartners_Arr_Rel_Insert_Input = {
  data: Array<TenantPartners_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<TenantPartners_On_Conflict>;
};

/** aggregate avg on columns */
export type TenantPartners_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "TenantPartners" */
export type TenantPartners_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "TenantPartners". All fields are combined with a logical 'AND'. */
export type TenantPartners_Bool_Exp = {
  AsyncJobStatuses?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
  AsyncJobStatuses_aggregate?: InputMaybe<AsyncJobStatuses_Aggregate_Bool_Exp>;
  Authorizations?: InputMaybe<Authorizations_Bool_Exp>;
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  _and?: InputMaybe<Array<TenantPartners_Bool_Exp>>;
  _not?: InputMaybe<TenantPartners_Bool_Exp>;
  _or?: InputMaybe<Array<TenantPartners_Bool_Exp>>;
  countryCode?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  partnerProfileOCPI?: InputMaybe<Jsonb_Comparison_Exp>;
  partyId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "TenantPartners" */
export type TenantPartners_Constraint =
  /** unique or primary key constraint on columns "id" */
  'TenantPartners_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type TenantPartners_Delete_At_Path_Input = {
  partnerProfileOCPI?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type TenantPartners_Delete_Elem_Input = {
  partnerProfileOCPI?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type TenantPartners_Delete_Key_Input = {
  partnerProfileOCPI?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "TenantPartners" */
export type TenantPartners_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "TenantPartners" */
export type TenantPartners_Insert_Input = {
  AsyncJobStatuses?: InputMaybe<AsyncJobStatuses_Arr_Rel_Insert_Input>;
  Authorizations?: InputMaybe<Authorizations_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partnerProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type TenantPartners_Max_Fields = {
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "TenantPartners" */
export type TenantPartners_Max_Order_By = {
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type TenantPartners_Min_Fields = {
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "TenantPartners" */
export type TenantPartners_Min_Order_By = {
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "TenantPartners" */
export type TenantPartners_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<TenantPartners>;
};

/** input type for inserting object relation for remote table "TenantPartners" */
export type TenantPartners_Obj_Rel_Insert_Input = {
  data: TenantPartners_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<TenantPartners_On_Conflict>;
};

/** on_conflict condition type for table "TenantPartners" */
export type TenantPartners_On_Conflict = {
  constraint: TenantPartners_Constraint;
  update_columns?: Array<TenantPartners_Update_Column>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

/** Ordering options when selecting data from "TenantPartners". */
export type TenantPartners_Order_By = {
  AsyncJobStatuses_aggregate?: InputMaybe<AsyncJobStatuses_Aggregate_Order_By>;
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partnerProfileOCPI?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: TenantPartners */
export type TenantPartners_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type TenantPartners_Prepend_Input = {
  partnerProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "TenantPartners" */
export type TenantPartners_Select_Column =
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'partnerProfileOCPI'
  /** column name */
  | 'partyId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "TenantPartners" */
export type TenantPartners_Set_Input = {
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partnerProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type TenantPartners_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "TenantPartners" */
export type TenantPartners_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type TenantPartners_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "TenantPartners" */
export type TenantPartners_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type TenantPartners_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "TenantPartners" */
export type TenantPartners_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "TenantPartners" */
export type TenantPartners_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TenantPartners_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TenantPartners_Stream_Cursor_Value_Input = {
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partnerProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type TenantPartners_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "TenantPartners" */
export type TenantPartners_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "TenantPartners" */
export type TenantPartners_Update_Column =
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'partnerProfileOCPI'
  /** column name */
  | 'partyId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type TenantPartners_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<TenantPartners_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<TenantPartners_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<TenantPartners_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<TenantPartners_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<TenantPartners_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<TenantPartners_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TenantPartners_Set_Input>;
  /** filter the rows which have to be updated */
  where: TenantPartners_Bool_Exp;
};

/** aggregate var_pop on columns */
export type TenantPartners_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "TenantPartners" */
export type TenantPartners_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type TenantPartners_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "TenantPartners" */
export type TenantPartners_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type TenantPartners_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "TenantPartners" */
export type TenantPartners_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Tenants" */
export type Tenants = {
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** An array relationship */
  Boots: Array<Boots>;
  /** An aggregate relationship */
  Boots_aggregate: Boots_Aggregate;
  /** An array relationship */
  Certificates: Array<Certificates>;
  /** An aggregate relationship */
  Certificates_aggregate: Certificates_Aggregate;
  /** An array relationship */
  ChangeConfigurations: Array<ChangeConfigurations>;
  /** An aggregate relationship */
  ChangeConfigurations_aggregate: ChangeConfigurations_Aggregate;
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** An array relationship */
  ChargingStationNetworkProfiles: Array<ChargingStationNetworkProfiles>;
  /** An aggregate relationship */
  ChargingStationNetworkProfiles_aggregate: ChargingStationNetworkProfiles_Aggregate;
  /** An array relationship */
  ChargingStationSecurityInfos: Array<ChargingStationSecurityInfos>;
  /** An aggregate relationship */
  ChargingStationSecurityInfos_aggregate: ChargingStationSecurityInfos_Aggregate;
  /** An array relationship */
  ChargingStationSequences: Array<ChargingStationSequences>;
  /** An aggregate relationship */
  ChargingStationSequences_aggregate: ChargingStationSequences_Aggregate;
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** An array relationship */
  CompositeSchedules: Array<CompositeSchedules>;
  /** An aggregate relationship */
  CompositeSchedules_aggregate: CompositeSchedules_Aggregate;
  /** An array relationship */
  Connectors: Array<Connectors>;
  /** An aggregate relationship */
  Connectors_aggregate: Connectors_Aggregate;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** An array relationship */
  EvseTypes: Array<EvseTypes>;
  /** An aggregate relationship */
  EvseTypes_aggregate: EvseTypes_Aggregate;
  /** An array relationship */
  Evses: Array<Evses>;
  /** An aggregate relationship */
  Evses_aggregate: Evses_Aggregate;
  /** An array relationship */
  InstalledCertificates: Array<InstalledCertificates>;
  /** An aggregate relationship */
  InstalledCertificates_aggregate: InstalledCertificates_Aggregate;
  /** An array relationship */
  LatestStatusNotifications: Array<LatestStatusNotifications>;
  /** An aggregate relationship */
  LatestStatusNotifications_aggregate: LatestStatusNotifications_Aggregate;
  /** An array relationship */
  LocalListAuthorizations: Array<LocalListAuthorizations>;
  /** An aggregate relationship */
  LocalListAuthorizations_aggregate: LocalListAuthorizations_Aggregate;
  /** An array relationship */
  LocalListVersionAuthorizations: Array<LocalListVersionAuthorizations>;
  /** An aggregate relationship */
  LocalListVersionAuthorizations_aggregate: LocalListVersionAuthorizations_Aggregate;
  /** An array relationship */
  LocalListVersions: Array<LocalListVersions>;
  /** An aggregate relationship */
  LocalListVersions_aggregate: LocalListVersions_Aggregate;
  /** An array relationship */
  Locations: Array<Locations>;
  /** An aggregate relationship */
  Locations_aggregate: Locations_Aggregate;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An array relationship */
  OCPPMessages: Array<OcppMessages>;
  /** An aggregate relationship */
  OCPPMessages_aggregate: OcppMessages_Aggregate;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  /** An array relationship */
  SecurityEvents: Array<SecurityEvents>;
  /** An aggregate relationship */
  SecurityEvents_aggregate: SecurityEvents_Aggregate;
  /** An array relationship */
  SendLocalListAuthorizations: Array<SendLocalListAuthorizations>;
  /** An aggregate relationship */
  SendLocalListAuthorizations_aggregate: SendLocalListAuthorizations_Aggregate;
  /** An array relationship */
  SendLocalLists: Array<SendLocalLists>;
  /** An aggregate relationship */
  SendLocalLists_aggregate: SendLocalLists_Aggregate;
  /** An array relationship */
  ServerNetworkProfiles: Array<ServerNetworkProfiles>;
  /** An aggregate relationship */
  ServerNetworkProfiles_aggregate: ServerNetworkProfiles_Aggregate;
  /** An array relationship */
  SetNetworkProfiles: Array<SetNetworkProfiles>;
  /** An aggregate relationship */
  SetNetworkProfiles_aggregate: SetNetworkProfiles_Aggregate;
  /** An array relationship */
  StartTransactions: Array<StartTransactions>;
  /** An aggregate relationship */
  StartTransactions_aggregate: StartTransactions_Aggregate;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** An array relationship */
  StopTransactions: Array<StopTransactions>;
  /** An aggregate relationship */
  StopTransactions_aggregate: StopTransactions_Aggregate;
  /** An array relationship */
  Subscriptions: Array<Subscriptions>;
  /** An aggregate relationship */
  Subscriptions_aggregate: Subscriptions_Aggregate;
  /** An array relationship */
  Tariffs: Array<Tariffs>;
  /** An aggregate relationship */
  Tariffs_aggregate: Tariffs_Aggregate;
  /** An array relationship */
  TenantPartners: Array<TenantPartners>;
  /** An aggregate relationship */
  TenantPartners_aggregate: TenantPartners_Aggregate;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** An array relationship */
  VariableCharacteristics: Array<VariableCharacteristics>;
  /** An aggregate relationship */
  VariableCharacteristics_aggregate: VariableCharacteristics_Aggregate;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  /** An array relationship */
  Variables: Array<Variables>;
  /** An aggregate relationship */
  Variables_aggregate: Variables_Aggregate;
  countryCode: Scalars['String']['output'];
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  partyId: Scalars['String']['output'];
  serverProfileOCPI?: Maybe<Scalars['jsonb']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "Tenants" */
export type TenantsAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsBootsArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsBoots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsCertificatesArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChangeConfigurationsArgs = {
  distinct_on?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChangeConfigurations_Order_By>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChangeConfigurations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChangeConfigurations_Order_By>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationSecurityInfosArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationSecurityInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationSequencesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationSequences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsCompositeSchedulesArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsCompositeSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsEvseTypesArgs = {
  distinct_on?: InputMaybe<Array<EvseTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EvseTypes_Order_By>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsEvseTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EvseTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EvseTypes_Order_By>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsEvsesArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsInstalledCertificatesArgs = {
  distinct_on?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<InstalledCertificates_Order_By>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsInstalledCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<InstalledCertificates_Order_By>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLatestStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLatestStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocalListVersionAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocalListVersionAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocalListVersionsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersions_Order_By>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocalListVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersions_Order_By>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsOcppMessagesArgs = {
  distinct_on?: InputMaybe<Array<OcppMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcppMessages_Order_By>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsOcppMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcppMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcppMessages_Order_By>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSecurityEventsArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSecurityEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSendLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSendLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSendLocalListsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalLists_Order_By>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSendLocalLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalLists_Order_By>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsServerNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNetworkProfiles_Order_By>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsServerNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNetworkProfiles_Order_By>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSetNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSetNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsStartTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsStartTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsStopTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StopTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StopTransactions_Order_By>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsStopTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StopTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StopTransactions_Order_By>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsSubscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTariffsArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTenantPartnersArgs = {
  distinct_on?: InputMaybe<Array<TenantPartners_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TenantPartners_Order_By>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTenantPartners_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TenantPartners_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TenantPartners_Order_By>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableCharacteristicsArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableCharacteristics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariablesArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

/** columns and relationships of "Tenants" */
export type TenantsServerProfileOcpiArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Tenants" */
export type Tenants_Aggregate = {
  aggregate?: Maybe<Tenants_Aggregate_Fields>;
  nodes: Array<Tenants>;
};

/** aggregate fields of "Tenants" */
export type Tenants_Aggregate_Fields = {
  avg?: Maybe<Tenants_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Tenants_Max_Fields>;
  min?: Maybe<Tenants_Min_Fields>;
  stddev?: Maybe<Tenants_Stddev_Fields>;
  stddev_pop?: Maybe<Tenants_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tenants_Stddev_Samp_Fields>;
  sum?: Maybe<Tenants_Sum_Fields>;
  var_pop?: Maybe<Tenants_Var_Pop_Fields>;
  var_samp?: Maybe<Tenants_Var_Samp_Fields>;
  variance?: Maybe<Tenants_Variance_Fields>;
};

/** aggregate fields of "Tenants" */
export type Tenants_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tenants_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Tenants_Append_Input = {
  serverProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Tenants_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Tenants". All fields are combined with a logical 'AND'. */
export type Tenants_Bool_Exp = {
  Authorizations?: InputMaybe<Authorizations_Bool_Exp>;
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Bool_Exp>;
  Boots?: InputMaybe<Boots_Bool_Exp>;
  Boots_aggregate?: InputMaybe<Boots_Aggregate_Bool_Exp>;
  Certificates?: InputMaybe<Certificates_Bool_Exp>;
  Certificates_aggregate?: InputMaybe<Certificates_Aggregate_Bool_Exp>;
  ChangeConfigurations?: InputMaybe<ChangeConfigurations_Bool_Exp>;
  ChangeConfigurations_aggregate?: InputMaybe<ChangeConfigurations_Aggregate_Bool_Exp>;
  ChargingNeeds?: InputMaybe<ChargingNeeds_Bool_Exp>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp>;
  ChargingProfiles?: InputMaybe<ChargingProfiles_Bool_Exp>;
  ChargingProfiles_aggregate?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp>;
  ChargingSchedules?: InputMaybe<ChargingSchedules_Bool_Exp>;
  ChargingSchedules_aggregate?: InputMaybe<ChargingSchedules_Aggregate_Bool_Exp>;
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Bool_Exp>;
  ChargingStationSecurityInfos?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
  ChargingStationSecurityInfos_aggregate?: InputMaybe<ChargingStationSecurityInfos_Aggregate_Bool_Exp>;
  ChargingStationSequences?: InputMaybe<ChargingStationSequences_Bool_Exp>;
  ChargingStationSequences_aggregate?: InputMaybe<ChargingStationSequences_Aggregate_Bool_Exp>;
  ChargingStations?: InputMaybe<ChargingStations_Bool_Exp>;
  ChargingStations_aggregate?: InputMaybe<ChargingStations_Aggregate_Bool_Exp>;
  ComponentVariables?: InputMaybe<ComponentVariables_Bool_Exp>;
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp>;
  Components?: InputMaybe<Components_Bool_Exp>;
  Components_aggregate?: InputMaybe<Components_Aggregate_Bool_Exp>;
  CompositeSchedules?: InputMaybe<CompositeSchedules_Bool_Exp>;
  CompositeSchedules_aggregate?: InputMaybe<CompositeSchedules_Aggregate_Bool_Exp>;
  Connectors?: InputMaybe<Connectors_Bool_Exp>;
  Connectors_aggregate?: InputMaybe<Connectors_Aggregate_Bool_Exp>;
  EventData?: InputMaybe<EventData_Bool_Exp>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Bool_Exp>;
  EvseTypes?: InputMaybe<EvseTypes_Bool_Exp>;
  EvseTypes_aggregate?: InputMaybe<EvseTypes_Aggregate_Bool_Exp>;
  Evses?: InputMaybe<Evses_Bool_Exp>;
  Evses_aggregate?: InputMaybe<Evses_Aggregate_Bool_Exp>;
  InstalledCertificates?: InputMaybe<InstalledCertificates_Bool_Exp>;
  InstalledCertificates_aggregate?: InputMaybe<InstalledCertificates_Aggregate_Bool_Exp>;
  LatestStatusNotifications?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
  LatestStatusNotifications_aggregate?: InputMaybe<LatestStatusNotifications_Aggregate_Bool_Exp>;
  LocalListAuthorizations?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
  LocalListAuthorizations_aggregate?: InputMaybe<LocalListAuthorizations_Aggregate_Bool_Exp>;
  LocalListVersionAuthorizations?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
  LocalListVersionAuthorizations_aggregate?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Bool_Exp>;
  LocalListVersions?: InputMaybe<LocalListVersions_Bool_Exp>;
  LocalListVersions_aggregate?: InputMaybe<LocalListVersions_Aggregate_Bool_Exp>;
  Locations?: InputMaybe<Locations_Bool_Exp>;
  Locations_aggregate?: InputMaybe<Locations_Aggregate_Bool_Exp>;
  MessageInfos?: InputMaybe<MessageInfos_Bool_Exp>;
  MessageInfos_aggregate?: InputMaybe<MessageInfos_Aggregate_Bool_Exp>;
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  OCPPMessages?: InputMaybe<OcppMessages_Bool_Exp>;
  OCPPMessages_aggregate?: InputMaybe<OcppMessages_Aggregate_Bool_Exp>;
  Reservations?: InputMaybe<Reservations_Bool_Exp>;
  Reservations_aggregate?: InputMaybe<Reservations_Aggregate_Bool_Exp>;
  SalesTariffs?: InputMaybe<SalesTariffs_Bool_Exp>;
  SalesTariffs_aggregate?: InputMaybe<SalesTariffs_Aggregate_Bool_Exp>;
  SecurityEvents?: InputMaybe<SecurityEvents_Bool_Exp>;
  SecurityEvents_aggregate?: InputMaybe<SecurityEvents_Aggregate_Bool_Exp>;
  SendLocalListAuthorizations?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
  SendLocalListAuthorizations_aggregate?: InputMaybe<SendLocalListAuthorizations_Aggregate_Bool_Exp>;
  SendLocalLists?: InputMaybe<SendLocalLists_Bool_Exp>;
  SendLocalLists_aggregate?: InputMaybe<SendLocalLists_Aggregate_Bool_Exp>;
  ServerNetworkProfiles?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
  ServerNetworkProfiles_aggregate?: InputMaybe<ServerNetworkProfiles_Aggregate_Bool_Exp>;
  SetNetworkProfiles?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
  SetNetworkProfiles_aggregate?: InputMaybe<SetNetworkProfiles_Aggregate_Bool_Exp>;
  StartTransactions?: InputMaybe<StartTransactions_Bool_Exp>;
  StartTransactions_aggregate?: InputMaybe<StartTransactions_Aggregate_Bool_Exp>;
  StatusNotifications?: InputMaybe<StatusNotifications_Bool_Exp>;
  StatusNotifications_aggregate?: InputMaybe<StatusNotifications_Aggregate_Bool_Exp>;
  StopTransactions?: InputMaybe<StopTransactions_Bool_Exp>;
  StopTransactions_aggregate?: InputMaybe<StopTransactions_Aggregate_Bool_Exp>;
  Subscriptions?: InputMaybe<Subscriptions_Bool_Exp>;
  Subscriptions_aggregate?: InputMaybe<Subscriptions_Aggregate_Bool_Exp>;
  Tariffs?: InputMaybe<Tariffs_Bool_Exp>;
  Tariffs_aggregate?: InputMaybe<Tariffs_Aggregate_Bool_Exp>;
  TenantPartners?: InputMaybe<TenantPartners_Bool_Exp>;
  TenantPartners_aggregate?: InputMaybe<TenantPartners_Aggregate_Bool_Exp>;
  TransactionEvents?: InputMaybe<TransactionEvents_Bool_Exp>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  VariableCharacteristics?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  VariableCharacteristics_aggregate?: InputMaybe<VariableCharacteristics_Aggregate_Bool_Exp>;
  VariableMonitoringStatuses?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  VariableMonitoringStatuses_aggregate?: InputMaybe<VariableMonitoringStatuses_Aggregate_Bool_Exp>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Bool_Exp>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp>;
  VariableStatuses?: InputMaybe<VariableStatuses_Bool_Exp>;
  VariableStatuses_aggregate?: InputMaybe<VariableStatuses_Aggregate_Bool_Exp>;
  Variables?: InputMaybe<Variables_Bool_Exp>;
  Variables_aggregate?: InputMaybe<Variables_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Tenants_Bool_Exp>>;
  _not?: InputMaybe<Tenants_Bool_Exp>;
  _or?: InputMaybe<Array<Tenants_Bool_Exp>>;
  countryCode?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  partyId?: InputMaybe<String_Comparison_Exp>;
  serverProfileOCPI?: InputMaybe<Jsonb_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Tenants" */
export type Tenants_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Tenants_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Tenants_Delete_At_Path_Input = {
  serverProfileOCPI?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Tenants_Delete_Elem_Input = {
  serverProfileOCPI?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Tenants_Delete_Key_Input = {
  serverProfileOCPI?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "Tenants" */
export type Tenants_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Tenants" */
export type Tenants_Insert_Input = {
  Authorizations?: InputMaybe<Authorizations_Arr_Rel_Insert_Input>;
  Boots?: InputMaybe<Boots_Arr_Rel_Insert_Input>;
  Certificates?: InputMaybe<Certificates_Arr_Rel_Insert_Input>;
  ChangeConfigurations?: InputMaybe<ChangeConfigurations_Arr_Rel_Insert_Input>;
  ChargingNeeds?: InputMaybe<ChargingNeeds_Arr_Rel_Insert_Input>;
  ChargingProfiles?: InputMaybe<ChargingProfiles_Arr_Rel_Insert_Input>;
  ChargingSchedules?: InputMaybe<ChargingSchedules_Arr_Rel_Insert_Input>;
  ChargingStationNetworkProfiles?: InputMaybe<ChargingStationNetworkProfiles_Arr_Rel_Insert_Input>;
  ChargingStationSecurityInfos?: InputMaybe<ChargingStationSecurityInfos_Arr_Rel_Insert_Input>;
  ChargingStationSequences?: InputMaybe<ChargingStationSequences_Arr_Rel_Insert_Input>;
  ChargingStations?: InputMaybe<ChargingStations_Arr_Rel_Insert_Input>;
  ComponentVariables?: InputMaybe<ComponentVariables_Arr_Rel_Insert_Input>;
  Components?: InputMaybe<Components_Arr_Rel_Insert_Input>;
  CompositeSchedules?: InputMaybe<CompositeSchedules_Arr_Rel_Insert_Input>;
  Connectors?: InputMaybe<Connectors_Arr_Rel_Insert_Input>;
  EventData?: InputMaybe<EventData_Arr_Rel_Insert_Input>;
  EvseTypes?: InputMaybe<EvseTypes_Arr_Rel_Insert_Input>;
  Evses?: InputMaybe<Evses_Arr_Rel_Insert_Input>;
  InstalledCertificates?: InputMaybe<InstalledCertificates_Arr_Rel_Insert_Input>;
  LatestStatusNotifications?: InputMaybe<LatestStatusNotifications_Arr_Rel_Insert_Input>;
  LocalListAuthorizations?: InputMaybe<LocalListAuthorizations_Arr_Rel_Insert_Input>;
  LocalListVersionAuthorizations?: InputMaybe<LocalListVersionAuthorizations_Arr_Rel_Insert_Input>;
  LocalListVersions?: InputMaybe<LocalListVersions_Arr_Rel_Insert_Input>;
  Locations?: InputMaybe<Locations_Arr_Rel_Insert_Input>;
  MessageInfos?: InputMaybe<MessageInfos_Arr_Rel_Insert_Input>;
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  OCPPMessages?: InputMaybe<OcppMessages_Arr_Rel_Insert_Input>;
  Reservations?: InputMaybe<Reservations_Arr_Rel_Insert_Input>;
  SalesTariffs?: InputMaybe<SalesTariffs_Arr_Rel_Insert_Input>;
  SecurityEvents?: InputMaybe<SecurityEvents_Arr_Rel_Insert_Input>;
  SendLocalListAuthorizations?: InputMaybe<SendLocalListAuthorizations_Arr_Rel_Insert_Input>;
  SendLocalLists?: InputMaybe<SendLocalLists_Arr_Rel_Insert_Input>;
  ServerNetworkProfiles?: InputMaybe<ServerNetworkProfiles_Arr_Rel_Insert_Input>;
  SetNetworkProfiles?: InputMaybe<SetNetworkProfiles_Arr_Rel_Insert_Input>;
  StartTransactions?: InputMaybe<StartTransactions_Arr_Rel_Insert_Input>;
  StatusNotifications?: InputMaybe<StatusNotifications_Arr_Rel_Insert_Input>;
  StopTransactions?: InputMaybe<StopTransactions_Arr_Rel_Insert_Input>;
  Subscriptions?: InputMaybe<Subscriptions_Arr_Rel_Insert_Input>;
  Tariffs?: InputMaybe<Tariffs_Arr_Rel_Insert_Input>;
  TenantPartners?: InputMaybe<TenantPartners_Arr_Rel_Insert_Input>;
  TransactionEvents?: InputMaybe<TransactionEvents_Arr_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  VariableCharacteristics?: InputMaybe<VariableCharacteristics_Arr_Rel_Insert_Input>;
  VariableMonitoringStatuses?: InputMaybe<VariableMonitoringStatuses_Arr_Rel_Insert_Input>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Arr_Rel_Insert_Input>;
  VariableStatuses?: InputMaybe<VariableStatuses_Arr_Rel_Insert_Input>;
  Variables?: InputMaybe<Variables_Arr_Rel_Insert_Input>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  serverProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Tenants_Max_Fields = {
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Tenants_Min_Fields = {
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "Tenants" */
export type Tenants_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Tenants>;
};

/** input type for inserting object relation for remote table "Tenants" */
export type Tenants_Obj_Rel_Insert_Input = {
  data: Tenants_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tenants_On_Conflict>;
};

/** on_conflict condition type for table "Tenants" */
export type Tenants_On_Conflict = {
  constraint: Tenants_Constraint;
  update_columns?: Array<Tenants_Update_Column>;
  where?: InputMaybe<Tenants_Bool_Exp>;
};

/** Ordering options when selecting data from "Tenants". */
export type Tenants_Order_By = {
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Order_By>;
  Boots_aggregate?: InputMaybe<Boots_Aggregate_Order_By>;
  Certificates_aggregate?: InputMaybe<Certificates_Aggregate_Order_By>;
  ChangeConfigurations_aggregate?: InputMaybe<ChangeConfigurations_Aggregate_Order_By>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Order_By>;
  ChargingProfiles_aggregate?: InputMaybe<ChargingProfiles_Aggregate_Order_By>;
  ChargingSchedules_aggregate?: InputMaybe<ChargingSchedules_Aggregate_Order_By>;
  ChargingStationNetworkProfiles_aggregate?: InputMaybe<ChargingStationNetworkProfiles_Aggregate_Order_By>;
  ChargingStationSecurityInfos_aggregate?: InputMaybe<ChargingStationSecurityInfos_Aggregate_Order_By>;
  ChargingStationSequences_aggregate?: InputMaybe<ChargingStationSequences_Aggregate_Order_By>;
  ChargingStations_aggregate?: InputMaybe<ChargingStations_Aggregate_Order_By>;
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Order_By>;
  Components_aggregate?: InputMaybe<Components_Aggregate_Order_By>;
  CompositeSchedules_aggregate?: InputMaybe<CompositeSchedules_Aggregate_Order_By>;
  Connectors_aggregate?: InputMaybe<Connectors_Aggregate_Order_By>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Order_By>;
  EvseTypes_aggregate?: InputMaybe<EvseTypes_Aggregate_Order_By>;
  Evses_aggregate?: InputMaybe<Evses_Aggregate_Order_By>;
  InstalledCertificates_aggregate?: InputMaybe<InstalledCertificates_Aggregate_Order_By>;
  LatestStatusNotifications_aggregate?: InputMaybe<LatestStatusNotifications_Aggregate_Order_By>;
  LocalListAuthorizations_aggregate?: InputMaybe<LocalListAuthorizations_Aggregate_Order_By>;
  LocalListVersionAuthorizations_aggregate?: InputMaybe<LocalListVersionAuthorizations_Aggregate_Order_By>;
  LocalListVersions_aggregate?: InputMaybe<LocalListVersions_Aggregate_Order_By>;
  Locations_aggregate?: InputMaybe<Locations_Aggregate_Order_By>;
  MessageInfos_aggregate?: InputMaybe<MessageInfos_Aggregate_Order_By>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  OCPPMessages_aggregate?: InputMaybe<OcppMessages_Aggregate_Order_By>;
  Reservations_aggregate?: InputMaybe<Reservations_Aggregate_Order_By>;
  SalesTariffs_aggregate?: InputMaybe<SalesTariffs_Aggregate_Order_By>;
  SecurityEvents_aggregate?: InputMaybe<SecurityEvents_Aggregate_Order_By>;
  SendLocalListAuthorizations_aggregate?: InputMaybe<SendLocalListAuthorizations_Aggregate_Order_By>;
  SendLocalLists_aggregate?: InputMaybe<SendLocalLists_Aggregate_Order_By>;
  ServerNetworkProfiles_aggregate?: InputMaybe<ServerNetworkProfiles_Aggregate_Order_By>;
  SetNetworkProfiles_aggregate?: InputMaybe<SetNetworkProfiles_Aggregate_Order_By>;
  StartTransactions_aggregate?: InputMaybe<StartTransactions_Aggregate_Order_By>;
  StatusNotifications_aggregate?: InputMaybe<StatusNotifications_Aggregate_Order_By>;
  StopTransactions_aggregate?: InputMaybe<StopTransactions_Aggregate_Order_By>;
  Subscriptions_aggregate?: InputMaybe<Subscriptions_Aggregate_Order_By>;
  Tariffs_aggregate?: InputMaybe<Tariffs_Aggregate_Order_By>;
  TenantPartners_aggregate?: InputMaybe<TenantPartners_Aggregate_Order_By>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  VariableCharacteristics_aggregate?: InputMaybe<VariableCharacteristics_Aggregate_Order_By>;
  VariableMonitoringStatuses_aggregate?: InputMaybe<VariableMonitoringStatuses_Aggregate_Order_By>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Order_By>;
  VariableStatuses_aggregate?: InputMaybe<VariableStatuses_Aggregate_Order_By>;
  Variables_aggregate?: InputMaybe<Variables_Aggregate_Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  serverProfileOCPI?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Tenants */
export type Tenants_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Tenants_Prepend_Input = {
  serverProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "Tenants" */
export type Tenants_Select_Column =
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'partyId'
  /** column name */
  | 'serverProfileOCPI'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

/** input type for updating data in table "Tenants" */
export type Tenants_Set_Input = {
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  serverProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Tenants_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Tenants_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Tenants_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Tenants" */
export type Tenants_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tenants_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tenants_Stream_Cursor_Value_Input = {
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  serverProfileOCPI?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Tenants_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Tenants" */
export type Tenants_Update_Column =
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'partyId'
  /** column name */
  | 'serverProfileOCPI'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

export type Tenants_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Tenants_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Tenants_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Tenants_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Tenants_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tenants_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Tenants_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tenants_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tenants_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tenants_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Tenants_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Tenants_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEvents = {
  /** An object relationship */
  EvseType?: Maybe<EvseTypes>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  eventType?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  idTokenType?: Maybe<Scalars['String']['output']>;
  idTokenValue?: Maybe<Scalars['String']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  offline?: Maybe<Scalars['Boolean']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionInfo?: Maybe<Scalars['json']['output']>;
  triggerReason?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEventsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEventsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEventsTransactionInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "TransactionEvents" */
export type TransactionEvents_Aggregate = {
  aggregate?: Maybe<TransactionEvents_Aggregate_Fields>;
  nodes: Array<TransactionEvents>;
};

export type TransactionEvents_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp_Count>;
};

export type TransactionEvents_Aggregate_Bool_Exp_Bool_And = {
  arguments: TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionEvents_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type TransactionEvents_Aggregate_Bool_Exp_Bool_Or = {
  arguments: TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionEvents_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type TransactionEvents_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionEvents_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "TransactionEvents" */
export type TransactionEvents_Aggregate_Fields = {
  avg?: Maybe<TransactionEvents_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TransactionEvents_Max_Fields>;
  min?: Maybe<TransactionEvents_Min_Fields>;
  stddev?: Maybe<TransactionEvents_Stddev_Fields>;
  stddev_pop?: Maybe<TransactionEvents_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<TransactionEvents_Stddev_Samp_Fields>;
  sum?: Maybe<TransactionEvents_Sum_Fields>;
  var_pop?: Maybe<TransactionEvents_Var_Pop_Fields>;
  var_samp?: Maybe<TransactionEvents_Var_Samp_Fields>;
  variance?: Maybe<TransactionEvents_Variance_Fields>;
};

/** aggregate fields of "TransactionEvents" */
export type TransactionEvents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "TransactionEvents" */
export type TransactionEvents_Aggregate_Order_By = {
  avg?: InputMaybe<TransactionEvents_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<TransactionEvents_Max_Order_By>;
  min?: InputMaybe<TransactionEvents_Min_Order_By>;
  stddev?: InputMaybe<TransactionEvents_Stddev_Order_By>;
  stddev_pop?: InputMaybe<TransactionEvents_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<TransactionEvents_Stddev_Samp_Order_By>;
  sum?: InputMaybe<TransactionEvents_Sum_Order_By>;
  var_pop?: InputMaybe<TransactionEvents_Var_Pop_Order_By>;
  var_samp?: InputMaybe<TransactionEvents_Var_Samp_Order_By>;
  variance?: InputMaybe<TransactionEvents_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "TransactionEvents" */
export type TransactionEvents_Arr_Rel_Insert_Input = {
  data: Array<TransactionEvents_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** aggregate avg on columns */
export type TransactionEvents_Avg_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "TransactionEvents" */
export type TransactionEvents_Avg_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "TransactionEvents". All fields are combined with a logical 'AND'. */
export type TransactionEvents_Bool_Exp = {
  EvseType?: InputMaybe<EvseTypes_Bool_Exp>;
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<TransactionEvents_Bool_Exp>>;
  _not?: InputMaybe<TransactionEvents_Bool_Exp>;
  _or?: InputMaybe<Array<TransactionEvents_Bool_Exp>>;
  cableMaxCurrent?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  eventType?: InputMaybe<String_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idTokenType?: InputMaybe<String_Comparison_Exp>;
  idTokenValue?: InputMaybe<String_Comparison_Exp>;
  numberOfPhasesUsed?: InputMaybe<Int_Comparison_Exp>;
  offline?: InputMaybe<Boolean_Comparison_Exp>;
  reservationId?: InputMaybe<Int_Comparison_Exp>;
  seqNo?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  transactionInfo?: InputMaybe<Json_Comparison_Exp>;
  triggerReason?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "TransactionEvents" */
export type TransactionEvents_Constraint =
  /** unique or primary key constraint on columns "id" */
  'TransactionEvents_pkey';

/** input type for incrementing numeric columns in table "TransactionEvents" */
export type TransactionEvents_Inc_Input = {
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "TransactionEvents" */
export type TransactionEvents_Insert_Input = {
  EvseType?: InputMaybe<EvseTypes_Obj_Rel_Insert_Input>;
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  idTokenValue?: InputMaybe<Scalars['String']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  offline?: InputMaybe<Scalars['Boolean']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionInfo?: InputMaybe<Scalars['json']['input']>;
  triggerReason?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type TransactionEvents_Max_Fields = {
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  idTokenValue?: Maybe<Scalars['String']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  triggerReason?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "TransactionEvents" */
export type TransactionEvents_Max_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventType?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  idTokenValue?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  triggerReason?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type TransactionEvents_Min_Fields = {
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenType?: Maybe<Scalars['String']['output']>;
  idTokenValue?: Maybe<Scalars['String']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  triggerReason?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "TransactionEvents" */
export type TransactionEvents_Min_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventType?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  idTokenValue?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  triggerReason?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "TransactionEvents" */
export type TransactionEvents_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<TransactionEvents>;
};

/** input type for inserting object relation for remote table "TransactionEvents" */
export type TransactionEvents_Obj_Rel_Insert_Input = {
  data: TransactionEvents_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** on_conflict condition type for table "TransactionEvents" */
export type TransactionEvents_On_Conflict = {
  constraint: TransactionEvents_Constraint;
  update_columns?: Array<TransactionEvents_Update_Column>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** Ordering options when selecting data from "TransactionEvents". */
export type TransactionEvents_Order_By = {
  EvseType?: InputMaybe<EvseTypes_Order_By>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  cableMaxCurrent?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventType?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenType?: InputMaybe<Order_By>;
  idTokenValue?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  offline?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionInfo?: InputMaybe<Order_By>;
  triggerReason?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: TransactionEvents */
export type TransactionEvents_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "TransactionEvents" */
export type TransactionEvents_Select_Column =
  /** column name */
  | 'cableMaxCurrent'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventType'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'idTokenValue'
  /** column name */
  | 'numberOfPhasesUsed'
  /** column name */
  | 'offline'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'seqNo'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionInfo'
  /** column name */
  | 'triggerReason'
  /** column name */
  | 'updatedAt';

/** select "TransactionEvents_aggregate_bool_exp_bool_and_arguments_columns" columns of table "TransactionEvents" */
export type TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'offline';

/** select "TransactionEvents_aggregate_bool_exp_bool_or_arguments_columns" columns of table "TransactionEvents" */
export type TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'offline';

/** input type for updating data in table "TransactionEvents" */
export type TransactionEvents_Set_Input = {
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  idTokenValue?: InputMaybe<Scalars['String']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  offline?: InputMaybe<Scalars['Boolean']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionInfo?: InputMaybe<Scalars['json']['input']>;
  triggerReason?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type TransactionEvents_Stddev_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "TransactionEvents" */
export type TransactionEvents_Stddev_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type TransactionEvents_Stddev_Pop_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "TransactionEvents" */
export type TransactionEvents_Stddev_Pop_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type TransactionEvents_Stddev_Samp_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "TransactionEvents" */
export type TransactionEvents_Stddev_Samp_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "TransactionEvents" */
export type TransactionEvents_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TransactionEvents_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TransactionEvents_Stream_Cursor_Value_Input = {
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenType?: InputMaybe<Scalars['String']['input']>;
  idTokenValue?: InputMaybe<Scalars['String']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  offline?: InputMaybe<Scalars['Boolean']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionInfo?: InputMaybe<Scalars['json']['input']>;
  triggerReason?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type TransactionEvents_Sum_Fields = {
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "TransactionEvents" */
export type TransactionEvents_Sum_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "TransactionEvents" */
export type TransactionEvents_Update_Column =
  /** column name */
  | 'cableMaxCurrent'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventType'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenType'
  /** column name */
  | 'idTokenValue'
  /** column name */
  | 'numberOfPhasesUsed'
  /** column name */
  | 'offline'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'seqNo'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionInfo'
  /** column name */
  | 'triggerReason'
  /** column name */
  | 'updatedAt';

export type TransactionEvents_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<TransactionEvents_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TransactionEvents_Set_Input>;
  /** filter the rows which have to be updated */
  where: TransactionEvents_Bool_Exp;
};

/** aggregate var_pop on columns */
export type TransactionEvents_Var_Pop_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "TransactionEvents" */
export type TransactionEvents_Var_Pop_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type TransactionEvents_Var_Samp_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "TransactionEvents" */
export type TransactionEvents_Var_Samp_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type TransactionEvents_Variance_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "TransactionEvents" */
export type TransactionEvents_Variance_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Transactions" */
export type Transactions = {
  /** An object relationship */
  Authorization?: Maybe<Authorizations>;
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** An object relationship */
  ChargingStation?: Maybe<ChargingStations>;
  /** An object relationship */
  Connector?: Maybe<Connectors>;
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An object relationship */
  Location?: Maybe<Locations>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An object relationship */
  StartTransaction?: Maybe<StartTransactions>;
  /** An object relationship */
  StopTransaction?: Maybe<StopTransactions>;
  /** An object relationship */
  Tariff?: Maybe<Tariffs>;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  authorizationId?: Maybe<Scalars['Int']['output']>;
  chargingState?: Maybe<Scalars['String']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  customData?: Maybe<Scalars['jsonb']['output']>;
  endTime?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  isActive?: Maybe<Scalars['Boolean']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  startTime?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  stoppedReason?: Maybe<Scalars['String']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId: Scalars['Int']['output'];
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalCost?: Maybe<Scalars['numeric']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsCustomDataArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Transactions" */
export type Transactions_Aggregate = {
  aggregate?: Maybe<Transactions_Aggregate_Fields>;
  nodes: Array<Transactions>;
};

export type Transactions_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Transactions_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Transactions_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Transactions_Aggregate_Bool_Exp_Count>;
};

export type Transactions_Aggregate_Bool_Exp_Bool_And = {
  arguments: Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Transactions_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Transactions_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Transactions_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Transactions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Transactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Transactions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Transactions" */
export type Transactions_Aggregate_Fields = {
  avg?: Maybe<Transactions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Transactions_Max_Fields>;
  min?: Maybe<Transactions_Min_Fields>;
  stddev?: Maybe<Transactions_Stddev_Fields>;
  stddev_pop?: Maybe<Transactions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Transactions_Stddev_Samp_Fields>;
  sum?: Maybe<Transactions_Sum_Fields>;
  var_pop?: Maybe<Transactions_Var_Pop_Fields>;
  var_samp?: Maybe<Transactions_Var_Samp_Fields>;
  variance?: Maybe<Transactions_Variance_Fields>;
};

/** aggregate fields of "Transactions" */
export type Transactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Transactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Transactions" */
export type Transactions_Aggregate_Order_By = {
  avg?: InputMaybe<Transactions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Transactions_Max_Order_By>;
  min?: InputMaybe<Transactions_Min_Order_By>;
  stddev?: InputMaybe<Transactions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Transactions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Transactions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Transactions_Sum_Order_By>;
  var_pop?: InputMaybe<Transactions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Transactions_Var_Samp_Order_By>;
  variance?: InputMaybe<Transactions_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Transactions_Append_Input = {
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "Transactions" */
export type Transactions_Arr_Rel_Insert_Input = {
  data: Array<Transactions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** aggregate avg on columns */
export type Transactions_Avg_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Transactions" */
export type Transactions_Avg_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Transactions". All fields are combined with a logical 'AND'. */
export type Transactions_Bool_Exp = {
  Authorization?: InputMaybe<Authorizations_Bool_Exp>;
  ChargingNeeds?: InputMaybe<ChargingNeeds_Bool_Exp>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp>;
  ChargingProfiles?: InputMaybe<ChargingProfiles_Bool_Exp>;
  ChargingProfiles_aggregate?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp>;
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  Connector?: InputMaybe<Connectors_Bool_Exp>;
  Evse?: InputMaybe<Evses_Bool_Exp>;
  Location?: InputMaybe<Locations_Bool_Exp>;
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  StartTransaction?: InputMaybe<StartTransactions_Bool_Exp>;
  StopTransaction?: InputMaybe<StopTransactions_Bool_Exp>;
  Tariff?: InputMaybe<Tariffs_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  TransactionEvents?: InputMaybe<TransactionEvents_Bool_Exp>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Transactions_Bool_Exp>>;
  _not?: InputMaybe<Transactions_Bool_Exp>;
  _or?: InputMaybe<Array<Transactions_Bool_Exp>>;
  authorizationId?: InputMaybe<Int_Comparison_Exp>;
  chargingState?: InputMaybe<String_Comparison_Exp>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  customData?: InputMaybe<Jsonb_Comparison_Exp>;
  endTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  locationId?: InputMaybe<Int_Comparison_Exp>;
  remoteStartId?: InputMaybe<Int_Comparison_Exp>;
  startTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  stoppedReason?: InputMaybe<String_Comparison_Exp>;
  tariffId?: InputMaybe<Int_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  timeSpentCharging?: InputMaybe<Bigint_Comparison_Exp>;
  totalCost?: InputMaybe<Numeric_Comparison_Exp>;
  totalKwh?: InputMaybe<Numeric_Comparison_Exp>;
  transactionId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Transactions" */
export type Transactions_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Transactions_pkey'
  /** unique or primary key constraint on columns "transactionId", "stationId" */
  | 'Transactions_stationId_transactionId_key';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Transactions_Delete_At_Path_Input = {
  customData?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Transactions_Delete_Elem_Input = {
  customData?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Transactions_Delete_Key_Input = {
  customData?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "Transactions" */
export type Transactions_Inc_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalCost?: InputMaybe<Scalars['numeric']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "Transactions" */
export type Transactions_Insert_Input = {
  Authorization?: InputMaybe<Authorizations_Obj_Rel_Insert_Input>;
  ChargingNeeds?: InputMaybe<ChargingNeeds_Arr_Rel_Insert_Input>;
  ChargingProfiles?: InputMaybe<ChargingProfiles_Arr_Rel_Insert_Input>;
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  Connector?: InputMaybe<Connectors_Obj_Rel_Insert_Input>;
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  Location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  StartTransaction?: InputMaybe<StartTransactions_Obj_Rel_Insert_Input>;
  StopTransaction?: InputMaybe<StopTransactions_Obj_Rel_Insert_Input>;
  Tariff?: InputMaybe<Tariffs_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  TransactionEvents?: InputMaybe<TransactionEvents_Arr_Rel_Insert_Input>;
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  chargingState?: InputMaybe<Scalars['String']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  endTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  startTime?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  stoppedReason?: InputMaybe<Scalars['String']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalCost?: InputMaybe<Scalars['numeric']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Transactions_Max_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  chargingState?: Maybe<Scalars['String']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  endTime?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  startTime?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  stoppedReason?: Maybe<Scalars['String']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalCost?: Maybe<Scalars['numeric']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Transactions" */
export type Transactions_Max_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingState?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  endTime?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  startTime?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  stoppedReason?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Transactions_Min_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  chargingState?: Maybe<Scalars['String']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  endTime?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  startTime?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  stoppedReason?: Maybe<Scalars['String']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalCost?: Maybe<Scalars['numeric']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Transactions" */
export type Transactions_Min_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  chargingState?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  endTime?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  startTime?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  stoppedReason?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Transactions" */
export type Transactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Transactions>;
};

/** input type for inserting object relation for remote table "Transactions" */
export type Transactions_Obj_Rel_Insert_Input = {
  data: Transactions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** on_conflict condition type for table "Transactions" */
export type Transactions_On_Conflict = {
  constraint: Transactions_Constraint;
  update_columns?: Array<Transactions_Update_Column>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** Ordering options when selecting data from "Transactions". */
export type Transactions_Order_By = {
  Authorization?: InputMaybe<Authorizations_Order_By>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Order_By>;
  ChargingProfiles_aggregate?: InputMaybe<ChargingProfiles_Aggregate_Order_By>;
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  Connector?: InputMaybe<Connectors_Order_By>;
  Evse?: InputMaybe<Evses_Order_By>;
  Location?: InputMaybe<Locations_Order_By>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  StartTransaction?: InputMaybe<StartTransactions_Order_By>;
  StopTransaction?: InputMaybe<StopTransactions_Order_By>;
  Tariff?: InputMaybe<Tariffs_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Order_By>;
  authorizationId?: InputMaybe<Order_By>;
  chargingState?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  customData?: InputMaybe<Order_By>;
  endTime?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  startTime?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  stoppedReason?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Transactions */
export type Transactions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Transactions_Prepend_Input = {
  customData?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "Transactions" */
export type Transactions_Select_Column =
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'chargingState'
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'endTime'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'locationId'
  /** column name */
  | 'remoteStartId'
  /** column name */
  | 'startTime'
  /** column name */
  | 'stationId'
  /** column name */
  | 'stoppedReason'
  /** column name */
  | 'tariffId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timeSpentCharging'
  /** column name */
  | 'totalCost'
  /** column name */
  | 'totalKwh'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

/** select "Transactions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Transactions" */
export type Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isActive';

/** select "Transactions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Transactions" */
export type Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isActive';

/** input type for updating data in table "Transactions" */
export type Transactions_Set_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  chargingState?: InputMaybe<Scalars['String']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  endTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  startTime?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  stoppedReason?: InputMaybe<Scalars['String']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalCost?: InputMaybe<Scalars['numeric']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Transactions_Stddev_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Transactions" */
export type Transactions_Stddev_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Transactions_Stddev_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Transactions" */
export type Transactions_Stddev_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Transactions_Stddev_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Transactions" */
export type Transactions_Stddev_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Transactions" */
export type Transactions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Transactions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Transactions_Stream_Cursor_Value_Input = {
  authorizationId?: InputMaybe<Scalars['Int']['input']>;
  chargingState?: InputMaybe<Scalars['String']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  customData?: InputMaybe<Scalars['jsonb']['input']>;
  endTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  startTime?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  stoppedReason?: InputMaybe<Scalars['String']['input']>;
  tariffId?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalCost?: InputMaybe<Scalars['numeric']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Transactions_Sum_Fields = {
  authorizationId?: Maybe<Scalars['Int']['output']>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  tariffId?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalCost?: Maybe<Scalars['numeric']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "Transactions" */
export type Transactions_Sum_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** update columns of table "Transactions" */
export type Transactions_Update_Column =
  /** column name */
  | 'authorizationId'
  /** column name */
  | 'chargingState'
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'customData'
  /** column name */
  | 'endTime'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'locationId'
  /** column name */
  | 'remoteStartId'
  /** column name */
  | 'startTime'
  /** column name */
  | 'stationId'
  /** column name */
  | 'stoppedReason'
  /** column name */
  | 'tariffId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'timeSpentCharging'
  /** column name */
  | 'totalCost'
  /** column name */
  | 'totalKwh'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

export type Transactions_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Transactions_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Transactions_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Transactions_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Transactions_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Transactions_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Transactions_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Transactions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Transactions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Transactions_Var_Pop_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Transactions" */
export type Transactions_Var_Pop_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Transactions_Var_Samp_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Transactions" */
export type Transactions_Var_Samp_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Transactions_Variance_Fields = {
  authorizationId?: Maybe<Scalars['Float']['output']>;
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  tariffId?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalCost?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Transactions" */
export type Transactions_Variance_Order_By = {
  authorizationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  tariffId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalCost?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableAttributes" */
export type VariableAttributes = {
  /** An object relationship */
  Boot?: Maybe<Boots>;
  /** An object relationship */
  ChargingStation: ChargingStations;
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  EvseType?: Maybe<EvseTypes>;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  bootConfigId?: Maybe<Scalars['String']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  constant?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  dataType?: Maybe<Scalars['String']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  generatedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['Int']['output'];
  mutability?: Maybe<Scalars['String']['output']>;
  persistent?: Maybe<Scalars['Boolean']['output']>;
  stationId: Scalars['String']['output'];
  tenantId: Scalars['Int']['output'];
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableAttributes" */
export type VariableAttributesVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** columns and relationships of "VariableAttributes" */
export type VariableAttributesVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** aggregated selection of "VariableAttributes" */
export type VariableAttributes_Aggregate = {
  aggregate?: Maybe<VariableAttributes_Aggregate_Fields>;
  nodes: Array<VariableAttributes>;
};

export type VariableAttributes_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp_Count>;
};

export type VariableAttributes_Aggregate_Bool_Exp_Bool_And = {
  arguments: VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableAttributes_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableAttributes_Aggregate_Bool_Exp_Bool_Or = {
  arguments: VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableAttributes_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableAttributes_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableAttributes_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableAttributes" */
export type VariableAttributes_Aggregate_Fields = {
  avg?: Maybe<VariableAttributes_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableAttributes_Max_Fields>;
  min?: Maybe<VariableAttributes_Min_Fields>;
  stddev?: Maybe<VariableAttributes_Stddev_Fields>;
  stddev_pop?: Maybe<VariableAttributes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableAttributes_Stddev_Samp_Fields>;
  sum?: Maybe<VariableAttributes_Sum_Fields>;
  var_pop?: Maybe<VariableAttributes_Var_Pop_Fields>;
  var_samp?: Maybe<VariableAttributes_Var_Samp_Fields>;
  variance?: Maybe<VariableAttributes_Variance_Fields>;
};

/** aggregate fields of "VariableAttributes" */
export type VariableAttributes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableAttributes" */
export type VariableAttributes_Aggregate_Order_By = {
  avg?: InputMaybe<VariableAttributes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableAttributes_Max_Order_By>;
  min?: InputMaybe<VariableAttributes_Min_Order_By>;
  stddev?: InputMaybe<VariableAttributes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableAttributes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableAttributes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableAttributes_Sum_Order_By>;
  var_pop?: InputMaybe<VariableAttributes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableAttributes_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableAttributes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableAttributes" */
export type VariableAttributes_Arr_Rel_Insert_Input = {
  data: Array<VariableAttributes_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableAttributes_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableAttributes" */
export type VariableAttributes_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableAttributes". All fields are combined with a logical 'AND'. */
export type VariableAttributes_Bool_Exp = {
  Boot?: InputMaybe<Boots_Bool_Exp>;
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  Component?: InputMaybe<Components_Bool_Exp>;
  EvseType?: InputMaybe<EvseTypes_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  VariableStatuses?: InputMaybe<VariableStatuses_Bool_Exp>;
  VariableStatuses_aggregate?: InputMaybe<VariableStatuses_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<VariableAttributes_Bool_Exp>>;
  _not?: InputMaybe<VariableAttributes_Bool_Exp>;
  _or?: InputMaybe<Array<VariableAttributes_Bool_Exp>>;
  bootConfigId?: InputMaybe<String_Comparison_Exp>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  constant?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dataType?: InputMaybe<String_Comparison_Exp>;
  evseDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  generatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  mutability?: InputMaybe<String_Comparison_Exp>;
  persistent?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableAttributes" */
export type VariableAttributes_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'VariableAttributes_pkey'
  /** unique or primary key constraint on columns "stationId", "componentId", "type", "variableId" */
  | 'VariableAttributes_stationId_type_variableId_componentId_key'
  /** unique or primary key constraint on columns "stationId" */
  | 'variable_attributes_station_id'
  /** unique or primary key constraint on columns "stationId", "componentId" */
  | 'variable_attributes_station_id_component_id'
  /** unique or primary key constraint on columns "stationId", "type" */
  | 'variable_attributes_station_id_type'
  /** unique or primary key constraint on columns "stationId", "componentId", "type" */
  | 'variable_attributes_station_id_type_component_id'
  /** unique or primary key constraint on columns "stationId", "type", "variableId" */
  | 'variable_attributes_station_id_type_variable_id'
  /** unique or primary key constraint on columns "stationId", "variableId" */
  | 'variable_attributes_station_id_variable_id'
  /** unique or primary key constraint on columns "stationId", "componentId", "variableId" */
  | 'variable_attributes_station_id_variable_id_component_id';

/** input type for incrementing numeric columns in table "VariableAttributes" */
export type VariableAttributes_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableAttributes" */
export type VariableAttributes_Insert_Input = {
  Boot?: InputMaybe<Boots_Obj_Rel_Insert_Input>;
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  EvseType?: InputMaybe<EvseTypes_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  VariableStatuses?: InputMaybe<VariableStatuses_Arr_Rel_Insert_Input>;
  bootConfigId?: InputMaybe<Scalars['String']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  constant?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  generatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  mutability?: InputMaybe<Scalars['String']['input']>;
  persistent?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableAttributes_Max_Fields = {
  bootConfigId?: Maybe<Scalars['String']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  generatedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  mutability?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableAttributes" */
export type VariableAttributes_Max_Order_By = {
  bootConfigId?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  generatedAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  mutability?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableAttributes_Min_Fields = {
  bootConfigId?: Maybe<Scalars['String']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  generatedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  mutability?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableAttributes" */
export type VariableAttributes_Min_Order_By = {
  bootConfigId?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  generatedAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  mutability?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableAttributes" */
export type VariableAttributes_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableAttributes>;
};

/** input type for inserting object relation for remote table "VariableAttributes" */
export type VariableAttributes_Obj_Rel_Insert_Input = {
  data: VariableAttributes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** on_conflict condition type for table "VariableAttributes" */
export type VariableAttributes_On_Conflict = {
  constraint: VariableAttributes_Constraint;
  update_columns?: Array<VariableAttributes_Update_Column>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableAttributes". */
export type VariableAttributes_Order_By = {
  Boot?: InputMaybe<Boots_Order_By>;
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  Component?: InputMaybe<Components_Order_By>;
  EvseType?: InputMaybe<EvseTypes_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  VariableStatuses_aggregate?: InputMaybe<VariableStatuses_Aggregate_Order_By>;
  bootConfigId?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  constant?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  generatedAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  mutability?: InputMaybe<Order_By>;
  persistent?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableAttributes */
export type VariableAttributes_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableAttributes" */
export type VariableAttributes_Select_Column =
  /** column name */
  | 'bootConfigId'
  /** column name */
  | 'componentId'
  /** column name */
  | 'constant'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'generatedAt'
  /** column name */
  | 'id'
  /** column name */
  | 'mutability'
  /** column name */
  | 'persistent'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

/** select "VariableAttributes_aggregate_bool_exp_bool_and_arguments_columns" columns of table "VariableAttributes" */
export type VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  | 'constant'
  /** column name */
  | 'persistent';

/** select "VariableAttributes_aggregate_bool_exp_bool_or_arguments_columns" columns of table "VariableAttributes" */
export type VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  | 'constant'
  /** column name */
  | 'persistent';

/** input type for updating data in table "VariableAttributes" */
export type VariableAttributes_Set_Input = {
  bootConfigId?: InputMaybe<Scalars['String']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  constant?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  generatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  mutability?: InputMaybe<Scalars['String']['input']>;
  persistent?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableAttributes_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableAttributes" */
export type VariableAttributes_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableAttributes_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableAttributes" */
export type VariableAttributes_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableAttributes_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableAttributes" */
export type VariableAttributes_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableAttributes" */
export type VariableAttributes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableAttributes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableAttributes_Stream_Cursor_Value_Input = {
  bootConfigId?: InputMaybe<Scalars['String']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  constant?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  generatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  mutability?: InputMaybe<Scalars['String']['input']>;
  persistent?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableAttributes_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableAttributes" */
export type VariableAttributes_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableAttributes" */
export type VariableAttributes_Update_Column =
  /** column name */
  | 'bootConfigId'
  /** column name */
  | 'componentId'
  /** column name */
  | 'constant'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'generatedAt'
  /** column name */
  | 'id'
  /** column name */
  | 'mutability'
  /** column name */
  | 'persistent'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

export type VariableAttributes_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableAttributes_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableAttributes_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableAttributes_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableAttributes_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableAttributes" */
export type VariableAttributes_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableAttributes_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableAttributes" */
export type VariableAttributes_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableAttributes_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableAttributes" */
export type VariableAttributes_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableCharacteristics" */
export type VariableCharacteristics = {
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  createdAt: Scalars['timestamptz']['output'];
  dataType?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  supportsMonitoring?: Maybe<Scalars['Boolean']['output']>;
  tenantId: Scalars['Int']['output'];
  unit?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  valuesList?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate = {
  aggregate?: Maybe<VariableCharacteristics_Aggregate_Fields>;
  nodes: Array<VariableCharacteristics>;
};

export type VariableCharacteristics_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<VariableCharacteristics_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<VariableCharacteristics_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<VariableCharacteristics_Aggregate_Bool_Exp_Count>;
};

export type VariableCharacteristics_Aggregate_Bool_Exp_Bool_And = {
  arguments: VariableCharacteristics_Select_Column_VariableCharacteristics_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableCharacteristics_Aggregate_Bool_Exp_Bool_Or = {
  arguments: VariableCharacteristics_Select_Column_VariableCharacteristics_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableCharacteristics_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate_Fields = {
  avg?: Maybe<VariableCharacteristics_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableCharacteristics_Max_Fields>;
  min?: Maybe<VariableCharacteristics_Min_Fields>;
  stddev?: Maybe<VariableCharacteristics_Stddev_Fields>;
  stddev_pop?: Maybe<VariableCharacteristics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableCharacteristics_Stddev_Samp_Fields>;
  sum?: Maybe<VariableCharacteristics_Sum_Fields>;
  var_pop?: Maybe<VariableCharacteristics_Var_Pop_Fields>;
  var_samp?: Maybe<VariableCharacteristics_Var_Samp_Fields>;
  variance?: Maybe<VariableCharacteristics_Variance_Fields>;
};

/** aggregate fields of "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate_Order_By = {
  avg?: InputMaybe<VariableCharacteristics_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableCharacteristics_Max_Order_By>;
  min?: InputMaybe<VariableCharacteristics_Min_Order_By>;
  stddev?: InputMaybe<VariableCharacteristics_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableCharacteristics_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableCharacteristics_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableCharacteristics_Sum_Order_By>;
  var_pop?: InputMaybe<VariableCharacteristics_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableCharacteristics_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableCharacteristics_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableCharacteristics" */
export type VariableCharacteristics_Arr_Rel_Insert_Input = {
  data: Array<VariableCharacteristics_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableCharacteristics_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableCharacteristics". All fields are combined with a logical 'AND'. */
export type VariableCharacteristics_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  _and?: InputMaybe<Array<VariableCharacteristics_Bool_Exp>>;
  _not?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  _or?: InputMaybe<Array<VariableCharacteristics_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dataType?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  maxLimit?: InputMaybe<Numeric_Comparison_Exp>;
  minLimit?: InputMaybe<Numeric_Comparison_Exp>;
  supportsMonitoring?: InputMaybe<Boolean_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  unit?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  valuesList?: InputMaybe<String_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableCharacteristics" */
export type VariableCharacteristics_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'VariableCharacteristics_pkey'
  /** unique or primary key constraint on columns "variableId" */
  | 'VariableCharacteristics_variableId_key';

/** input type for incrementing numeric columns in table "VariableCharacteristics" */
export type VariableCharacteristics_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableCharacteristics" */
export type VariableCharacteristics_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  supportsMonitoring?: InputMaybe<Scalars['Boolean']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  valuesList?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableCharacteristics_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  valuesList?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  valuesList?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableCharacteristics_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  valuesList?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  valuesList?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableCharacteristics" */
export type VariableCharacteristics_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableCharacteristics>;
};

/** input type for inserting object relation for remote table "VariableCharacteristics" */
export type VariableCharacteristics_Obj_Rel_Insert_Input = {
  data: VariableCharacteristics_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** on_conflict condition type for table "VariableCharacteristics" */
export type VariableCharacteristics_On_Conflict = {
  constraint: VariableCharacteristics_Constraint;
  update_columns?: Array<VariableCharacteristics_Update_Column>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableCharacteristics". */
export type VariableCharacteristics_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  supportsMonitoring?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  valuesList?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableCharacteristics */
export type VariableCharacteristics_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'id'
  /** column name */
  | 'maxLimit'
  /** column name */
  | 'minLimit'
  /** column name */
  | 'supportsMonitoring'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'unit'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'valuesList'
  /** column name */
  | 'variableId';

/** select "VariableCharacteristics_aggregate_bool_exp_bool_and_arguments_columns" columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Select_Column_VariableCharacteristics_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'supportsMonitoring';

/** select "VariableCharacteristics_aggregate_bool_exp_bool_or_arguments_columns" columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Select_Column_VariableCharacteristics_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'supportsMonitoring';

/** input type for updating data in table "VariableCharacteristics" */
export type VariableCharacteristics_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  supportsMonitoring?: InputMaybe<Scalars['Boolean']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  valuesList?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableCharacteristics_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableCharacteristics_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableCharacteristics_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableCharacteristics" */
export type VariableCharacteristics_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableCharacteristics_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableCharacteristics_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  supportsMonitoring?: InputMaybe<Scalars['Boolean']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  valuesList?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableCharacteristics_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'id'
  /** column name */
  | 'maxLimit'
  /** column name */
  | 'minLimit'
  /** column name */
  | 'supportsMonitoring'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'unit'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'valuesList'
  /** column name */
  | 'variableId';

export type VariableCharacteristics_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableCharacteristics_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableCharacteristics_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableCharacteristics_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableCharacteristics_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableCharacteristics_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableCharacteristics_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses = {
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  VariableMonitoring?: Maybe<VariableMonitorings>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  status?: Maybe<Scalars['String']['output']>;
  statusInfo?: Maybe<Scalars['json']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableMonitoringStatuses" */
export type VariableMonitoringStatusesStatusInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate = {
  aggregate?: Maybe<VariableMonitoringStatuses_Aggregate_Fields>;
  nodes: Array<VariableMonitoringStatuses>;
};

export type VariableMonitoringStatuses_Aggregate_Bool_Exp = {
  count?: InputMaybe<VariableMonitoringStatuses_Aggregate_Bool_Exp_Count>;
};

export type VariableMonitoringStatuses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate_Fields = {
  avg?: Maybe<VariableMonitoringStatuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableMonitoringStatuses_Max_Fields>;
  min?: Maybe<VariableMonitoringStatuses_Min_Fields>;
  stddev?: Maybe<VariableMonitoringStatuses_Stddev_Fields>;
  stddev_pop?: Maybe<VariableMonitoringStatuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableMonitoringStatuses_Stddev_Samp_Fields>;
  sum?: Maybe<VariableMonitoringStatuses_Sum_Fields>;
  var_pop?: Maybe<VariableMonitoringStatuses_Var_Pop_Fields>;
  var_samp?: Maybe<VariableMonitoringStatuses_Var_Samp_Fields>;
  variance?: Maybe<VariableMonitoringStatuses_Variance_Fields>;
};

/** aggregate fields of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate_Order_By = {
  avg?: InputMaybe<VariableMonitoringStatuses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableMonitoringStatuses_Max_Order_By>;
  min?: InputMaybe<VariableMonitoringStatuses_Min_Order_By>;
  stddev?: InputMaybe<VariableMonitoringStatuses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableMonitoringStatuses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableMonitoringStatuses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableMonitoringStatuses_Sum_Order_By>;
  var_pop?: InputMaybe<VariableMonitoringStatuses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableMonitoringStatuses_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableMonitoringStatuses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Arr_Rel_Insert_Input = {
  data: Array<VariableMonitoringStatuses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableMonitoringStatuses_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableMonitoringStatuses_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableMonitoringStatuses". All fields are combined with a logical 'AND'. */
export type VariableMonitoringStatuses_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  VariableMonitoring?: InputMaybe<VariableMonitorings_Bool_Exp>;
  _and?: InputMaybe<Array<VariableMonitoringStatuses_Bool_Exp>>;
  _not?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<VariableMonitoringStatuses_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  statusInfo?: InputMaybe<Json_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variableMonitoringId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Constraint =
  /** unique or primary key constraint on columns "id" */
  'VariableMonitoringStatuses_pkey';

/** input type for incrementing numeric columns in table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  VariableMonitoring?: InputMaybe<VariableMonitorings_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableMonitoringStatuses_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableMonitoringStatuses_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableMonitoringStatuses>;
};

/** on_conflict condition type for table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_On_Conflict = {
  constraint: VariableMonitoringStatuses_Constraint;
  update_columns?: Array<VariableMonitoringStatuses_Update_Column>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableMonitoringStatuses". */
export type VariableMonitoringStatuses_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  VariableMonitoring?: InputMaybe<VariableMonitorings_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  statusInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableMonitoringStatuses */
export type VariableMonitoringStatuses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableMonitoringId';

/** input type for updating data in table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableMonitoringStatuses_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableMonitoringStatuses_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableMonitoringStatuses_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableMonitoringStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableMonitoringStatuses_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableMonitoringStatuses_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableMonitoringId';

export type VariableMonitoringStatuses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableMonitoringStatuses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableMonitoringStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableMonitoringStatuses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableMonitoringStatuses_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableMonitoringStatuses_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableMonitoringStatuses_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableMonitorings" */
export type VariableMonitorings = {
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  transaction?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableMonitorings" */
export type VariableMonitoringsVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** columns and relationships of "VariableMonitorings" */
export type VariableMonitoringsVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** aggregated selection of "VariableMonitorings" */
export type VariableMonitorings_Aggregate = {
  aggregate?: Maybe<VariableMonitorings_Aggregate_Fields>;
  nodes: Array<VariableMonitorings>;
};

export type VariableMonitorings_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp_Count>;
};

export type VariableMonitorings_Aggregate_Bool_Exp_Bool_And = {
  arguments: VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitorings_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableMonitorings_Aggregate_Bool_Exp_Bool_Or = {
  arguments: VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitorings_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableMonitorings_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitorings_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableMonitorings" */
export type VariableMonitorings_Aggregate_Fields = {
  avg?: Maybe<VariableMonitorings_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableMonitorings_Max_Fields>;
  min?: Maybe<VariableMonitorings_Min_Fields>;
  stddev?: Maybe<VariableMonitorings_Stddev_Fields>;
  stddev_pop?: Maybe<VariableMonitorings_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableMonitorings_Stddev_Samp_Fields>;
  sum?: Maybe<VariableMonitorings_Sum_Fields>;
  var_pop?: Maybe<VariableMonitorings_Var_Pop_Fields>;
  var_samp?: Maybe<VariableMonitorings_Var_Samp_Fields>;
  variance?: Maybe<VariableMonitorings_Variance_Fields>;
};

/** aggregate fields of "VariableMonitorings" */
export type VariableMonitorings_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableMonitorings" */
export type VariableMonitorings_Aggregate_Order_By = {
  avg?: InputMaybe<VariableMonitorings_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableMonitorings_Max_Order_By>;
  min?: InputMaybe<VariableMonitorings_Min_Order_By>;
  stddev?: InputMaybe<VariableMonitorings_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableMonitorings_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableMonitorings_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableMonitorings_Sum_Order_By>;
  var_pop?: InputMaybe<VariableMonitorings_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableMonitorings_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableMonitorings_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableMonitorings" */
export type VariableMonitorings_Arr_Rel_Insert_Input = {
  data: Array<VariableMonitorings_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableMonitorings_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableMonitorings". All fields are combined with a logical 'AND'. */
export type VariableMonitorings_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  VariableMonitoringStatuses?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  VariableMonitoringStatuses_aggregate?: InputMaybe<VariableMonitoringStatuses_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<VariableMonitorings_Bool_Exp>>;
  _not?: InputMaybe<VariableMonitorings_Bool_Exp>;
  _or?: InputMaybe<Array<VariableMonitorings_Bool_Exp>>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  severity?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  transaction?: InputMaybe<Boolean_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<Int_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableMonitorings" */
export type VariableMonitorings_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  | 'VariableMonitorings_pkey'
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'VariableMonitorings_stationId_id_key';

/** input type for incrementing numeric columns in table "VariableMonitorings" */
export type VariableMonitorings_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableMonitorings" */
export type VariableMonitorings_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  VariableMonitoringStatuses?: InputMaybe<VariableMonitoringStatuses_Arr_Rel_Insert_Input>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transaction?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableMonitorings_Max_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Max_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableMonitorings_Min_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Min_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableMonitorings" */
export type VariableMonitorings_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableMonitorings>;
};

/** input type for inserting object relation for remote table "VariableMonitorings" */
export type VariableMonitorings_Obj_Rel_Insert_Input = {
  data: VariableMonitorings_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** on_conflict condition type for table "VariableMonitorings" */
export type VariableMonitorings_On_Conflict = {
  constraint: VariableMonitorings_Constraint;
  update_columns?: Array<VariableMonitorings_Update_Column>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableMonitorings". */
export type VariableMonitorings_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  VariableMonitoringStatuses_aggregate?: InputMaybe<VariableMonitoringStatuses_Aggregate_Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  transaction?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableMonitorings */
export type VariableMonitorings_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "VariableMonitorings" */
export type VariableMonitorings_Select_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'severity'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transaction'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

/** select "VariableMonitorings_aggregate_bool_exp_bool_and_arguments_columns" columns of table "VariableMonitorings" */
export type VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'transaction';

/** select "VariableMonitorings_aggregate_bool_exp_bool_or_arguments_columns" columns of table "VariableMonitorings" */
export type VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'transaction';

/** input type for updating data in table "VariableMonitorings" */
export type VariableMonitorings_Set_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transaction?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableMonitorings_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableMonitorings_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableMonitorings_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableMonitorings" */
export type VariableMonitorings_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableMonitorings_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableMonitorings_Stream_Cursor_Value_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  transaction?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableMonitorings_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableMonitorings" */
export type VariableMonitorings_Update_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'severity'
  /** column name */
  | 'stationId'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'transaction'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

export type VariableMonitorings_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableMonitorings_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableMonitorings_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableMonitorings_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableMonitorings_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableMonitorings_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableMonitorings_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableStatuses" */
export type VariableStatuses = {
  /** An object relationship */
  Tenant: Tenants;
  /** An object relationship */
  VariableAttribute?: Maybe<VariableAttributes>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  status?: Maybe<Scalars['String']['output']>;
  statusInfo?: Maybe<Scalars['json']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['String']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableStatuses" */
export type VariableStatusesStatusInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "VariableStatuses" */
export type VariableStatuses_Aggregate = {
  aggregate?: Maybe<VariableStatuses_Aggregate_Fields>;
  nodes: Array<VariableStatuses>;
};

export type VariableStatuses_Aggregate_Bool_Exp = {
  count?: InputMaybe<VariableStatuses_Aggregate_Bool_Exp_Count>;
};

export type VariableStatuses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableStatuses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableStatuses" */
export type VariableStatuses_Aggregate_Fields = {
  avg?: Maybe<VariableStatuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableStatuses_Max_Fields>;
  min?: Maybe<VariableStatuses_Min_Fields>;
  stddev?: Maybe<VariableStatuses_Stddev_Fields>;
  stddev_pop?: Maybe<VariableStatuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableStatuses_Stddev_Samp_Fields>;
  sum?: Maybe<VariableStatuses_Sum_Fields>;
  var_pop?: Maybe<VariableStatuses_Var_Pop_Fields>;
  var_samp?: Maybe<VariableStatuses_Var_Samp_Fields>;
  variance?: Maybe<VariableStatuses_Variance_Fields>;
};

/** aggregate fields of "VariableStatuses" */
export type VariableStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableStatuses" */
export type VariableStatuses_Aggregate_Order_By = {
  avg?: InputMaybe<VariableStatuses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableStatuses_Max_Order_By>;
  min?: InputMaybe<VariableStatuses_Min_Order_By>;
  stddev?: InputMaybe<VariableStatuses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableStatuses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableStatuses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableStatuses_Sum_Order_By>;
  var_pop?: InputMaybe<VariableStatuses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableStatuses_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableStatuses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableStatuses" */
export type VariableStatuses_Arr_Rel_Insert_Input = {
  data: Array<VariableStatuses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableStatuses_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableStatuses_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableStatuses" */
export type VariableStatuses_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableStatuses". All fields are combined with a logical 'AND'. */
export type VariableStatuses_Bool_Exp = {
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  VariableAttribute?: InputMaybe<VariableAttributes_Bool_Exp>;
  _and?: InputMaybe<Array<VariableStatuses_Bool_Exp>>;
  _not?: InputMaybe<VariableStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<VariableStatuses_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  statusInfo?: InputMaybe<Json_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
  variableAttributeId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableStatuses" */
export type VariableStatuses_Constraint =
  /** unique or primary key constraint on columns "id" */
  'VariableStatuses_pkey';

/** input type for incrementing numeric columns in table "VariableStatuses" */
export type VariableStatuses_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableStatuses" */
export type VariableStatuses_Insert_Input = {
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  VariableAttribute?: InputMaybe<VariableAttributes_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableStatuses_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableStatuses" */
export type VariableStatuses_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableStatuses_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableStatuses" */
export type VariableStatuses_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableStatuses" */
export type VariableStatuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableStatuses>;
};

/** on_conflict condition type for table "VariableStatuses" */
export type VariableStatuses_On_Conflict = {
  constraint: VariableStatuses_Constraint;
  update_columns?: Array<VariableStatuses_Update_Column>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableStatuses". */
export type VariableStatuses_Order_By = {
  Tenant?: InputMaybe<Tenants_Order_By>;
  VariableAttribute?: InputMaybe<VariableAttributes_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  statusInfo?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableStatuses */
export type VariableStatuses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableStatuses" */
export type VariableStatuses_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableAttributeId';

/** input type for updating data in table "VariableStatuses" */
export type VariableStatuses_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableStatuses_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableStatuses" */
export type VariableStatuses_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableStatuses_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableStatuses" */
export type VariableStatuses_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableStatuses_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableStatuses" */
export type VariableStatuses_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableStatuses" */
export type VariableStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableStatuses_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableStatuses_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableStatuses" */
export type VariableStatuses_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableStatuses" */
export type VariableStatuses_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableAttributeId';

export type VariableStatuses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableStatuses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableStatuses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableStatuses_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableStatuses" */
export type VariableStatuses_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableStatuses_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableStatuses" */
export type VariableStatuses_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableStatuses_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableStatuses" */
export type VariableStatuses_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Variables" */
export type Variables = {
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** An object relationship */
  Tenant: Tenants;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** An object relationship */
  VariableCharacteristic?: Maybe<VariableCharacteristics>;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Variables" */
export type VariablesComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** aggregated selection of "Variables" */
export type Variables_Aggregate = {
  aggregate?: Maybe<Variables_Aggregate_Fields>;
  nodes: Array<Variables>;
};

export type Variables_Aggregate_Bool_Exp = {
  count?: InputMaybe<Variables_Aggregate_Bool_Exp_Count>;
};

export type Variables_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Variables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Variables_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Variables" */
export type Variables_Aggregate_Fields = {
  avg?: Maybe<Variables_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Variables_Max_Fields>;
  min?: Maybe<Variables_Min_Fields>;
  stddev?: Maybe<Variables_Stddev_Fields>;
  stddev_pop?: Maybe<Variables_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Variables_Stddev_Samp_Fields>;
  sum?: Maybe<Variables_Sum_Fields>;
  var_pop?: Maybe<Variables_Var_Pop_Fields>;
  var_samp?: Maybe<Variables_Var_Samp_Fields>;
  variance?: Maybe<Variables_Variance_Fields>;
};

/** aggregate fields of "Variables" */
export type Variables_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Variables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Variables" */
export type Variables_Aggregate_Order_By = {
  avg?: InputMaybe<Variables_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Variables_Max_Order_By>;
  min?: InputMaybe<Variables_Min_Order_By>;
  stddev?: InputMaybe<Variables_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Variables_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Variables_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Variables_Sum_Order_By>;
  var_pop?: InputMaybe<Variables_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Variables_Var_Samp_Order_By>;
  variance?: InputMaybe<Variables_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Variables" */
export type Variables_Arr_Rel_Insert_Input = {
  data: Array<Variables_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** aggregate avg on columns */
export type Variables_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Variables" */
export type Variables_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Variables". All fields are combined with a logical 'AND'. */
export type Variables_Bool_Exp = {
  ComponentVariables?: InputMaybe<ComponentVariables_Bool_Exp>;
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp>;
  EventData?: InputMaybe<EventData_Bool_Exp>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Bool_Exp>;
  Tenant?: InputMaybe<Tenants_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  VariableCharacteristic?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Bool_Exp>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Variables_Bool_Exp>>;
  _not?: InputMaybe<Variables_Bool_Exp>;
  _or?: InputMaybe<Array<Variables_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  instance?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  tenantId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Variables" */
export type Variables_Constraint =
  /** unique or primary key constraint on columns "instance", "name" */
  | 'Variables_name_instance_key'
  /** unique or primary key constraint on columns "id" */
  | 'Variables_pkey'
  /** unique or primary key constraint on columns "name" */
  | 'variables_name';

/** input type for incrementing numeric columns in table "Variables" */
export type Variables_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Variables" */
export type Variables_Insert_Input = {
  ComponentVariables?: InputMaybe<ComponentVariables_Arr_Rel_Insert_Input>;
  EventData?: InputMaybe<EventData_Arr_Rel_Insert_Input>;
  Tenant?: InputMaybe<Tenants_Obj_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  VariableCharacteristic?: InputMaybe<VariableCharacteristics_Obj_Rel_Insert_Input>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Variables_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Variables" */
export type Variables_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Variables_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Variables" */
export type Variables_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Variables" */
export type Variables_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Variables>;
};

/** input type for inserting object relation for remote table "Variables" */
export type Variables_Obj_Rel_Insert_Input = {
  data: Variables_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** on_conflict condition type for table "Variables" */
export type Variables_On_Conflict = {
  constraint: Variables_Constraint;
  update_columns?: Array<Variables_Update_Column>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

/** Ordering options when selecting data from "Variables". */
export type Variables_Order_By = {
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Order_By>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Order_By>;
  Tenant?: InputMaybe<Tenants_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  VariableCharacteristic?: InputMaybe<VariableCharacteristics_Order_By>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Variables */
export type Variables_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Variables" */
export type Variables_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Variables" */
export type Variables_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Variables_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Variables" */
export type Variables_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Variables_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Variables" */
export type Variables_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Variables_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Variables" */
export type Variables_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Variables" */
export type Variables_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Variables_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Variables_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Variables_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  tenantId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Variables" */
export type Variables_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** update columns of table "Variables" */
export type Variables_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'tenantId'
  /** column name */
  | 'updatedAt';

export type Variables_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Variables_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Variables_Set_Input>;
  /** filter the rows which have to be updated */
  where: Variables_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Variables_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Variables" */
export type Variables_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Variables_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Variables" */
export type Variables_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Variables_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  tenantId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Variables" */
export type Variables_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  tenantId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

/** Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'. */
export type Bpchar_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bpchar']['input']>;
  _gt?: InputMaybe<Scalars['bpchar']['input']>;
  _gte?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['bpchar']['input']>;
  _in?: InputMaybe<Array<Scalars['bpchar']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['bpchar']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['bpchar']['input']>;
  _lt?: InputMaybe<Scalars['bpchar']['input']>;
  _lte?: InputMaybe<Scalars['bpchar']['input']>;
  _neq?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['bpchar']['input']>;
  _nin?: InputMaybe<Array<Scalars['bpchar']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['bpchar']['input']>;
};

/** ordering argument of a cursor */
export type Cursor_Ordering =
  /** ascending ordering of the cursor */
  | 'ASC'
  /** descending ordering of the cursor */
  | 'DESC';

/** Boolean expression to compare columns of type "enum_Connectors_errorCode". All fields are combined with logical 'AND'. */
export type Enum_Connectors_ErrorCode_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  _gt?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  _gte?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_Connectors_errorCode']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  _lte?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  _neq?: InputMaybe<Scalars['enum_Connectors_errorCode']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_Connectors_errorCode']['input']>>;
};

/** Boolean expression to compare columns of type "enum_Connectors_status". All fields are combined with logical 'AND'. */
export type Enum_Connectors_Status_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  _gt?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  _gte?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_Connectors_status']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  _lte?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  _neq?: InputMaybe<Scalars['enum_Connectors_status']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_Connectors_status']['input']>>;
};

/** Boolean expression to compare columns of type "enum_InstalledCertificates_certificateType". All fields are combined with logical 'AND'. */
export type Enum_InstalledCertificates_CertificateType_Comparison_Exp = {
  _eq?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  _gt?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  _gte?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  _in?: InputMaybe<
    Array<Scalars['enum_InstalledCertificates_certificateType']['input']>
  >;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  _lte?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  _neq?: InputMaybe<
    Scalars['enum_InstalledCertificates_certificateType']['input']
  >;
  _nin?: InputMaybe<
    Array<Scalars['enum_InstalledCertificates_certificateType']['input']>
  >;
};

export type Geography_Cast_Exp = {
  geometry?: InputMaybe<Geometry_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
export type Geography_Comparison_Exp = {
  _cast?: InputMaybe<Geography_Cast_Exp>;
  _eq?: InputMaybe<Scalars['geography']['input']>;
  _gt?: InputMaybe<Scalars['geography']['input']>;
  _gte?: InputMaybe<Scalars['geography']['input']>;
  _in?: InputMaybe<Array<Scalars['geography']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['geography']['input']>;
  _lte?: InputMaybe<Scalars['geography']['input']>;
  _neq?: InputMaybe<Scalars['geography']['input']>;
  _nin?: InputMaybe<Array<Scalars['geography']['input']>>;
  /** is the column within a given distance from the given geography value */
  _st_d_within?: InputMaybe<St_D_Within_Geography_Input>;
  /** does the column spatially intersect the given geography value */
  _st_intersects?: InputMaybe<Scalars['geography']['input']>;
};

export type Geometry_Cast_Exp = {
  geography?: InputMaybe<Geography_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
export type Geometry_Comparison_Exp = {
  _cast?: InputMaybe<Geometry_Cast_Exp>;
  _eq?: InputMaybe<Scalars['geometry']['input']>;
  _gt?: InputMaybe<Scalars['geometry']['input']>;
  _gte?: InputMaybe<Scalars['geometry']['input']>;
  _in?: InputMaybe<Array<Scalars['geometry']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['geometry']['input']>;
  _lte?: InputMaybe<Scalars['geometry']['input']>;
  _neq?: InputMaybe<Scalars['geometry']['input']>;
  _nin?: InputMaybe<Array<Scalars['geometry']['input']>>;
  /** is the column within a given 3D distance from the given geometry value */
  _st_3d_d_within?: InputMaybe<St_D_Within_Input>;
  /** does the column spatially intersect the given geometry value in 3D */
  _st_3d_intersects?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column contain the given geometry value */
  _st_contains?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column cross the given geometry value */
  _st_crosses?: InputMaybe<Scalars['geometry']['input']>;
  /** is the column within a given distance from the given geometry value */
  _st_d_within?: InputMaybe<St_D_Within_Input>;
  /** is the column equal to given geometry value (directionality is ignored) */
  _st_equals?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column spatially intersect the given geometry value */
  _st_intersects?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
  _st_overlaps?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column have atleast one point in common with the given geometry value */
  _st_touches?: InputMaybe<Scalars['geometry']['input']>;
  /** is the column contained in the given geometry value */
  _st_within?: InputMaybe<Scalars['geometry']['input']>;
};

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['json']['input']>;
  _gt?: InputMaybe<Scalars['json']['input']>;
  _gte?: InputMaybe<Scalars['json']['input']>;
  _in?: InputMaybe<Array<Scalars['json']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['json']['input']>;
  _lte?: InputMaybe<Scalars['json']['input']>;
  _neq?: InputMaybe<Scalars['json']['input']>;
  _nin?: InputMaybe<Array<Scalars['json']['input']>>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** mutation root */
export type Mutation_Root = {
  /** delete data from the table: "AsyncJobStatuses" */
  delete_AsyncJobStatuses?: Maybe<AsyncJobStatuses_Mutation_Response>;
  /** delete single row from the table: "AsyncJobStatuses" */
  delete_AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** delete data from the table: "Authorizations" */
  delete_Authorizations?: Maybe<Authorizations_Mutation_Response>;
  /** delete single row from the table: "Authorizations" */
  delete_Authorizations_by_pk?: Maybe<Authorizations>;
  /** delete data from the table: "Boots" */
  delete_Boots?: Maybe<Boots_Mutation_Response>;
  /** delete single row from the table: "Boots" */
  delete_Boots_by_pk?: Maybe<Boots>;
  /** delete data from the table: "Certificates" */
  delete_Certificates?: Maybe<Certificates_Mutation_Response>;
  /** delete single row from the table: "Certificates" */
  delete_Certificates_by_pk?: Maybe<Certificates>;
  /** delete data from the table: "ChangeConfigurations" */
  delete_ChangeConfigurations?: Maybe<ChangeConfigurations_Mutation_Response>;
  /** delete single row from the table: "ChangeConfigurations" */
  delete_ChangeConfigurations_by_pk?: Maybe<ChangeConfigurations>;
  /** delete data from the table: "ChargingNeeds" */
  delete_ChargingNeeds?: Maybe<ChargingNeeds_Mutation_Response>;
  /** delete single row from the table: "ChargingNeeds" */
  delete_ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** delete data from the table: "ChargingProfiles" */
  delete_ChargingProfiles?: Maybe<ChargingProfiles_Mutation_Response>;
  /** delete single row from the table: "ChargingProfiles" */
  delete_ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** delete data from the table: "ChargingSchedules" */
  delete_ChargingSchedules?: Maybe<ChargingSchedules_Mutation_Response>;
  /** delete single row from the table: "ChargingSchedules" */
  delete_ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** delete data from the table: "ChargingStationNetworkProfiles" */
  delete_ChargingStationNetworkProfiles?: Maybe<ChargingStationNetworkProfiles_Mutation_Response>;
  /** delete single row from the table: "ChargingStationNetworkProfiles" */
  delete_ChargingStationNetworkProfiles_by_pk?: Maybe<ChargingStationNetworkProfiles>;
  /** delete data from the table: "ChargingStationSecurityInfos" */
  delete_ChargingStationSecurityInfos?: Maybe<ChargingStationSecurityInfos_Mutation_Response>;
  /** delete single row from the table: "ChargingStationSecurityInfos" */
  delete_ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** delete data from the table: "ChargingStationSequences" */
  delete_ChargingStationSequences?: Maybe<ChargingStationSequences_Mutation_Response>;
  /** delete single row from the table: "ChargingStationSequences" */
  delete_ChargingStationSequences_by_pk?: Maybe<ChargingStationSequences>;
  /** delete data from the table: "ChargingStations" */
  delete_ChargingStations?: Maybe<ChargingStations_Mutation_Response>;
  /** delete single row from the table: "ChargingStations" */
  delete_ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** delete data from the table: "ComponentVariables" */
  delete_ComponentVariables?: Maybe<ComponentVariables_Mutation_Response>;
  /** delete single row from the table: "ComponentVariables" */
  delete_ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** delete data from the table: "Components" */
  delete_Components?: Maybe<Components_Mutation_Response>;
  /** delete single row from the table: "Components" */
  delete_Components_by_pk?: Maybe<Components>;
  /** delete data from the table: "CompositeSchedules" */
  delete_CompositeSchedules?: Maybe<CompositeSchedules_Mutation_Response>;
  /** delete single row from the table: "CompositeSchedules" */
  delete_CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** delete data from the table: "Connectors" */
  delete_Connectors?: Maybe<Connectors_Mutation_Response>;
  /** delete single row from the table: "Connectors" */
  delete_Connectors_by_pk?: Maybe<Connectors>;
  /** delete data from the table: "EventData" */
  delete_EventData?: Maybe<EventData_Mutation_Response>;
  /** delete single row from the table: "EventData" */
  delete_EventData_by_pk?: Maybe<EventData>;
  /** delete data from the table: "EvseTypes" */
  delete_EvseTypes?: Maybe<EvseTypes_Mutation_Response>;
  /** delete single row from the table: "EvseTypes" */
  delete_EvseTypes_by_pk?: Maybe<EvseTypes>;
  /** delete data from the table: "Evses" */
  delete_Evses?: Maybe<Evses_Mutation_Response>;
  /** delete single row from the table: "Evses" */
  delete_Evses_by_pk?: Maybe<Evses>;
  /** delete data from the table: "InstalledCertificates" */
  delete_InstalledCertificates?: Maybe<InstalledCertificates_Mutation_Response>;
  /** delete single row from the table: "InstalledCertificates" */
  delete_InstalledCertificates_by_pk?: Maybe<InstalledCertificates>;
  /** delete data from the table: "LatestStatusNotifications" */
  delete_LatestStatusNotifications?: Maybe<LatestStatusNotifications_Mutation_Response>;
  /** delete single row from the table: "LatestStatusNotifications" */
  delete_LatestStatusNotifications_by_pk?: Maybe<LatestStatusNotifications>;
  /** delete data from the table: "LocalListAuthorizations" */
  delete_LocalListAuthorizations?: Maybe<LocalListAuthorizations_Mutation_Response>;
  /** delete single row from the table: "LocalListAuthorizations" */
  delete_LocalListAuthorizations_by_pk?: Maybe<LocalListAuthorizations>;
  /** delete data from the table: "LocalListVersionAuthorizations" */
  delete_LocalListVersionAuthorizations?: Maybe<LocalListVersionAuthorizations_Mutation_Response>;
  /** delete single row from the table: "LocalListVersionAuthorizations" */
  delete_LocalListVersionAuthorizations_by_pk?: Maybe<LocalListVersionAuthorizations>;
  /** delete data from the table: "LocalListVersions" */
  delete_LocalListVersions?: Maybe<LocalListVersions_Mutation_Response>;
  /** delete single row from the table: "LocalListVersions" */
  delete_LocalListVersions_by_pk?: Maybe<LocalListVersions>;
  /** delete data from the table: "Locations" */
  delete_Locations?: Maybe<Locations_Mutation_Response>;
  /** delete single row from the table: "Locations" */
  delete_Locations_by_pk?: Maybe<Locations>;
  /** delete data from the table: "MessageInfos" */
  delete_MessageInfos?: Maybe<MessageInfos_Mutation_Response>;
  /** delete single row from the table: "MessageInfos" */
  delete_MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** delete data from the table: "MeterValues" */
  delete_MeterValues?: Maybe<MeterValues_Mutation_Response>;
  /** delete single row from the table: "MeterValues" */
  delete_MeterValues_by_pk?: Maybe<MeterValues>;
  /** delete data from the table: "OCPPMessages" */
  delete_OCPPMessages?: Maybe<OcppMessages_Mutation_Response>;
  /** delete single row from the table: "OCPPMessages" */
  delete_OCPPMessages_by_pk?: Maybe<OcppMessages>;
  /** delete data from the table: "Reservations" */
  delete_Reservations?: Maybe<Reservations_Mutation_Response>;
  /** delete single row from the table: "Reservations" */
  delete_Reservations_by_pk?: Maybe<Reservations>;
  /** delete data from the table: "SalesTariffs" */
  delete_SalesTariffs?: Maybe<SalesTariffs_Mutation_Response>;
  /** delete single row from the table: "SalesTariffs" */
  delete_SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** delete data from the table: "SecurityEvents" */
  delete_SecurityEvents?: Maybe<SecurityEvents_Mutation_Response>;
  /** delete single row from the table: "SecurityEvents" */
  delete_SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** delete data from the table: "SendLocalListAuthorizations" */
  delete_SendLocalListAuthorizations?: Maybe<SendLocalListAuthorizations_Mutation_Response>;
  /** delete single row from the table: "SendLocalListAuthorizations" */
  delete_SendLocalListAuthorizations_by_pk?: Maybe<SendLocalListAuthorizations>;
  /** delete data from the table: "SendLocalLists" */
  delete_SendLocalLists?: Maybe<SendLocalLists_Mutation_Response>;
  /** delete single row from the table: "SendLocalLists" */
  delete_SendLocalLists_by_pk?: Maybe<SendLocalLists>;
  /** delete data from the table: "ServerNetworkProfiles" */
  delete_ServerNetworkProfiles?: Maybe<ServerNetworkProfiles_Mutation_Response>;
  /** delete single row from the table: "ServerNetworkProfiles" */
  delete_ServerNetworkProfiles_by_pk?: Maybe<ServerNetworkProfiles>;
  /** delete data from the table: "SetNetworkProfiles" */
  delete_SetNetworkProfiles?: Maybe<SetNetworkProfiles_Mutation_Response>;
  /** delete single row from the table: "SetNetworkProfiles" */
  delete_SetNetworkProfiles_by_pk?: Maybe<SetNetworkProfiles>;
  /** delete data from the table: "StartTransactions" */
  delete_StartTransactions?: Maybe<StartTransactions_Mutation_Response>;
  /** delete single row from the table: "StartTransactions" */
  delete_StartTransactions_by_pk?: Maybe<StartTransactions>;
  /** delete data from the table: "StatusNotifications" */
  delete_StatusNotifications?: Maybe<StatusNotifications_Mutation_Response>;
  /** delete single row from the table: "StatusNotifications" */
  delete_StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** delete data from the table: "StopTransactions" */
  delete_StopTransactions?: Maybe<StopTransactions_Mutation_Response>;
  /** delete single row from the table: "StopTransactions" */
  delete_StopTransactions_by_pk?: Maybe<StopTransactions>;
  /** delete data from the table: "Subscriptions" */
  delete_Subscriptions?: Maybe<Subscriptions_Mutation_Response>;
  /** delete single row from the table: "Subscriptions" */
  delete_Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** delete data from the table: "Tariffs" */
  delete_Tariffs?: Maybe<Tariffs_Mutation_Response>;
  /** delete single row from the table: "Tariffs" */
  delete_Tariffs_by_pk?: Maybe<Tariffs>;
  /** delete data from the table: "TenantPartners" */
  delete_TenantPartners?: Maybe<TenantPartners_Mutation_Response>;
  /** delete single row from the table: "TenantPartners" */
  delete_TenantPartners_by_pk?: Maybe<TenantPartners>;
  /** delete data from the table: "Tenants" */
  delete_Tenants?: Maybe<Tenants_Mutation_Response>;
  /** delete single row from the table: "Tenants" */
  delete_Tenants_by_pk?: Maybe<Tenants>;
  /** delete data from the table: "TransactionEvents" */
  delete_TransactionEvents?: Maybe<TransactionEvents_Mutation_Response>;
  /** delete single row from the table: "TransactionEvents" */
  delete_TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** delete data from the table: "Transactions" */
  delete_Transactions?: Maybe<Transactions_Mutation_Response>;
  /** delete single row from the table: "Transactions" */
  delete_Transactions_by_pk?: Maybe<Transactions>;
  /** delete data from the table: "VariableAttributes" */
  delete_VariableAttributes?: Maybe<VariableAttributes_Mutation_Response>;
  /** delete single row from the table: "VariableAttributes" */
  delete_VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** delete data from the table: "VariableCharacteristics" */
  delete_VariableCharacteristics?: Maybe<VariableCharacteristics_Mutation_Response>;
  /** delete single row from the table: "VariableCharacteristics" */
  delete_VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** delete data from the table: "VariableMonitoringStatuses" */
  delete_VariableMonitoringStatuses?: Maybe<VariableMonitoringStatuses_Mutation_Response>;
  /** delete single row from the table: "VariableMonitoringStatuses" */
  delete_VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** delete data from the table: "VariableMonitorings" */
  delete_VariableMonitorings?: Maybe<VariableMonitorings_Mutation_Response>;
  /** delete single row from the table: "VariableMonitorings" */
  delete_VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** delete data from the table: "VariableStatuses" */
  delete_VariableStatuses?: Maybe<VariableStatuses_Mutation_Response>;
  /** delete single row from the table: "VariableStatuses" */
  delete_VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** delete data from the table: "Variables" */
  delete_Variables?: Maybe<Variables_Mutation_Response>;
  /** delete single row from the table: "Variables" */
  delete_Variables_by_pk?: Maybe<Variables>;
  /** insert data into the table: "AsyncJobStatuses" */
  insert_AsyncJobStatuses?: Maybe<AsyncJobStatuses_Mutation_Response>;
  /** insert a single row into the table: "AsyncJobStatuses" */
  insert_AsyncJobStatuses_one?: Maybe<AsyncJobStatuses>;
  /** insert data into the table: "Authorizations" */
  insert_Authorizations?: Maybe<Authorizations_Mutation_Response>;
  /** insert a single row into the table: "Authorizations" */
  insert_Authorizations_one?: Maybe<Authorizations>;
  /** insert data into the table: "Boots" */
  insert_Boots?: Maybe<Boots_Mutation_Response>;
  /** insert a single row into the table: "Boots" */
  insert_Boots_one?: Maybe<Boots>;
  /** insert data into the table: "Certificates" */
  insert_Certificates?: Maybe<Certificates_Mutation_Response>;
  /** insert a single row into the table: "Certificates" */
  insert_Certificates_one?: Maybe<Certificates>;
  /** insert data into the table: "ChangeConfigurations" */
  insert_ChangeConfigurations?: Maybe<ChangeConfigurations_Mutation_Response>;
  /** insert a single row into the table: "ChangeConfigurations" */
  insert_ChangeConfigurations_one?: Maybe<ChangeConfigurations>;
  /** insert data into the table: "ChargingNeeds" */
  insert_ChargingNeeds?: Maybe<ChargingNeeds_Mutation_Response>;
  /** insert a single row into the table: "ChargingNeeds" */
  insert_ChargingNeeds_one?: Maybe<ChargingNeeds>;
  /** insert data into the table: "ChargingProfiles" */
  insert_ChargingProfiles?: Maybe<ChargingProfiles_Mutation_Response>;
  /** insert a single row into the table: "ChargingProfiles" */
  insert_ChargingProfiles_one?: Maybe<ChargingProfiles>;
  /** insert data into the table: "ChargingSchedules" */
  insert_ChargingSchedules?: Maybe<ChargingSchedules_Mutation_Response>;
  /** insert a single row into the table: "ChargingSchedules" */
  insert_ChargingSchedules_one?: Maybe<ChargingSchedules>;
  /** insert data into the table: "ChargingStationNetworkProfiles" */
  insert_ChargingStationNetworkProfiles?: Maybe<ChargingStationNetworkProfiles_Mutation_Response>;
  /** insert a single row into the table: "ChargingStationNetworkProfiles" */
  insert_ChargingStationNetworkProfiles_one?: Maybe<ChargingStationNetworkProfiles>;
  /** insert data into the table: "ChargingStationSecurityInfos" */
  insert_ChargingStationSecurityInfos?: Maybe<ChargingStationSecurityInfos_Mutation_Response>;
  /** insert a single row into the table: "ChargingStationSecurityInfos" */
  insert_ChargingStationSecurityInfos_one?: Maybe<ChargingStationSecurityInfos>;
  /** insert data into the table: "ChargingStationSequences" */
  insert_ChargingStationSequences?: Maybe<ChargingStationSequences_Mutation_Response>;
  /** insert a single row into the table: "ChargingStationSequences" */
  insert_ChargingStationSequences_one?: Maybe<ChargingStationSequences>;
  /** insert data into the table: "ChargingStations" */
  insert_ChargingStations?: Maybe<ChargingStations_Mutation_Response>;
  /** insert a single row into the table: "ChargingStations" */
  insert_ChargingStations_one?: Maybe<ChargingStations>;
  /** insert data into the table: "ComponentVariables" */
  insert_ComponentVariables?: Maybe<ComponentVariables_Mutation_Response>;
  /** insert a single row into the table: "ComponentVariables" */
  insert_ComponentVariables_one?: Maybe<ComponentVariables>;
  /** insert data into the table: "Components" */
  insert_Components?: Maybe<Components_Mutation_Response>;
  /** insert a single row into the table: "Components" */
  insert_Components_one?: Maybe<Components>;
  /** insert data into the table: "CompositeSchedules" */
  insert_CompositeSchedules?: Maybe<CompositeSchedules_Mutation_Response>;
  /** insert a single row into the table: "CompositeSchedules" */
  insert_CompositeSchedules_one?: Maybe<CompositeSchedules>;
  /** insert data into the table: "Connectors" */
  insert_Connectors?: Maybe<Connectors_Mutation_Response>;
  /** insert a single row into the table: "Connectors" */
  insert_Connectors_one?: Maybe<Connectors>;
  /** insert data into the table: "EventData" */
  insert_EventData?: Maybe<EventData_Mutation_Response>;
  /** insert a single row into the table: "EventData" */
  insert_EventData_one?: Maybe<EventData>;
  /** insert data into the table: "EvseTypes" */
  insert_EvseTypes?: Maybe<EvseTypes_Mutation_Response>;
  /** insert a single row into the table: "EvseTypes" */
  insert_EvseTypes_one?: Maybe<EvseTypes>;
  /** insert data into the table: "Evses" */
  insert_Evses?: Maybe<Evses_Mutation_Response>;
  /** insert a single row into the table: "Evses" */
  insert_Evses_one?: Maybe<Evses>;
  /** insert data into the table: "InstalledCertificates" */
  insert_InstalledCertificates?: Maybe<InstalledCertificates_Mutation_Response>;
  /** insert a single row into the table: "InstalledCertificates" */
  insert_InstalledCertificates_one?: Maybe<InstalledCertificates>;
  /** insert data into the table: "LatestStatusNotifications" */
  insert_LatestStatusNotifications?: Maybe<LatestStatusNotifications_Mutation_Response>;
  /** insert a single row into the table: "LatestStatusNotifications" */
  insert_LatestStatusNotifications_one?: Maybe<LatestStatusNotifications>;
  /** insert data into the table: "LocalListAuthorizations" */
  insert_LocalListAuthorizations?: Maybe<LocalListAuthorizations_Mutation_Response>;
  /** insert a single row into the table: "LocalListAuthorizations" */
  insert_LocalListAuthorizations_one?: Maybe<LocalListAuthorizations>;
  /** insert data into the table: "LocalListVersionAuthorizations" */
  insert_LocalListVersionAuthorizations?: Maybe<LocalListVersionAuthorizations_Mutation_Response>;
  /** insert a single row into the table: "LocalListVersionAuthorizations" */
  insert_LocalListVersionAuthorizations_one?: Maybe<LocalListVersionAuthorizations>;
  /** insert data into the table: "LocalListVersions" */
  insert_LocalListVersions?: Maybe<LocalListVersions_Mutation_Response>;
  /** insert a single row into the table: "LocalListVersions" */
  insert_LocalListVersions_one?: Maybe<LocalListVersions>;
  /** insert data into the table: "Locations" */
  insert_Locations?: Maybe<Locations_Mutation_Response>;
  /** insert a single row into the table: "Locations" */
  insert_Locations_one?: Maybe<Locations>;
  /** insert data into the table: "MessageInfos" */
  insert_MessageInfos?: Maybe<MessageInfos_Mutation_Response>;
  /** insert a single row into the table: "MessageInfos" */
  insert_MessageInfos_one?: Maybe<MessageInfos>;
  /** insert data into the table: "MeterValues" */
  insert_MeterValues?: Maybe<MeterValues_Mutation_Response>;
  /** insert a single row into the table: "MeterValues" */
  insert_MeterValues_one?: Maybe<MeterValues>;
  /** insert data into the table: "OCPPMessages" */
  insert_OCPPMessages?: Maybe<OcppMessages_Mutation_Response>;
  /** insert a single row into the table: "OCPPMessages" */
  insert_OCPPMessages_one?: Maybe<OcppMessages>;
  /** insert data into the table: "Reservations" */
  insert_Reservations?: Maybe<Reservations_Mutation_Response>;
  /** insert a single row into the table: "Reservations" */
  insert_Reservations_one?: Maybe<Reservations>;
  /** insert data into the table: "SalesTariffs" */
  insert_SalesTariffs?: Maybe<SalesTariffs_Mutation_Response>;
  /** insert a single row into the table: "SalesTariffs" */
  insert_SalesTariffs_one?: Maybe<SalesTariffs>;
  /** insert data into the table: "SecurityEvents" */
  insert_SecurityEvents?: Maybe<SecurityEvents_Mutation_Response>;
  /** insert a single row into the table: "SecurityEvents" */
  insert_SecurityEvents_one?: Maybe<SecurityEvents>;
  /** insert data into the table: "SendLocalListAuthorizations" */
  insert_SendLocalListAuthorizations?: Maybe<SendLocalListAuthorizations_Mutation_Response>;
  /** insert a single row into the table: "SendLocalListAuthorizations" */
  insert_SendLocalListAuthorizations_one?: Maybe<SendLocalListAuthorizations>;
  /** insert data into the table: "SendLocalLists" */
  insert_SendLocalLists?: Maybe<SendLocalLists_Mutation_Response>;
  /** insert a single row into the table: "SendLocalLists" */
  insert_SendLocalLists_one?: Maybe<SendLocalLists>;
  /** insert data into the table: "ServerNetworkProfiles" */
  insert_ServerNetworkProfiles?: Maybe<ServerNetworkProfiles_Mutation_Response>;
  /** insert a single row into the table: "ServerNetworkProfiles" */
  insert_ServerNetworkProfiles_one?: Maybe<ServerNetworkProfiles>;
  /** insert data into the table: "SetNetworkProfiles" */
  insert_SetNetworkProfiles?: Maybe<SetNetworkProfiles_Mutation_Response>;
  /** insert a single row into the table: "SetNetworkProfiles" */
  insert_SetNetworkProfiles_one?: Maybe<SetNetworkProfiles>;
  /** insert data into the table: "StartTransactions" */
  insert_StartTransactions?: Maybe<StartTransactions_Mutation_Response>;
  /** insert a single row into the table: "StartTransactions" */
  insert_StartTransactions_one?: Maybe<StartTransactions>;
  /** insert data into the table: "StatusNotifications" */
  insert_StatusNotifications?: Maybe<StatusNotifications_Mutation_Response>;
  /** insert a single row into the table: "StatusNotifications" */
  insert_StatusNotifications_one?: Maybe<StatusNotifications>;
  /** insert data into the table: "StopTransactions" */
  insert_StopTransactions?: Maybe<StopTransactions_Mutation_Response>;
  /** insert a single row into the table: "StopTransactions" */
  insert_StopTransactions_one?: Maybe<StopTransactions>;
  /** insert data into the table: "Subscriptions" */
  insert_Subscriptions?: Maybe<Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "Subscriptions" */
  insert_Subscriptions_one?: Maybe<Subscriptions>;
  /** insert data into the table: "Tariffs" */
  insert_Tariffs?: Maybe<Tariffs_Mutation_Response>;
  /** insert a single row into the table: "Tariffs" */
  insert_Tariffs_one?: Maybe<Tariffs>;
  /** insert data into the table: "TenantPartners" */
  insert_TenantPartners?: Maybe<TenantPartners_Mutation_Response>;
  /** insert a single row into the table: "TenantPartners" */
  insert_TenantPartners_one?: Maybe<TenantPartners>;
  /** insert data into the table: "Tenants" */
  insert_Tenants?: Maybe<Tenants_Mutation_Response>;
  /** insert a single row into the table: "Tenants" */
  insert_Tenants_one?: Maybe<Tenants>;
  /** insert data into the table: "TransactionEvents" */
  insert_TransactionEvents?: Maybe<TransactionEvents_Mutation_Response>;
  /** insert a single row into the table: "TransactionEvents" */
  insert_TransactionEvents_one?: Maybe<TransactionEvents>;
  /** insert data into the table: "Transactions" */
  insert_Transactions?: Maybe<Transactions_Mutation_Response>;
  /** insert a single row into the table: "Transactions" */
  insert_Transactions_one?: Maybe<Transactions>;
  /** insert data into the table: "VariableAttributes" */
  insert_VariableAttributes?: Maybe<VariableAttributes_Mutation_Response>;
  /** insert a single row into the table: "VariableAttributes" */
  insert_VariableAttributes_one?: Maybe<VariableAttributes>;
  /** insert data into the table: "VariableCharacteristics" */
  insert_VariableCharacteristics?: Maybe<VariableCharacteristics_Mutation_Response>;
  /** insert a single row into the table: "VariableCharacteristics" */
  insert_VariableCharacteristics_one?: Maybe<VariableCharacteristics>;
  /** insert data into the table: "VariableMonitoringStatuses" */
  insert_VariableMonitoringStatuses?: Maybe<VariableMonitoringStatuses_Mutation_Response>;
  /** insert a single row into the table: "VariableMonitoringStatuses" */
  insert_VariableMonitoringStatuses_one?: Maybe<VariableMonitoringStatuses>;
  /** insert data into the table: "VariableMonitorings" */
  insert_VariableMonitorings?: Maybe<VariableMonitorings_Mutation_Response>;
  /** insert a single row into the table: "VariableMonitorings" */
  insert_VariableMonitorings_one?: Maybe<VariableMonitorings>;
  /** insert data into the table: "VariableStatuses" */
  insert_VariableStatuses?: Maybe<VariableStatuses_Mutation_Response>;
  /** insert a single row into the table: "VariableStatuses" */
  insert_VariableStatuses_one?: Maybe<VariableStatuses>;
  /** insert data into the table: "Variables" */
  insert_Variables?: Maybe<Variables_Mutation_Response>;
  /** insert a single row into the table: "Variables" */
  insert_Variables_one?: Maybe<Variables>;
  /** update data of the table: "AsyncJobStatuses" */
  update_AsyncJobStatuses?: Maybe<AsyncJobStatuses_Mutation_Response>;
  /** update single row of the table: "AsyncJobStatuses" */
  update_AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** update multiples rows of table: "AsyncJobStatuses" */
  update_AsyncJobStatuses_many?: Maybe<
    Array<Maybe<AsyncJobStatuses_Mutation_Response>>
  >;
  /** update data of the table: "Authorizations" */
  update_Authorizations?: Maybe<Authorizations_Mutation_Response>;
  /** update single row of the table: "Authorizations" */
  update_Authorizations_by_pk?: Maybe<Authorizations>;
  /** update multiples rows of table: "Authorizations" */
  update_Authorizations_many?: Maybe<
    Array<Maybe<Authorizations_Mutation_Response>>
  >;
  /** update data of the table: "Boots" */
  update_Boots?: Maybe<Boots_Mutation_Response>;
  /** update single row of the table: "Boots" */
  update_Boots_by_pk?: Maybe<Boots>;
  /** update multiples rows of table: "Boots" */
  update_Boots_many?: Maybe<Array<Maybe<Boots_Mutation_Response>>>;
  /** update data of the table: "Certificates" */
  update_Certificates?: Maybe<Certificates_Mutation_Response>;
  /** update single row of the table: "Certificates" */
  update_Certificates_by_pk?: Maybe<Certificates>;
  /** update multiples rows of table: "Certificates" */
  update_Certificates_many?: Maybe<
    Array<Maybe<Certificates_Mutation_Response>>
  >;
  /** update data of the table: "ChangeConfigurations" */
  update_ChangeConfigurations?: Maybe<ChangeConfigurations_Mutation_Response>;
  /** update single row of the table: "ChangeConfigurations" */
  update_ChangeConfigurations_by_pk?: Maybe<ChangeConfigurations>;
  /** update multiples rows of table: "ChangeConfigurations" */
  update_ChangeConfigurations_many?: Maybe<
    Array<Maybe<ChangeConfigurations_Mutation_Response>>
  >;
  /** update data of the table: "ChargingNeeds" */
  update_ChargingNeeds?: Maybe<ChargingNeeds_Mutation_Response>;
  /** update single row of the table: "ChargingNeeds" */
  update_ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** update multiples rows of table: "ChargingNeeds" */
  update_ChargingNeeds_many?: Maybe<
    Array<Maybe<ChargingNeeds_Mutation_Response>>
  >;
  /** update data of the table: "ChargingProfiles" */
  update_ChargingProfiles?: Maybe<ChargingProfiles_Mutation_Response>;
  /** update single row of the table: "ChargingProfiles" */
  update_ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** update multiples rows of table: "ChargingProfiles" */
  update_ChargingProfiles_many?: Maybe<
    Array<Maybe<ChargingProfiles_Mutation_Response>>
  >;
  /** update data of the table: "ChargingSchedules" */
  update_ChargingSchedules?: Maybe<ChargingSchedules_Mutation_Response>;
  /** update single row of the table: "ChargingSchedules" */
  update_ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** update multiples rows of table: "ChargingSchedules" */
  update_ChargingSchedules_many?: Maybe<
    Array<Maybe<ChargingSchedules_Mutation_Response>>
  >;
  /** update data of the table: "ChargingStationNetworkProfiles" */
  update_ChargingStationNetworkProfiles?: Maybe<ChargingStationNetworkProfiles_Mutation_Response>;
  /** update single row of the table: "ChargingStationNetworkProfiles" */
  update_ChargingStationNetworkProfiles_by_pk?: Maybe<ChargingStationNetworkProfiles>;
  /** update multiples rows of table: "ChargingStationNetworkProfiles" */
  update_ChargingStationNetworkProfiles_many?: Maybe<
    Array<Maybe<ChargingStationNetworkProfiles_Mutation_Response>>
  >;
  /** update data of the table: "ChargingStationSecurityInfos" */
  update_ChargingStationSecurityInfos?: Maybe<ChargingStationSecurityInfos_Mutation_Response>;
  /** update single row of the table: "ChargingStationSecurityInfos" */
  update_ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** update multiples rows of table: "ChargingStationSecurityInfos" */
  update_ChargingStationSecurityInfos_many?: Maybe<
    Array<Maybe<ChargingStationSecurityInfos_Mutation_Response>>
  >;
  /** update data of the table: "ChargingStationSequences" */
  update_ChargingStationSequences?: Maybe<ChargingStationSequences_Mutation_Response>;
  /** update single row of the table: "ChargingStationSequences" */
  update_ChargingStationSequences_by_pk?: Maybe<ChargingStationSequences>;
  /** update multiples rows of table: "ChargingStationSequences" */
  update_ChargingStationSequences_many?: Maybe<
    Array<Maybe<ChargingStationSequences_Mutation_Response>>
  >;
  /** update data of the table: "ChargingStations" */
  update_ChargingStations?: Maybe<ChargingStations_Mutation_Response>;
  /** update single row of the table: "ChargingStations" */
  update_ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** update multiples rows of table: "ChargingStations" */
  update_ChargingStations_many?: Maybe<
    Array<Maybe<ChargingStations_Mutation_Response>>
  >;
  /** update data of the table: "ComponentVariables" */
  update_ComponentVariables?: Maybe<ComponentVariables_Mutation_Response>;
  /** update single row of the table: "ComponentVariables" */
  update_ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** update multiples rows of table: "ComponentVariables" */
  update_ComponentVariables_many?: Maybe<
    Array<Maybe<ComponentVariables_Mutation_Response>>
  >;
  /** update data of the table: "Components" */
  update_Components?: Maybe<Components_Mutation_Response>;
  /** update single row of the table: "Components" */
  update_Components_by_pk?: Maybe<Components>;
  /** update multiples rows of table: "Components" */
  update_Components_many?: Maybe<Array<Maybe<Components_Mutation_Response>>>;
  /** update data of the table: "CompositeSchedules" */
  update_CompositeSchedules?: Maybe<CompositeSchedules_Mutation_Response>;
  /** update single row of the table: "CompositeSchedules" */
  update_CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** update multiples rows of table: "CompositeSchedules" */
  update_CompositeSchedules_many?: Maybe<
    Array<Maybe<CompositeSchedules_Mutation_Response>>
  >;
  /** update data of the table: "Connectors" */
  update_Connectors?: Maybe<Connectors_Mutation_Response>;
  /** update single row of the table: "Connectors" */
  update_Connectors_by_pk?: Maybe<Connectors>;
  /** update multiples rows of table: "Connectors" */
  update_Connectors_many?: Maybe<Array<Maybe<Connectors_Mutation_Response>>>;
  /** update data of the table: "EventData" */
  update_EventData?: Maybe<EventData_Mutation_Response>;
  /** update single row of the table: "EventData" */
  update_EventData_by_pk?: Maybe<EventData>;
  /** update multiples rows of table: "EventData" */
  update_EventData_many?: Maybe<Array<Maybe<EventData_Mutation_Response>>>;
  /** update data of the table: "EvseTypes" */
  update_EvseTypes?: Maybe<EvseTypes_Mutation_Response>;
  /** update single row of the table: "EvseTypes" */
  update_EvseTypes_by_pk?: Maybe<EvseTypes>;
  /** update multiples rows of table: "EvseTypes" */
  update_EvseTypes_many?: Maybe<Array<Maybe<EvseTypes_Mutation_Response>>>;
  /** update data of the table: "Evses" */
  update_Evses?: Maybe<Evses_Mutation_Response>;
  /** update single row of the table: "Evses" */
  update_Evses_by_pk?: Maybe<Evses>;
  /** update multiples rows of table: "Evses" */
  update_Evses_many?: Maybe<Array<Maybe<Evses_Mutation_Response>>>;
  /** update data of the table: "InstalledCertificates" */
  update_InstalledCertificates?: Maybe<InstalledCertificates_Mutation_Response>;
  /** update single row of the table: "InstalledCertificates" */
  update_InstalledCertificates_by_pk?: Maybe<InstalledCertificates>;
  /** update multiples rows of table: "InstalledCertificates" */
  update_InstalledCertificates_many?: Maybe<
    Array<Maybe<InstalledCertificates_Mutation_Response>>
  >;
  /** update data of the table: "LatestStatusNotifications" */
  update_LatestStatusNotifications?: Maybe<LatestStatusNotifications_Mutation_Response>;
  /** update single row of the table: "LatestStatusNotifications" */
  update_LatestStatusNotifications_by_pk?: Maybe<LatestStatusNotifications>;
  /** update multiples rows of table: "LatestStatusNotifications" */
  update_LatestStatusNotifications_many?: Maybe<
    Array<Maybe<LatestStatusNotifications_Mutation_Response>>
  >;
  /** update data of the table: "LocalListAuthorizations" */
  update_LocalListAuthorizations?: Maybe<LocalListAuthorizations_Mutation_Response>;
  /** update single row of the table: "LocalListAuthorizations" */
  update_LocalListAuthorizations_by_pk?: Maybe<LocalListAuthorizations>;
  /** update multiples rows of table: "LocalListAuthorizations" */
  update_LocalListAuthorizations_many?: Maybe<
    Array<Maybe<LocalListAuthorizations_Mutation_Response>>
  >;
  /** update data of the table: "LocalListVersionAuthorizations" */
  update_LocalListVersionAuthorizations?: Maybe<LocalListVersionAuthorizations_Mutation_Response>;
  /** update single row of the table: "LocalListVersionAuthorizations" */
  update_LocalListVersionAuthorizations_by_pk?: Maybe<LocalListVersionAuthorizations>;
  /** update multiples rows of table: "LocalListVersionAuthorizations" */
  update_LocalListVersionAuthorizations_many?: Maybe<
    Array<Maybe<LocalListVersionAuthorizations_Mutation_Response>>
  >;
  /** update data of the table: "LocalListVersions" */
  update_LocalListVersions?: Maybe<LocalListVersions_Mutation_Response>;
  /** update single row of the table: "LocalListVersions" */
  update_LocalListVersions_by_pk?: Maybe<LocalListVersions>;
  /** update multiples rows of table: "LocalListVersions" */
  update_LocalListVersions_many?: Maybe<
    Array<Maybe<LocalListVersions_Mutation_Response>>
  >;
  /** update data of the table: "Locations" */
  update_Locations?: Maybe<Locations_Mutation_Response>;
  /** update single row of the table: "Locations" */
  update_Locations_by_pk?: Maybe<Locations>;
  /** update multiples rows of table: "Locations" */
  update_Locations_many?: Maybe<Array<Maybe<Locations_Mutation_Response>>>;
  /** update data of the table: "MessageInfos" */
  update_MessageInfos?: Maybe<MessageInfos_Mutation_Response>;
  /** update single row of the table: "MessageInfos" */
  update_MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** update multiples rows of table: "MessageInfos" */
  update_MessageInfos_many?: Maybe<
    Array<Maybe<MessageInfos_Mutation_Response>>
  >;
  /** update data of the table: "MeterValues" */
  update_MeterValues?: Maybe<MeterValues_Mutation_Response>;
  /** update single row of the table: "MeterValues" */
  update_MeterValues_by_pk?: Maybe<MeterValues>;
  /** update multiples rows of table: "MeterValues" */
  update_MeterValues_many?: Maybe<Array<Maybe<MeterValues_Mutation_Response>>>;
  /** update data of the table: "OCPPMessages" */
  update_OCPPMessages?: Maybe<OcppMessages_Mutation_Response>;
  /** update single row of the table: "OCPPMessages" */
  update_OCPPMessages_by_pk?: Maybe<OcppMessages>;
  /** update multiples rows of table: "OCPPMessages" */
  update_OCPPMessages_many?: Maybe<
    Array<Maybe<OcppMessages_Mutation_Response>>
  >;
  /** update data of the table: "Reservations" */
  update_Reservations?: Maybe<Reservations_Mutation_Response>;
  /** update single row of the table: "Reservations" */
  update_Reservations_by_pk?: Maybe<Reservations>;
  /** update multiples rows of table: "Reservations" */
  update_Reservations_many?: Maybe<
    Array<Maybe<Reservations_Mutation_Response>>
  >;
  /** update data of the table: "SalesTariffs" */
  update_SalesTariffs?: Maybe<SalesTariffs_Mutation_Response>;
  /** update single row of the table: "SalesTariffs" */
  update_SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** update multiples rows of table: "SalesTariffs" */
  update_SalesTariffs_many?: Maybe<
    Array<Maybe<SalesTariffs_Mutation_Response>>
  >;
  /** update data of the table: "SecurityEvents" */
  update_SecurityEvents?: Maybe<SecurityEvents_Mutation_Response>;
  /** update single row of the table: "SecurityEvents" */
  update_SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** update multiples rows of table: "SecurityEvents" */
  update_SecurityEvents_many?: Maybe<
    Array<Maybe<SecurityEvents_Mutation_Response>>
  >;
  /** update data of the table: "SendLocalListAuthorizations" */
  update_SendLocalListAuthorizations?: Maybe<SendLocalListAuthorizations_Mutation_Response>;
  /** update single row of the table: "SendLocalListAuthorizations" */
  update_SendLocalListAuthorizations_by_pk?: Maybe<SendLocalListAuthorizations>;
  /** update multiples rows of table: "SendLocalListAuthorizations" */
  update_SendLocalListAuthorizations_many?: Maybe<
    Array<Maybe<SendLocalListAuthorizations_Mutation_Response>>
  >;
  /** update data of the table: "SendLocalLists" */
  update_SendLocalLists?: Maybe<SendLocalLists_Mutation_Response>;
  /** update single row of the table: "SendLocalLists" */
  update_SendLocalLists_by_pk?: Maybe<SendLocalLists>;
  /** update multiples rows of table: "SendLocalLists" */
  update_SendLocalLists_many?: Maybe<
    Array<Maybe<SendLocalLists_Mutation_Response>>
  >;
  /** update data of the table: "ServerNetworkProfiles" */
  update_ServerNetworkProfiles?: Maybe<ServerNetworkProfiles_Mutation_Response>;
  /** update single row of the table: "ServerNetworkProfiles" */
  update_ServerNetworkProfiles_by_pk?: Maybe<ServerNetworkProfiles>;
  /** update multiples rows of table: "ServerNetworkProfiles" */
  update_ServerNetworkProfiles_many?: Maybe<
    Array<Maybe<ServerNetworkProfiles_Mutation_Response>>
  >;
  /** update data of the table: "SetNetworkProfiles" */
  update_SetNetworkProfiles?: Maybe<SetNetworkProfiles_Mutation_Response>;
  /** update single row of the table: "SetNetworkProfiles" */
  update_SetNetworkProfiles_by_pk?: Maybe<SetNetworkProfiles>;
  /** update multiples rows of table: "SetNetworkProfiles" */
  update_SetNetworkProfiles_many?: Maybe<
    Array<Maybe<SetNetworkProfiles_Mutation_Response>>
  >;
  /** update data of the table: "StartTransactions" */
  update_StartTransactions?: Maybe<StartTransactions_Mutation_Response>;
  /** update single row of the table: "StartTransactions" */
  update_StartTransactions_by_pk?: Maybe<StartTransactions>;
  /** update multiples rows of table: "StartTransactions" */
  update_StartTransactions_many?: Maybe<
    Array<Maybe<StartTransactions_Mutation_Response>>
  >;
  /** update data of the table: "StatusNotifications" */
  update_StatusNotifications?: Maybe<StatusNotifications_Mutation_Response>;
  /** update single row of the table: "StatusNotifications" */
  update_StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** update multiples rows of table: "StatusNotifications" */
  update_StatusNotifications_many?: Maybe<
    Array<Maybe<StatusNotifications_Mutation_Response>>
  >;
  /** update data of the table: "StopTransactions" */
  update_StopTransactions?: Maybe<StopTransactions_Mutation_Response>;
  /** update single row of the table: "StopTransactions" */
  update_StopTransactions_by_pk?: Maybe<StopTransactions>;
  /** update multiples rows of table: "StopTransactions" */
  update_StopTransactions_many?: Maybe<
    Array<Maybe<StopTransactions_Mutation_Response>>
  >;
  /** update data of the table: "Subscriptions" */
  update_Subscriptions?: Maybe<Subscriptions_Mutation_Response>;
  /** update single row of the table: "Subscriptions" */
  update_Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** update multiples rows of table: "Subscriptions" */
  update_Subscriptions_many?: Maybe<
    Array<Maybe<Subscriptions_Mutation_Response>>
  >;
  /** update data of the table: "Tariffs" */
  update_Tariffs?: Maybe<Tariffs_Mutation_Response>;
  /** update single row of the table: "Tariffs" */
  update_Tariffs_by_pk?: Maybe<Tariffs>;
  /** update multiples rows of table: "Tariffs" */
  update_Tariffs_many?: Maybe<Array<Maybe<Tariffs_Mutation_Response>>>;
  /** update data of the table: "TenantPartners" */
  update_TenantPartners?: Maybe<TenantPartners_Mutation_Response>;
  /** update single row of the table: "TenantPartners" */
  update_TenantPartners_by_pk?: Maybe<TenantPartners>;
  /** update multiples rows of table: "TenantPartners" */
  update_TenantPartners_many?: Maybe<
    Array<Maybe<TenantPartners_Mutation_Response>>
  >;
  /** update data of the table: "Tenants" */
  update_Tenants?: Maybe<Tenants_Mutation_Response>;
  /** update single row of the table: "Tenants" */
  update_Tenants_by_pk?: Maybe<Tenants>;
  /** update multiples rows of table: "Tenants" */
  update_Tenants_many?: Maybe<Array<Maybe<Tenants_Mutation_Response>>>;
  /** update data of the table: "TransactionEvents" */
  update_TransactionEvents?: Maybe<TransactionEvents_Mutation_Response>;
  /** update single row of the table: "TransactionEvents" */
  update_TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** update multiples rows of table: "TransactionEvents" */
  update_TransactionEvents_many?: Maybe<
    Array<Maybe<TransactionEvents_Mutation_Response>>
  >;
  /** update data of the table: "Transactions" */
  update_Transactions?: Maybe<Transactions_Mutation_Response>;
  /** update single row of the table: "Transactions" */
  update_Transactions_by_pk?: Maybe<Transactions>;
  /** update multiples rows of table: "Transactions" */
  update_Transactions_many?: Maybe<
    Array<Maybe<Transactions_Mutation_Response>>
  >;
  /** update data of the table: "VariableAttributes" */
  update_VariableAttributes?: Maybe<VariableAttributes_Mutation_Response>;
  /** update single row of the table: "VariableAttributes" */
  update_VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** update multiples rows of table: "VariableAttributes" */
  update_VariableAttributes_many?: Maybe<
    Array<Maybe<VariableAttributes_Mutation_Response>>
  >;
  /** update data of the table: "VariableCharacteristics" */
  update_VariableCharacteristics?: Maybe<VariableCharacteristics_Mutation_Response>;
  /** update single row of the table: "VariableCharacteristics" */
  update_VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** update multiples rows of table: "VariableCharacteristics" */
  update_VariableCharacteristics_many?: Maybe<
    Array<Maybe<VariableCharacteristics_Mutation_Response>>
  >;
  /** update data of the table: "VariableMonitoringStatuses" */
  update_VariableMonitoringStatuses?: Maybe<VariableMonitoringStatuses_Mutation_Response>;
  /** update single row of the table: "VariableMonitoringStatuses" */
  update_VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** update multiples rows of table: "VariableMonitoringStatuses" */
  update_VariableMonitoringStatuses_many?: Maybe<
    Array<Maybe<VariableMonitoringStatuses_Mutation_Response>>
  >;
  /** update data of the table: "VariableMonitorings" */
  update_VariableMonitorings?: Maybe<VariableMonitorings_Mutation_Response>;
  /** update single row of the table: "VariableMonitorings" */
  update_VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** update multiples rows of table: "VariableMonitorings" */
  update_VariableMonitorings_many?: Maybe<
    Array<Maybe<VariableMonitorings_Mutation_Response>>
  >;
  /** update data of the table: "VariableStatuses" */
  update_VariableStatuses?: Maybe<VariableStatuses_Mutation_Response>;
  /** update single row of the table: "VariableStatuses" */
  update_VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** update multiples rows of table: "VariableStatuses" */
  update_VariableStatuses_many?: Maybe<
    Array<Maybe<VariableStatuses_Mutation_Response>>
  >;
  /** update data of the table: "Variables" */
  update_Variables?: Maybe<Variables_Mutation_Response>;
  /** update single row of the table: "Variables" */
  update_Variables_by_pk?: Maybe<Variables>;
  /** update multiples rows of table: "Variables" */
  update_Variables_many?: Maybe<Array<Maybe<Variables_Mutation_Response>>>;
};

/** mutation root */
export type Mutation_RootDelete_AsyncJobStatusesArgs = {
  where: AsyncJobStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_AsyncJobStatuses_By_PkArgs = {
  jobId: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_AuthorizationsArgs = {
  where: Authorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Authorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_BootsArgs = {
  where: Boots_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Boots_By_PkArgs = {
  id: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_CertificatesArgs = {
  where: Certificates_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Certificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChangeConfigurationsArgs = {
  where: ChangeConfigurations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChangeConfigurations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingNeedsArgs = {
  where: ChargingNeeds_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingNeeds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingProfilesArgs = {
  where: ChargingProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingProfiles_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingSchedulesArgs = {
  where: ChargingSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingSchedules_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationNetworkProfilesArgs = {
  where: ChargingStationNetworkProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationNetworkProfiles_By_PkArgs = {
  setNetworkProfileId: Scalars['Int']['input'];
  stationId: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationSecurityInfosArgs = {
  where: ChargingStationSecurityInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationSecurityInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationSequencesArgs = {
  where: ChargingStationSequences_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationSequences_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationsArgs = {
  where: ChargingStations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingStations_By_PkArgs = {
  id: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ComponentVariablesArgs = {
  where: ComponentVariables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ComponentVariables_By_PkArgs = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ComponentsArgs = {
  where: Components_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Components_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_CompositeSchedulesArgs = {
  where: CompositeSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_CompositeSchedules_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ConnectorsArgs = {
  where: Connectors_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Connectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_EventDataArgs = {
  where: EventData_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_EventData_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_EvseTypesArgs = {
  where: EvseTypes_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_EvseTypes_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_EvsesArgs = {
  where: Evses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Evses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_InstalledCertificatesArgs = {
  where: InstalledCertificates_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_InstalledCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LatestStatusNotificationsArgs = {
  where: LatestStatusNotifications_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_LatestStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LocalListAuthorizationsArgs = {
  where: LocalListAuthorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_LocalListAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LocalListVersionAuthorizationsArgs = {
  where: LocalListVersionAuthorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_LocalListVersionAuthorizations_By_PkArgs = {
  authorizationId: Scalars['Int']['input'];
  localListVersionId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LocalListVersionsArgs = {
  where: LocalListVersions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_LocalListVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LocationsArgs = {
  where: Locations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Locations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_MessageInfosArgs = {
  where: MessageInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_MessageInfos_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_MeterValuesArgs = {
  where: MeterValues_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_MeterValues_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcppMessagesArgs = {
  where: OcppMessages_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcppMessages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ReservationsArgs = {
  where: Reservations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Reservations_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SalesTariffsArgs = {
  where: SalesTariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SalesTariffs_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SecurityEventsArgs = {
  where: SecurityEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SecurityEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SendLocalListAuthorizationsArgs = {
  where: SendLocalListAuthorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SendLocalListAuthorizations_By_PkArgs = {
  authorizationId: Scalars['Int']['input'];
  sendLocalListId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SendLocalListsArgs = {
  where: SendLocalLists_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SendLocalLists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ServerNetworkProfilesArgs = {
  where: ServerNetworkProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ServerNetworkProfiles_By_PkArgs = {
  id: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SetNetworkProfilesArgs = {
  where: SetNetworkProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SetNetworkProfiles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_StartTransactionsArgs = {
  where: StartTransactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_StartTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_StatusNotificationsArgs = {
  where: StatusNotifications_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_StatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_StopTransactionsArgs = {
  where: StopTransactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_StopTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SubscriptionsArgs = {
  where: Subscriptions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Subscriptions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TariffsArgs = {
  where: Tariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Tariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TenantPartnersArgs = {
  where: TenantPartners_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_TenantPartners_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TenantsArgs = {
  where: Tenants_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Tenants_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TransactionEventsArgs = {
  where: TransactionEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_TransactionEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TransactionsArgs = {
  where: Transactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Transactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableAttributesArgs = {
  where: VariableAttributes_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableAttributes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableCharacteristicsArgs = {
  where: VariableCharacteristics_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableCharacteristics_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitoringStatusesArgs = {
  where: VariableMonitoringStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitoringStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitoringsArgs = {
  where: VariableMonitorings_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitorings_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableStatusesArgs = {
  where: VariableStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariablesArgs = {
  where: Variables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Variables_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootInsert_AsyncJobStatusesArgs = {
  objects: Array<AsyncJobStatuses_Insert_Input>;
  on_conflict?: InputMaybe<AsyncJobStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_AsyncJobStatuses_OneArgs = {
  object: AsyncJobStatuses_Insert_Input;
  on_conflict?: InputMaybe<AsyncJobStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_AuthorizationsArgs = {
  objects: Array<Authorizations_Insert_Input>;
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Authorizations_OneArgs = {
  object: Authorizations_Insert_Input;
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_BootsArgs = {
  objects: Array<Boots_Insert_Input>;
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Boots_OneArgs = {
  object: Boots_Insert_Input;
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CertificatesArgs = {
  objects: Array<Certificates_Insert_Input>;
  on_conflict?: InputMaybe<Certificates_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Certificates_OneArgs = {
  object: Certificates_Insert_Input;
  on_conflict?: InputMaybe<Certificates_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChangeConfigurationsArgs = {
  objects: Array<ChangeConfigurations_Insert_Input>;
  on_conflict?: InputMaybe<ChangeConfigurations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChangeConfigurations_OneArgs = {
  object: ChangeConfigurations_Insert_Input;
  on_conflict?: InputMaybe<ChangeConfigurations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingNeedsArgs = {
  objects: Array<ChargingNeeds_Insert_Input>;
  on_conflict?: InputMaybe<ChargingNeeds_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingNeeds_OneArgs = {
  object: ChargingNeeds_Insert_Input;
  on_conflict?: InputMaybe<ChargingNeeds_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingProfilesArgs = {
  objects: Array<ChargingProfiles_Insert_Input>;
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingProfiles_OneArgs = {
  object: ChargingProfiles_Insert_Input;
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingSchedulesArgs = {
  objects: Array<ChargingSchedules_Insert_Input>;
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingSchedules_OneArgs = {
  object: ChargingSchedules_Insert_Input;
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationNetworkProfilesArgs = {
  objects: Array<ChargingStationNetworkProfiles_Insert_Input>;
  on_conflict?: InputMaybe<ChargingStationNetworkProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationNetworkProfiles_OneArgs = {
  object: ChargingStationNetworkProfiles_Insert_Input;
  on_conflict?: InputMaybe<ChargingStationNetworkProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationSecurityInfosArgs = {
  objects: Array<ChargingStationSecurityInfos_Insert_Input>;
  on_conflict?: InputMaybe<ChargingStationSecurityInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationSecurityInfos_OneArgs = {
  object: ChargingStationSecurityInfos_Insert_Input;
  on_conflict?: InputMaybe<ChargingStationSecurityInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationSequencesArgs = {
  objects: Array<ChargingStationSequences_Insert_Input>;
  on_conflict?: InputMaybe<ChargingStationSequences_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationSequences_OneArgs = {
  object: ChargingStationSequences_Insert_Input;
  on_conflict?: InputMaybe<ChargingStationSequences_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationsArgs = {
  objects: Array<ChargingStations_Insert_Input>;
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStations_OneArgs = {
  object: ChargingStations_Insert_Input;
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ComponentVariablesArgs = {
  objects: Array<ComponentVariables_Insert_Input>;
  on_conflict?: InputMaybe<ComponentVariables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ComponentVariables_OneArgs = {
  object: ComponentVariables_Insert_Input;
  on_conflict?: InputMaybe<ComponentVariables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ComponentsArgs = {
  objects: Array<Components_Insert_Input>;
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Components_OneArgs = {
  object: Components_Insert_Input;
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CompositeSchedulesArgs = {
  objects: Array<CompositeSchedules_Insert_Input>;
  on_conflict?: InputMaybe<CompositeSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CompositeSchedules_OneArgs = {
  object: CompositeSchedules_Insert_Input;
  on_conflict?: InputMaybe<CompositeSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ConnectorsArgs = {
  objects: Array<Connectors_Insert_Input>;
  on_conflict?: InputMaybe<Connectors_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Connectors_OneArgs = {
  object: Connectors_Insert_Input;
  on_conflict?: InputMaybe<Connectors_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EventDataArgs = {
  objects: Array<EventData_Insert_Input>;
  on_conflict?: InputMaybe<EventData_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EventData_OneArgs = {
  object: EventData_Insert_Input;
  on_conflict?: InputMaybe<EventData_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EvseTypesArgs = {
  objects: Array<EvseTypes_Insert_Input>;
  on_conflict?: InputMaybe<EvseTypes_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EvseTypes_OneArgs = {
  object: EvseTypes_Insert_Input;
  on_conflict?: InputMaybe<EvseTypes_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EvsesArgs = {
  objects: Array<Evses_Insert_Input>;
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Evses_OneArgs = {
  object: Evses_Insert_Input;
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_InstalledCertificatesArgs = {
  objects: Array<InstalledCertificates_Insert_Input>;
  on_conflict?: InputMaybe<InstalledCertificates_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_InstalledCertificates_OneArgs = {
  object: InstalledCertificates_Insert_Input;
  on_conflict?: InputMaybe<InstalledCertificates_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LatestStatusNotificationsArgs = {
  objects: Array<LatestStatusNotifications_Insert_Input>;
  on_conflict?: InputMaybe<LatestStatusNotifications_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LatestStatusNotifications_OneArgs = {
  object: LatestStatusNotifications_Insert_Input;
  on_conflict?: InputMaybe<LatestStatusNotifications_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocalListAuthorizationsArgs = {
  objects: Array<LocalListAuthorizations_Insert_Input>;
  on_conflict?: InputMaybe<LocalListAuthorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocalListAuthorizations_OneArgs = {
  object: LocalListAuthorizations_Insert_Input;
  on_conflict?: InputMaybe<LocalListAuthorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocalListVersionAuthorizationsArgs = {
  objects: Array<LocalListVersionAuthorizations_Insert_Input>;
  on_conflict?: InputMaybe<LocalListVersionAuthorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocalListVersionAuthorizations_OneArgs = {
  object: LocalListVersionAuthorizations_Insert_Input;
  on_conflict?: InputMaybe<LocalListVersionAuthorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocalListVersionsArgs = {
  objects: Array<LocalListVersions_Insert_Input>;
  on_conflict?: InputMaybe<LocalListVersions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocalListVersions_OneArgs = {
  object: LocalListVersions_Insert_Input;
  on_conflict?: InputMaybe<LocalListVersions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocationsArgs = {
  objects: Array<Locations_Insert_Input>;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locations_OneArgs = {
  object: Locations_Insert_Input;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MessageInfosArgs = {
  objects: Array<MessageInfos_Insert_Input>;
  on_conflict?: InputMaybe<MessageInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MessageInfos_OneArgs = {
  object: MessageInfos_Insert_Input;
  on_conflict?: InputMaybe<MessageInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MeterValuesArgs = {
  objects: Array<MeterValues_Insert_Input>;
  on_conflict?: InputMaybe<MeterValues_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MeterValues_OneArgs = {
  object: MeterValues_Insert_Input;
  on_conflict?: InputMaybe<MeterValues_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcppMessagesArgs = {
  objects: Array<OcppMessages_Insert_Input>;
  on_conflict?: InputMaybe<OcppMessages_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcppMessages_OneArgs = {
  object: OcppMessages_Insert_Input;
  on_conflict?: InputMaybe<OcppMessages_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ReservationsArgs = {
  objects: Array<Reservations_Insert_Input>;
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Reservations_OneArgs = {
  object: Reservations_Insert_Input;
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SalesTariffsArgs = {
  objects: Array<SalesTariffs_Insert_Input>;
  on_conflict?: InputMaybe<SalesTariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SalesTariffs_OneArgs = {
  object: SalesTariffs_Insert_Input;
  on_conflict?: InputMaybe<SalesTariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SecurityEventsArgs = {
  objects: Array<SecurityEvents_Insert_Input>;
  on_conflict?: InputMaybe<SecurityEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SecurityEvents_OneArgs = {
  object: SecurityEvents_Insert_Input;
  on_conflict?: InputMaybe<SecurityEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SendLocalListAuthorizationsArgs = {
  objects: Array<SendLocalListAuthorizations_Insert_Input>;
  on_conflict?: InputMaybe<SendLocalListAuthorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SendLocalListAuthorizations_OneArgs = {
  object: SendLocalListAuthorizations_Insert_Input;
  on_conflict?: InputMaybe<SendLocalListAuthorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SendLocalListsArgs = {
  objects: Array<SendLocalLists_Insert_Input>;
  on_conflict?: InputMaybe<SendLocalLists_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SendLocalLists_OneArgs = {
  object: SendLocalLists_Insert_Input;
  on_conflict?: InputMaybe<SendLocalLists_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ServerNetworkProfilesArgs = {
  objects: Array<ServerNetworkProfiles_Insert_Input>;
  on_conflict?: InputMaybe<ServerNetworkProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ServerNetworkProfiles_OneArgs = {
  object: ServerNetworkProfiles_Insert_Input;
  on_conflict?: InputMaybe<ServerNetworkProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SetNetworkProfilesArgs = {
  objects: Array<SetNetworkProfiles_Insert_Input>;
  on_conflict?: InputMaybe<SetNetworkProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SetNetworkProfiles_OneArgs = {
  object: SetNetworkProfiles_Insert_Input;
  on_conflict?: InputMaybe<SetNetworkProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StartTransactionsArgs = {
  objects: Array<StartTransactions_Insert_Input>;
  on_conflict?: InputMaybe<StartTransactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StartTransactions_OneArgs = {
  object: StartTransactions_Insert_Input;
  on_conflict?: InputMaybe<StartTransactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StatusNotificationsArgs = {
  objects: Array<StatusNotifications_Insert_Input>;
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StatusNotifications_OneArgs = {
  object: StatusNotifications_Insert_Input;
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StopTransactionsArgs = {
  objects: Array<StopTransactions_Insert_Input>;
  on_conflict?: InputMaybe<StopTransactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StopTransactions_OneArgs = {
  object: StopTransactions_Insert_Input;
  on_conflict?: InputMaybe<StopTransactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SubscriptionsArgs = {
  objects: Array<Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<Subscriptions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Subscriptions_OneArgs = {
  object: Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<Subscriptions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TariffsArgs = {
  objects: Array<Tariffs_Insert_Input>;
  on_conflict?: InputMaybe<Tariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Tariffs_OneArgs = {
  object: Tariffs_Insert_Input;
  on_conflict?: InputMaybe<Tariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TenantPartnersArgs = {
  objects: Array<TenantPartners_Insert_Input>;
  on_conflict?: InputMaybe<TenantPartners_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TenantPartners_OneArgs = {
  object: TenantPartners_Insert_Input;
  on_conflict?: InputMaybe<TenantPartners_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TenantsArgs = {
  objects: Array<Tenants_Insert_Input>;
  on_conflict?: InputMaybe<Tenants_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Tenants_OneArgs = {
  object: Tenants_Insert_Input;
  on_conflict?: InputMaybe<Tenants_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TransactionEventsArgs = {
  objects: Array<TransactionEvents_Insert_Input>;
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TransactionEvents_OneArgs = {
  object: TransactionEvents_Insert_Input;
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TransactionsArgs = {
  objects: Array<Transactions_Insert_Input>;
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Transactions_OneArgs = {
  object: Transactions_Insert_Input;
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableAttributesArgs = {
  objects: Array<VariableAttributes_Insert_Input>;
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableAttributes_OneArgs = {
  object: VariableAttributes_Insert_Input;
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableCharacteristicsArgs = {
  objects: Array<VariableCharacteristics_Insert_Input>;
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableCharacteristics_OneArgs = {
  object: VariableCharacteristics_Insert_Input;
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitoringStatusesArgs = {
  objects: Array<VariableMonitoringStatuses_Insert_Input>;
  on_conflict?: InputMaybe<VariableMonitoringStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitoringStatuses_OneArgs = {
  object: VariableMonitoringStatuses_Insert_Input;
  on_conflict?: InputMaybe<VariableMonitoringStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitoringsArgs = {
  objects: Array<VariableMonitorings_Insert_Input>;
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitorings_OneArgs = {
  object: VariableMonitorings_Insert_Input;
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableStatusesArgs = {
  objects: Array<VariableStatuses_Insert_Input>;
  on_conflict?: InputMaybe<VariableStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableStatuses_OneArgs = {
  object: VariableStatuses_Insert_Input;
  on_conflict?: InputMaybe<VariableStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariablesArgs = {
  objects: Array<Variables_Insert_Input>;
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Variables_OneArgs = {
  object: Variables_Insert_Input;
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootUpdate_AsyncJobStatusesArgs = {
  _inc?: InputMaybe<AsyncJobStatuses_Inc_Input>;
  _set?: InputMaybe<AsyncJobStatuses_Set_Input>;
  where: AsyncJobStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_AsyncJobStatuses_By_PkArgs = {
  _inc?: InputMaybe<AsyncJobStatuses_Inc_Input>;
  _set?: InputMaybe<AsyncJobStatuses_Set_Input>;
  pk_columns: AsyncJobStatuses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_AsyncJobStatuses_ManyArgs = {
  updates: Array<AsyncJobStatuses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_AuthorizationsArgs = {
  _append?: InputMaybe<Authorizations_Append_Input>;
  _delete_at_path?: InputMaybe<Authorizations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Authorizations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Authorizations_Delete_Key_Input>;
  _inc?: InputMaybe<Authorizations_Inc_Input>;
  _prepend?: InputMaybe<Authorizations_Prepend_Input>;
  _set?: InputMaybe<Authorizations_Set_Input>;
  where: Authorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Authorizations_By_PkArgs = {
  _append?: InputMaybe<Authorizations_Append_Input>;
  _delete_at_path?: InputMaybe<Authorizations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Authorizations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Authorizations_Delete_Key_Input>;
  _inc?: InputMaybe<Authorizations_Inc_Input>;
  _prepend?: InputMaybe<Authorizations_Prepend_Input>;
  _set?: InputMaybe<Authorizations_Set_Input>;
  pk_columns: Authorizations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Authorizations_ManyArgs = {
  updates: Array<Authorizations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_BootsArgs = {
  _inc?: InputMaybe<Boots_Inc_Input>;
  _set?: InputMaybe<Boots_Set_Input>;
  where: Boots_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Boots_By_PkArgs = {
  _inc?: InputMaybe<Boots_Inc_Input>;
  _set?: InputMaybe<Boots_Set_Input>;
  pk_columns: Boots_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Boots_ManyArgs = {
  updates: Array<Boots_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CertificatesArgs = {
  _inc?: InputMaybe<Certificates_Inc_Input>;
  _set?: InputMaybe<Certificates_Set_Input>;
  where: Certificates_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Certificates_By_PkArgs = {
  _inc?: InputMaybe<Certificates_Inc_Input>;
  _set?: InputMaybe<Certificates_Set_Input>;
  pk_columns: Certificates_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Certificates_ManyArgs = {
  updates: Array<Certificates_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChangeConfigurationsArgs = {
  _inc?: InputMaybe<ChangeConfigurations_Inc_Input>;
  _set?: InputMaybe<ChangeConfigurations_Set_Input>;
  where: ChangeConfigurations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChangeConfigurations_By_PkArgs = {
  _inc?: InputMaybe<ChangeConfigurations_Inc_Input>;
  _set?: InputMaybe<ChangeConfigurations_Set_Input>;
  pk_columns: ChangeConfigurations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChangeConfigurations_ManyArgs = {
  updates: Array<ChangeConfigurations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingNeedsArgs = {
  _append?: InputMaybe<ChargingNeeds_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingNeeds_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingNeeds_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingNeeds_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingNeeds_Inc_Input>;
  _prepend?: InputMaybe<ChargingNeeds_Prepend_Input>;
  _set?: InputMaybe<ChargingNeeds_Set_Input>;
  where: ChargingNeeds_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingNeeds_By_PkArgs = {
  _append?: InputMaybe<ChargingNeeds_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingNeeds_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingNeeds_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingNeeds_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingNeeds_Inc_Input>;
  _prepend?: InputMaybe<ChargingNeeds_Prepend_Input>;
  _set?: InputMaybe<ChargingNeeds_Set_Input>;
  pk_columns: ChargingNeeds_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingNeeds_ManyArgs = {
  updates: Array<ChargingNeeds_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingProfilesArgs = {
  _inc?: InputMaybe<ChargingProfiles_Inc_Input>;
  _set?: InputMaybe<ChargingProfiles_Set_Input>;
  where: ChargingProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingProfiles_By_PkArgs = {
  _inc?: InputMaybe<ChargingProfiles_Inc_Input>;
  _set?: InputMaybe<ChargingProfiles_Set_Input>;
  pk_columns: ChargingProfiles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingProfiles_ManyArgs = {
  updates: Array<ChargingProfiles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingSchedulesArgs = {
  _append?: InputMaybe<ChargingSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingSchedules_Inc_Input>;
  _prepend?: InputMaybe<ChargingSchedules_Prepend_Input>;
  _set?: InputMaybe<ChargingSchedules_Set_Input>;
  where: ChargingSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingSchedules_By_PkArgs = {
  _append?: InputMaybe<ChargingSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingSchedules_Inc_Input>;
  _prepend?: InputMaybe<ChargingSchedules_Prepend_Input>;
  _set?: InputMaybe<ChargingSchedules_Set_Input>;
  pk_columns: ChargingSchedules_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingSchedules_ManyArgs = {
  updates: Array<ChargingSchedules_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationNetworkProfilesArgs = {
  _inc?: InputMaybe<ChargingStationNetworkProfiles_Inc_Input>;
  _set?: InputMaybe<ChargingStationNetworkProfiles_Set_Input>;
  where: ChargingStationNetworkProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationNetworkProfiles_By_PkArgs = {
  _inc?: InputMaybe<ChargingStationNetworkProfiles_Inc_Input>;
  _set?: InputMaybe<ChargingStationNetworkProfiles_Set_Input>;
  pk_columns: ChargingStationNetworkProfiles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationNetworkProfiles_ManyArgs = {
  updates: Array<ChargingStationNetworkProfiles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSecurityInfosArgs = {
  _inc?: InputMaybe<ChargingStationSecurityInfos_Inc_Input>;
  _set?: InputMaybe<ChargingStationSecurityInfos_Set_Input>;
  where: ChargingStationSecurityInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSecurityInfos_By_PkArgs = {
  _inc?: InputMaybe<ChargingStationSecurityInfos_Inc_Input>;
  _set?: InputMaybe<ChargingStationSecurityInfos_Set_Input>;
  pk_columns: ChargingStationSecurityInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSecurityInfos_ManyArgs = {
  updates: Array<ChargingStationSecurityInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSequencesArgs = {
  _inc?: InputMaybe<ChargingStationSequences_Inc_Input>;
  _set?: InputMaybe<ChargingStationSequences_Set_Input>;
  where: ChargingStationSequences_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSequences_By_PkArgs = {
  _inc?: InputMaybe<ChargingStationSequences_Inc_Input>;
  _set?: InputMaybe<ChargingStationSequences_Set_Input>;
  pk_columns: ChargingStationSequences_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSequences_ManyArgs = {
  updates: Array<ChargingStationSequences_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationsArgs = {
  _append?: InputMaybe<ChargingStations_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingStations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingStations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingStations_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingStations_Inc_Input>;
  _prepend?: InputMaybe<ChargingStations_Prepend_Input>;
  _set?: InputMaybe<ChargingStations_Set_Input>;
  where: ChargingStations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStations_By_PkArgs = {
  _append?: InputMaybe<ChargingStations_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingStations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingStations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingStations_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingStations_Inc_Input>;
  _prepend?: InputMaybe<ChargingStations_Prepend_Input>;
  _set?: InputMaybe<ChargingStations_Set_Input>;
  pk_columns: ChargingStations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStations_ManyArgs = {
  updates: Array<ChargingStations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentVariablesArgs = {
  _inc?: InputMaybe<ComponentVariables_Inc_Input>;
  _set?: InputMaybe<ComponentVariables_Set_Input>;
  where: ComponentVariables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentVariables_By_PkArgs = {
  _inc?: InputMaybe<ComponentVariables_Inc_Input>;
  _set?: InputMaybe<ComponentVariables_Set_Input>;
  pk_columns: ComponentVariables_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentVariables_ManyArgs = {
  updates: Array<ComponentVariables_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentsArgs = {
  _inc?: InputMaybe<Components_Inc_Input>;
  _set?: InputMaybe<Components_Set_Input>;
  where: Components_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Components_By_PkArgs = {
  _inc?: InputMaybe<Components_Inc_Input>;
  _set?: InputMaybe<Components_Set_Input>;
  pk_columns: Components_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Components_ManyArgs = {
  updates: Array<Components_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CompositeSchedulesArgs = {
  _append?: InputMaybe<CompositeSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<CompositeSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<CompositeSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<CompositeSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<CompositeSchedules_Inc_Input>;
  _prepend?: InputMaybe<CompositeSchedules_Prepend_Input>;
  _set?: InputMaybe<CompositeSchedules_Set_Input>;
  where: CompositeSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_CompositeSchedules_By_PkArgs = {
  _append?: InputMaybe<CompositeSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<CompositeSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<CompositeSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<CompositeSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<CompositeSchedules_Inc_Input>;
  _prepend?: InputMaybe<CompositeSchedules_Prepend_Input>;
  _set?: InputMaybe<CompositeSchedules_Set_Input>;
  pk_columns: CompositeSchedules_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_CompositeSchedules_ManyArgs = {
  updates: Array<CompositeSchedules_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ConnectorsArgs = {
  _inc?: InputMaybe<Connectors_Inc_Input>;
  _set?: InputMaybe<Connectors_Set_Input>;
  where: Connectors_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Connectors_By_PkArgs = {
  _inc?: InputMaybe<Connectors_Inc_Input>;
  _set?: InputMaybe<Connectors_Set_Input>;
  pk_columns: Connectors_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Connectors_ManyArgs = {
  updates: Array<Connectors_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EventDataArgs = {
  _inc?: InputMaybe<EventData_Inc_Input>;
  _set?: InputMaybe<EventData_Set_Input>;
  where: EventData_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_EventData_By_PkArgs = {
  _inc?: InputMaybe<EventData_Inc_Input>;
  _set?: InputMaybe<EventData_Set_Input>;
  pk_columns: EventData_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_EventData_ManyArgs = {
  updates: Array<EventData_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EvseTypesArgs = {
  _inc?: InputMaybe<EvseTypes_Inc_Input>;
  _set?: InputMaybe<EvseTypes_Set_Input>;
  where: EvseTypes_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_EvseTypes_By_PkArgs = {
  _inc?: InputMaybe<EvseTypes_Inc_Input>;
  _set?: InputMaybe<EvseTypes_Set_Input>;
  pk_columns: EvseTypes_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_EvseTypes_ManyArgs = {
  updates: Array<EvseTypes_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EvsesArgs = {
  _inc?: InputMaybe<Evses_Inc_Input>;
  _set?: InputMaybe<Evses_Set_Input>;
  where: Evses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Evses_By_PkArgs = {
  _inc?: InputMaybe<Evses_Inc_Input>;
  _set?: InputMaybe<Evses_Set_Input>;
  pk_columns: Evses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Evses_ManyArgs = {
  updates: Array<Evses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_InstalledCertificatesArgs = {
  _inc?: InputMaybe<InstalledCertificates_Inc_Input>;
  _set?: InputMaybe<InstalledCertificates_Set_Input>;
  where: InstalledCertificates_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_InstalledCertificates_By_PkArgs = {
  _inc?: InputMaybe<InstalledCertificates_Inc_Input>;
  _set?: InputMaybe<InstalledCertificates_Set_Input>;
  pk_columns: InstalledCertificates_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_InstalledCertificates_ManyArgs = {
  updates: Array<InstalledCertificates_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_LatestStatusNotificationsArgs = {
  _inc?: InputMaybe<LatestStatusNotifications_Inc_Input>;
  _set?: InputMaybe<LatestStatusNotifications_Set_Input>;
  where: LatestStatusNotifications_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_LatestStatusNotifications_By_PkArgs = {
  _inc?: InputMaybe<LatestStatusNotifications_Inc_Input>;
  _set?: InputMaybe<LatestStatusNotifications_Set_Input>;
  pk_columns: LatestStatusNotifications_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_LatestStatusNotifications_ManyArgs = {
  updates: Array<LatestStatusNotifications_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListAuthorizationsArgs = {
  _append?: InputMaybe<LocalListAuthorizations_Append_Input>;
  _delete_at_path?: InputMaybe<LocalListAuthorizations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<LocalListAuthorizations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<LocalListAuthorizations_Delete_Key_Input>;
  _inc?: InputMaybe<LocalListAuthorizations_Inc_Input>;
  _prepend?: InputMaybe<LocalListAuthorizations_Prepend_Input>;
  _set?: InputMaybe<LocalListAuthorizations_Set_Input>;
  where: LocalListAuthorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListAuthorizations_By_PkArgs = {
  _append?: InputMaybe<LocalListAuthorizations_Append_Input>;
  _delete_at_path?: InputMaybe<LocalListAuthorizations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<LocalListAuthorizations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<LocalListAuthorizations_Delete_Key_Input>;
  _inc?: InputMaybe<LocalListAuthorizations_Inc_Input>;
  _prepend?: InputMaybe<LocalListAuthorizations_Prepend_Input>;
  _set?: InputMaybe<LocalListAuthorizations_Set_Input>;
  pk_columns: LocalListAuthorizations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListAuthorizations_ManyArgs = {
  updates: Array<LocalListAuthorizations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListVersionAuthorizationsArgs = {
  _inc?: InputMaybe<LocalListVersionAuthorizations_Inc_Input>;
  _set?: InputMaybe<LocalListVersionAuthorizations_Set_Input>;
  where: LocalListVersionAuthorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListVersionAuthorizations_By_PkArgs = {
  _inc?: InputMaybe<LocalListVersionAuthorizations_Inc_Input>;
  _set?: InputMaybe<LocalListVersionAuthorizations_Set_Input>;
  pk_columns: LocalListVersionAuthorizations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListVersionAuthorizations_ManyArgs = {
  updates: Array<LocalListVersionAuthorizations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListVersionsArgs = {
  _inc?: InputMaybe<LocalListVersions_Inc_Input>;
  _set?: InputMaybe<LocalListVersions_Set_Input>;
  where: LocalListVersions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListVersions_By_PkArgs = {
  _inc?: InputMaybe<LocalListVersions_Inc_Input>;
  _set?: InputMaybe<LocalListVersions_Set_Input>;
  pk_columns: LocalListVersions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_LocalListVersions_ManyArgs = {
  updates: Array<LocalListVersions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_LocationsArgs = {
  _append?: InputMaybe<Locations_Append_Input>;
  _delete_at_path?: InputMaybe<Locations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Locations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Locations_Delete_Key_Input>;
  _inc?: InputMaybe<Locations_Inc_Input>;
  _prepend?: InputMaybe<Locations_Prepend_Input>;
  _set?: InputMaybe<Locations_Set_Input>;
  where: Locations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Locations_By_PkArgs = {
  _append?: InputMaybe<Locations_Append_Input>;
  _delete_at_path?: InputMaybe<Locations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Locations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Locations_Delete_Key_Input>;
  _inc?: InputMaybe<Locations_Inc_Input>;
  _prepend?: InputMaybe<Locations_Prepend_Input>;
  _set?: InputMaybe<Locations_Set_Input>;
  pk_columns: Locations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Locations_ManyArgs = {
  updates: Array<Locations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_MessageInfosArgs = {
  _inc?: InputMaybe<MessageInfos_Inc_Input>;
  _set?: InputMaybe<MessageInfos_Set_Input>;
  where: MessageInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_MessageInfos_By_PkArgs = {
  _inc?: InputMaybe<MessageInfos_Inc_Input>;
  _set?: InputMaybe<MessageInfos_Set_Input>;
  pk_columns: MessageInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_MessageInfos_ManyArgs = {
  updates: Array<MessageInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_MeterValuesArgs = {
  _append?: InputMaybe<MeterValues_Append_Input>;
  _delete_at_path?: InputMaybe<MeterValues_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<MeterValues_Delete_Elem_Input>;
  _delete_key?: InputMaybe<MeterValues_Delete_Key_Input>;
  _inc?: InputMaybe<MeterValues_Inc_Input>;
  _prepend?: InputMaybe<MeterValues_Prepend_Input>;
  _set?: InputMaybe<MeterValues_Set_Input>;
  where: MeterValues_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_MeterValues_By_PkArgs = {
  _append?: InputMaybe<MeterValues_Append_Input>;
  _delete_at_path?: InputMaybe<MeterValues_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<MeterValues_Delete_Elem_Input>;
  _delete_key?: InputMaybe<MeterValues_Delete_Key_Input>;
  _inc?: InputMaybe<MeterValues_Inc_Input>;
  _prepend?: InputMaybe<MeterValues_Prepend_Input>;
  _set?: InputMaybe<MeterValues_Set_Input>;
  pk_columns: MeterValues_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_MeterValues_ManyArgs = {
  updates: Array<MeterValues_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcppMessagesArgs = {
  _append?: InputMaybe<OcppMessages_Append_Input>;
  _delete_at_path?: InputMaybe<OcppMessages_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<OcppMessages_Delete_Elem_Input>;
  _delete_key?: InputMaybe<OcppMessages_Delete_Key_Input>;
  _inc?: InputMaybe<OcppMessages_Inc_Input>;
  _prepend?: InputMaybe<OcppMessages_Prepend_Input>;
  _set?: InputMaybe<OcppMessages_Set_Input>;
  where: OcppMessages_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcppMessages_By_PkArgs = {
  _append?: InputMaybe<OcppMessages_Append_Input>;
  _delete_at_path?: InputMaybe<OcppMessages_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<OcppMessages_Delete_Elem_Input>;
  _delete_key?: InputMaybe<OcppMessages_Delete_Key_Input>;
  _inc?: InputMaybe<OcppMessages_Inc_Input>;
  _prepend?: InputMaybe<OcppMessages_Prepend_Input>;
  _set?: InputMaybe<OcppMessages_Set_Input>;
  pk_columns: OcppMessages_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcppMessages_ManyArgs = {
  updates: Array<OcppMessages_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ReservationsArgs = {
  _append?: InputMaybe<Reservations_Append_Input>;
  _delete_at_path?: InputMaybe<Reservations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reservations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reservations_Delete_Key_Input>;
  _inc?: InputMaybe<Reservations_Inc_Input>;
  _prepend?: InputMaybe<Reservations_Prepend_Input>;
  _set?: InputMaybe<Reservations_Set_Input>;
  where: Reservations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Reservations_By_PkArgs = {
  _append?: InputMaybe<Reservations_Append_Input>;
  _delete_at_path?: InputMaybe<Reservations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reservations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reservations_Delete_Key_Input>;
  _inc?: InputMaybe<Reservations_Inc_Input>;
  _prepend?: InputMaybe<Reservations_Prepend_Input>;
  _set?: InputMaybe<Reservations_Set_Input>;
  pk_columns: Reservations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Reservations_ManyArgs = {
  updates: Array<Reservations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SalesTariffsArgs = {
  _append?: InputMaybe<SalesTariffs_Append_Input>;
  _delete_at_path?: InputMaybe<SalesTariffs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<SalesTariffs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<SalesTariffs_Delete_Key_Input>;
  _inc?: InputMaybe<SalesTariffs_Inc_Input>;
  _prepend?: InputMaybe<SalesTariffs_Prepend_Input>;
  _set?: InputMaybe<SalesTariffs_Set_Input>;
  where: SalesTariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SalesTariffs_By_PkArgs = {
  _append?: InputMaybe<SalesTariffs_Append_Input>;
  _delete_at_path?: InputMaybe<SalesTariffs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<SalesTariffs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<SalesTariffs_Delete_Key_Input>;
  _inc?: InputMaybe<SalesTariffs_Inc_Input>;
  _prepend?: InputMaybe<SalesTariffs_Prepend_Input>;
  _set?: InputMaybe<SalesTariffs_Set_Input>;
  pk_columns: SalesTariffs_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SalesTariffs_ManyArgs = {
  updates: Array<SalesTariffs_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SecurityEventsArgs = {
  _inc?: InputMaybe<SecurityEvents_Inc_Input>;
  _set?: InputMaybe<SecurityEvents_Set_Input>;
  where: SecurityEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SecurityEvents_By_PkArgs = {
  _inc?: InputMaybe<SecurityEvents_Inc_Input>;
  _set?: InputMaybe<SecurityEvents_Set_Input>;
  pk_columns: SecurityEvents_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SecurityEvents_ManyArgs = {
  updates: Array<SecurityEvents_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SendLocalListAuthorizationsArgs = {
  _inc?: InputMaybe<SendLocalListAuthorizations_Inc_Input>;
  _set?: InputMaybe<SendLocalListAuthorizations_Set_Input>;
  where: SendLocalListAuthorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SendLocalListAuthorizations_By_PkArgs = {
  _inc?: InputMaybe<SendLocalListAuthorizations_Inc_Input>;
  _set?: InputMaybe<SendLocalListAuthorizations_Set_Input>;
  pk_columns: SendLocalListAuthorizations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SendLocalListAuthorizations_ManyArgs = {
  updates: Array<SendLocalListAuthorizations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SendLocalListsArgs = {
  _inc?: InputMaybe<SendLocalLists_Inc_Input>;
  _set?: InputMaybe<SendLocalLists_Set_Input>;
  where: SendLocalLists_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SendLocalLists_By_PkArgs = {
  _inc?: InputMaybe<SendLocalLists_Inc_Input>;
  _set?: InputMaybe<SendLocalLists_Set_Input>;
  pk_columns: SendLocalLists_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SendLocalLists_ManyArgs = {
  updates: Array<SendLocalLists_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ServerNetworkProfilesArgs = {
  _inc?: InputMaybe<ServerNetworkProfiles_Inc_Input>;
  _set?: InputMaybe<ServerNetworkProfiles_Set_Input>;
  where: ServerNetworkProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ServerNetworkProfiles_By_PkArgs = {
  _inc?: InputMaybe<ServerNetworkProfiles_Inc_Input>;
  _set?: InputMaybe<ServerNetworkProfiles_Set_Input>;
  pk_columns: ServerNetworkProfiles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ServerNetworkProfiles_ManyArgs = {
  updates: Array<ServerNetworkProfiles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SetNetworkProfilesArgs = {
  _inc?: InputMaybe<SetNetworkProfiles_Inc_Input>;
  _set?: InputMaybe<SetNetworkProfiles_Set_Input>;
  where: SetNetworkProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SetNetworkProfiles_By_PkArgs = {
  _inc?: InputMaybe<SetNetworkProfiles_Inc_Input>;
  _set?: InputMaybe<SetNetworkProfiles_Set_Input>;
  pk_columns: SetNetworkProfiles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SetNetworkProfiles_ManyArgs = {
  updates: Array<SetNetworkProfiles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_StartTransactionsArgs = {
  _inc?: InputMaybe<StartTransactions_Inc_Input>;
  _set?: InputMaybe<StartTransactions_Set_Input>;
  where: StartTransactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_StartTransactions_By_PkArgs = {
  _inc?: InputMaybe<StartTransactions_Inc_Input>;
  _set?: InputMaybe<StartTransactions_Set_Input>;
  pk_columns: StartTransactions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_StartTransactions_ManyArgs = {
  updates: Array<StartTransactions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_StatusNotificationsArgs = {
  _inc?: InputMaybe<StatusNotifications_Inc_Input>;
  _set?: InputMaybe<StatusNotifications_Set_Input>;
  where: StatusNotifications_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_StatusNotifications_By_PkArgs = {
  _inc?: InputMaybe<StatusNotifications_Inc_Input>;
  _set?: InputMaybe<StatusNotifications_Set_Input>;
  pk_columns: StatusNotifications_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_StatusNotifications_ManyArgs = {
  updates: Array<StatusNotifications_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_StopTransactionsArgs = {
  _inc?: InputMaybe<StopTransactions_Inc_Input>;
  _set?: InputMaybe<StopTransactions_Set_Input>;
  where: StopTransactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_StopTransactions_By_PkArgs = {
  _inc?: InputMaybe<StopTransactions_Inc_Input>;
  _set?: InputMaybe<StopTransactions_Set_Input>;
  pk_columns: StopTransactions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_StopTransactions_ManyArgs = {
  updates: Array<StopTransactions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SubscriptionsArgs = {
  _inc?: InputMaybe<Subscriptions_Inc_Input>;
  _set?: InputMaybe<Subscriptions_Set_Input>;
  where: Subscriptions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Subscriptions_By_PkArgs = {
  _inc?: InputMaybe<Subscriptions_Inc_Input>;
  _set?: InputMaybe<Subscriptions_Set_Input>;
  pk_columns: Subscriptions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Subscriptions_ManyArgs = {
  updates: Array<Subscriptions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TariffsArgs = {
  _inc?: InputMaybe<Tariffs_Inc_Input>;
  _set?: InputMaybe<Tariffs_Set_Input>;
  where: Tariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Tariffs_By_PkArgs = {
  _inc?: InputMaybe<Tariffs_Inc_Input>;
  _set?: InputMaybe<Tariffs_Set_Input>;
  pk_columns: Tariffs_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Tariffs_ManyArgs = {
  updates: Array<Tariffs_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TenantPartnersArgs = {
  _append?: InputMaybe<TenantPartners_Append_Input>;
  _delete_at_path?: InputMaybe<TenantPartners_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<TenantPartners_Delete_Elem_Input>;
  _delete_key?: InputMaybe<TenantPartners_Delete_Key_Input>;
  _inc?: InputMaybe<TenantPartners_Inc_Input>;
  _prepend?: InputMaybe<TenantPartners_Prepend_Input>;
  _set?: InputMaybe<TenantPartners_Set_Input>;
  where: TenantPartners_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_TenantPartners_By_PkArgs = {
  _append?: InputMaybe<TenantPartners_Append_Input>;
  _delete_at_path?: InputMaybe<TenantPartners_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<TenantPartners_Delete_Elem_Input>;
  _delete_key?: InputMaybe<TenantPartners_Delete_Key_Input>;
  _inc?: InputMaybe<TenantPartners_Inc_Input>;
  _prepend?: InputMaybe<TenantPartners_Prepend_Input>;
  _set?: InputMaybe<TenantPartners_Set_Input>;
  pk_columns: TenantPartners_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_TenantPartners_ManyArgs = {
  updates: Array<TenantPartners_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TenantsArgs = {
  _append?: InputMaybe<Tenants_Append_Input>;
  _delete_at_path?: InputMaybe<Tenants_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Tenants_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Tenants_Delete_Key_Input>;
  _inc?: InputMaybe<Tenants_Inc_Input>;
  _prepend?: InputMaybe<Tenants_Prepend_Input>;
  _set?: InputMaybe<Tenants_Set_Input>;
  where: Tenants_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Tenants_By_PkArgs = {
  _append?: InputMaybe<Tenants_Append_Input>;
  _delete_at_path?: InputMaybe<Tenants_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Tenants_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Tenants_Delete_Key_Input>;
  _inc?: InputMaybe<Tenants_Inc_Input>;
  _prepend?: InputMaybe<Tenants_Prepend_Input>;
  _set?: InputMaybe<Tenants_Set_Input>;
  pk_columns: Tenants_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Tenants_ManyArgs = {
  updates: Array<Tenants_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionEventsArgs = {
  _inc?: InputMaybe<TransactionEvents_Inc_Input>;
  _set?: InputMaybe<TransactionEvents_Set_Input>;
  where: TransactionEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionEvents_By_PkArgs = {
  _inc?: InputMaybe<TransactionEvents_Inc_Input>;
  _set?: InputMaybe<TransactionEvents_Set_Input>;
  pk_columns: TransactionEvents_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionEvents_ManyArgs = {
  updates: Array<TransactionEvents_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionsArgs = {
  _append?: InputMaybe<Transactions_Append_Input>;
  _delete_at_path?: InputMaybe<Transactions_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Transactions_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Transactions_Delete_Key_Input>;
  _inc?: InputMaybe<Transactions_Inc_Input>;
  _prepend?: InputMaybe<Transactions_Prepend_Input>;
  _set?: InputMaybe<Transactions_Set_Input>;
  where: Transactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Transactions_By_PkArgs = {
  _append?: InputMaybe<Transactions_Append_Input>;
  _delete_at_path?: InputMaybe<Transactions_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Transactions_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Transactions_Delete_Key_Input>;
  _inc?: InputMaybe<Transactions_Inc_Input>;
  _prepend?: InputMaybe<Transactions_Prepend_Input>;
  _set?: InputMaybe<Transactions_Set_Input>;
  pk_columns: Transactions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Transactions_ManyArgs = {
  updates: Array<Transactions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableAttributesArgs = {
  _inc?: InputMaybe<VariableAttributes_Inc_Input>;
  _set?: InputMaybe<VariableAttributes_Set_Input>;
  where: VariableAttributes_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableAttributes_By_PkArgs = {
  _inc?: InputMaybe<VariableAttributes_Inc_Input>;
  _set?: InputMaybe<VariableAttributes_Set_Input>;
  pk_columns: VariableAttributes_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableAttributes_ManyArgs = {
  updates: Array<VariableAttributes_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableCharacteristicsArgs = {
  _inc?: InputMaybe<VariableCharacteristics_Inc_Input>;
  _set?: InputMaybe<VariableCharacteristics_Set_Input>;
  where: VariableCharacteristics_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableCharacteristics_By_PkArgs = {
  _inc?: InputMaybe<VariableCharacteristics_Inc_Input>;
  _set?: InputMaybe<VariableCharacteristics_Set_Input>;
  pk_columns: VariableCharacteristics_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableCharacteristics_ManyArgs = {
  updates: Array<VariableCharacteristics_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringStatusesArgs = {
  _inc?: InputMaybe<VariableMonitoringStatuses_Inc_Input>;
  _set?: InputMaybe<VariableMonitoringStatuses_Set_Input>;
  where: VariableMonitoringStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringStatuses_By_PkArgs = {
  _inc?: InputMaybe<VariableMonitoringStatuses_Inc_Input>;
  _set?: InputMaybe<VariableMonitoringStatuses_Set_Input>;
  pk_columns: VariableMonitoringStatuses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringStatuses_ManyArgs = {
  updates: Array<VariableMonitoringStatuses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringsArgs = {
  _inc?: InputMaybe<VariableMonitorings_Inc_Input>;
  _set?: InputMaybe<VariableMonitorings_Set_Input>;
  where: VariableMonitorings_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitorings_By_PkArgs = {
  _inc?: InputMaybe<VariableMonitorings_Inc_Input>;
  _set?: InputMaybe<VariableMonitorings_Set_Input>;
  pk_columns: VariableMonitorings_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitorings_ManyArgs = {
  updates: Array<VariableMonitorings_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableStatusesArgs = {
  _inc?: InputMaybe<VariableStatuses_Inc_Input>;
  _set?: InputMaybe<VariableStatuses_Set_Input>;
  where: VariableStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableStatuses_By_PkArgs = {
  _inc?: InputMaybe<VariableStatuses_Inc_Input>;
  _set?: InputMaybe<VariableStatuses_Set_Input>;
  pk_columns: VariableStatuses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableStatuses_ManyArgs = {
  updates: Array<VariableStatuses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariablesArgs = {
  _inc?: InputMaybe<Variables_Inc_Input>;
  _set?: InputMaybe<Variables_Set_Input>;
  where: Variables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Variables_By_PkArgs = {
  _inc?: InputMaybe<Variables_Inc_Input>;
  _set?: InputMaybe<Variables_Set_Input>;
  pk_columns: Variables_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Variables_ManyArgs = {
  updates: Array<Variables_Updates>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']['input']>;
  _gt?: InputMaybe<Scalars['numeric']['input']>;
  _gte?: InputMaybe<Scalars['numeric']['input']>;
  _in?: InputMaybe<Array<Scalars['numeric']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['numeric']['input']>;
  _lte?: InputMaybe<Scalars['numeric']['input']>;
  _neq?: InputMaybe<Scalars['numeric']['input']>;
  _nin?: InputMaybe<Array<Scalars['numeric']['input']>>;
};

/** column ordering options */
export type Order_By =
  /** in ascending order, nulls last */
  | 'asc'
  /** in ascending order, nulls first */
  | 'asc_nulls_first'
  /** in ascending order, nulls last */
  | 'asc_nulls_last'
  /** in descending order, nulls first */
  | 'desc'
  /** in descending order, nulls first */
  | 'desc_nulls_first'
  /** in descending order, nulls last */
  | 'desc_nulls_last';

export type Query_Root = {
  /** An array relationship */
  AsyncJobStatuses: Array<AsyncJobStatuses>;
  /** An aggregate relationship */
  AsyncJobStatuses_aggregate: AsyncJobStatuses_Aggregate;
  /** fetch data from the table: "AsyncJobStatuses" using primary key columns */
  AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** fetch data from the table: "Authorizations" using primary key columns */
  Authorizations_by_pk?: Maybe<Authorizations>;
  /** An array relationship */
  Boots: Array<Boots>;
  /** An aggregate relationship */
  Boots_aggregate: Boots_Aggregate;
  /** fetch data from the table: "Boots" using primary key columns */
  Boots_by_pk?: Maybe<Boots>;
  /** An array relationship */
  Certificates: Array<Certificates>;
  /** An aggregate relationship */
  Certificates_aggregate: Certificates_Aggregate;
  /** fetch data from the table: "Certificates" using primary key columns */
  Certificates_by_pk?: Maybe<Certificates>;
  /** An array relationship */
  ChangeConfigurations: Array<ChangeConfigurations>;
  /** An aggregate relationship */
  ChangeConfigurations_aggregate: ChangeConfigurations_Aggregate;
  /** fetch data from the table: "ChangeConfigurations" using primary key columns */
  ChangeConfigurations_by_pk?: Maybe<ChangeConfigurations>;
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** fetch data from the table: "ChargingNeeds" using primary key columns */
  ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** fetch data from the table: "ChargingProfiles" using primary key columns */
  ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** fetch data from the table: "ChargingSchedules" using primary key columns */
  ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** An array relationship */
  ChargingStationNetworkProfiles: Array<ChargingStationNetworkProfiles>;
  /** An aggregate relationship */
  ChargingStationNetworkProfiles_aggregate: ChargingStationNetworkProfiles_Aggregate;
  /** fetch data from the table: "ChargingStationNetworkProfiles" using primary key columns */
  ChargingStationNetworkProfiles_by_pk?: Maybe<ChargingStationNetworkProfiles>;
  /** An array relationship */
  ChargingStationSecurityInfos: Array<ChargingStationSecurityInfos>;
  /** An aggregate relationship */
  ChargingStationSecurityInfos_aggregate: ChargingStationSecurityInfos_Aggregate;
  /** fetch data from the table: "ChargingStationSecurityInfos" using primary key columns */
  ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** An array relationship */
  ChargingStationSequences: Array<ChargingStationSequences>;
  /** An aggregate relationship */
  ChargingStationSequences_aggregate: ChargingStationSequences_Aggregate;
  /** fetch data from the table: "ChargingStationSequences" using primary key columns */
  ChargingStationSequences_by_pk?: Maybe<ChargingStationSequences>;
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** fetch data from the table: "ChargingStations" using primary key columns */
  ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** fetch data from the table: "ComponentVariables" using primary key columns */
  ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** fetch data from the table: "Components" using primary key columns */
  Components_by_pk?: Maybe<Components>;
  /** An array relationship */
  CompositeSchedules: Array<CompositeSchedules>;
  /** An aggregate relationship */
  CompositeSchedules_aggregate: CompositeSchedules_Aggregate;
  /** fetch data from the table: "CompositeSchedules" using primary key columns */
  CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** An array relationship */
  Connectors: Array<Connectors>;
  /** An aggregate relationship */
  Connectors_aggregate: Connectors_Aggregate;
  /** fetch data from the table: "Connectors" using primary key columns */
  Connectors_by_pk?: Maybe<Connectors>;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** fetch data from the table: "EventData" using primary key columns */
  EventData_by_pk?: Maybe<EventData>;
  /** An array relationship */
  EvseTypes: Array<EvseTypes>;
  /** An aggregate relationship */
  EvseTypes_aggregate: EvseTypes_Aggregate;
  /** fetch data from the table: "EvseTypes" using primary key columns */
  EvseTypes_by_pk?: Maybe<EvseTypes>;
  /** An array relationship */
  Evses: Array<Evses>;
  /** An aggregate relationship */
  Evses_aggregate: Evses_Aggregate;
  /** fetch data from the table: "Evses" using primary key columns */
  Evses_by_pk?: Maybe<Evses>;
  /** An array relationship */
  InstalledCertificates: Array<InstalledCertificates>;
  /** An aggregate relationship */
  InstalledCertificates_aggregate: InstalledCertificates_Aggregate;
  /** fetch data from the table: "InstalledCertificates" using primary key columns */
  InstalledCertificates_by_pk?: Maybe<InstalledCertificates>;
  /** An array relationship */
  LatestStatusNotifications: Array<LatestStatusNotifications>;
  /** An aggregate relationship */
  LatestStatusNotifications_aggregate: LatestStatusNotifications_Aggregate;
  /** fetch data from the table: "LatestStatusNotifications" using primary key columns */
  LatestStatusNotifications_by_pk?: Maybe<LatestStatusNotifications>;
  /** An array relationship */
  LocalListAuthorizations: Array<LocalListAuthorizations>;
  /** An aggregate relationship */
  LocalListAuthorizations_aggregate: LocalListAuthorizations_Aggregate;
  /** fetch data from the table: "LocalListAuthorizations" using primary key columns */
  LocalListAuthorizations_by_pk?: Maybe<LocalListAuthorizations>;
  /** An array relationship */
  LocalListVersionAuthorizations: Array<LocalListVersionAuthorizations>;
  /** An aggregate relationship */
  LocalListVersionAuthorizations_aggregate: LocalListVersionAuthorizations_Aggregate;
  /** fetch data from the table: "LocalListVersionAuthorizations" using primary key columns */
  LocalListVersionAuthorizations_by_pk?: Maybe<LocalListVersionAuthorizations>;
  /** An array relationship */
  LocalListVersions: Array<LocalListVersions>;
  /** An aggregate relationship */
  LocalListVersions_aggregate: LocalListVersions_Aggregate;
  /** fetch data from the table: "LocalListVersions" using primary key columns */
  LocalListVersions_by_pk?: Maybe<LocalListVersions>;
  /** An array relationship */
  Locations: Array<Locations>;
  /** An aggregate relationship */
  Locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "Locations" using primary key columns */
  Locations_by_pk?: Maybe<Locations>;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** fetch data from the table: "MessageInfos" using primary key columns */
  MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** fetch data from the table: "MeterValues" using primary key columns */
  MeterValues_by_pk?: Maybe<MeterValues>;
  /** An array relationship */
  OCPPMessages: Array<OcppMessages>;
  /** An aggregate relationship */
  OCPPMessages_aggregate: OcppMessages_Aggregate;
  /** fetch data from the table: "OCPPMessages" using primary key columns */
  OCPPMessages_by_pk?: Maybe<OcppMessages>;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** fetch data from the table: "Reservations" using primary key columns */
  Reservations_by_pk?: Maybe<Reservations>;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  /** fetch data from the table: "SalesTariffs" using primary key columns */
  SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** An array relationship */
  SecurityEvents: Array<SecurityEvents>;
  /** An aggregate relationship */
  SecurityEvents_aggregate: SecurityEvents_Aggregate;
  /** fetch data from the table: "SecurityEvents" using primary key columns */
  SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** An array relationship */
  SendLocalListAuthorizations: Array<SendLocalListAuthorizations>;
  /** An aggregate relationship */
  SendLocalListAuthorizations_aggregate: SendLocalListAuthorizations_Aggregate;
  /** fetch data from the table: "SendLocalListAuthorizations" using primary key columns */
  SendLocalListAuthorizations_by_pk?: Maybe<SendLocalListAuthorizations>;
  /** An array relationship */
  SendLocalLists: Array<SendLocalLists>;
  /** An aggregate relationship */
  SendLocalLists_aggregate: SendLocalLists_Aggregate;
  /** fetch data from the table: "SendLocalLists" using primary key columns */
  SendLocalLists_by_pk?: Maybe<SendLocalLists>;
  /** An array relationship */
  ServerNetworkProfiles: Array<ServerNetworkProfiles>;
  /** An aggregate relationship */
  ServerNetworkProfiles_aggregate: ServerNetworkProfiles_Aggregate;
  /** fetch data from the table: "ServerNetworkProfiles" using primary key columns */
  ServerNetworkProfiles_by_pk?: Maybe<ServerNetworkProfiles>;
  /** An array relationship */
  SetNetworkProfiles: Array<SetNetworkProfiles>;
  /** An aggregate relationship */
  SetNetworkProfiles_aggregate: SetNetworkProfiles_Aggregate;
  /** fetch data from the table: "SetNetworkProfiles" using primary key columns */
  SetNetworkProfiles_by_pk?: Maybe<SetNetworkProfiles>;
  /** An array relationship */
  StartTransactions: Array<StartTransactions>;
  /** An aggregate relationship */
  StartTransactions_aggregate: StartTransactions_Aggregate;
  /** fetch data from the table: "StartTransactions" using primary key columns */
  StartTransactions_by_pk?: Maybe<StartTransactions>;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** fetch data from the table: "StatusNotifications" using primary key columns */
  StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** An array relationship */
  StopTransactions: Array<StopTransactions>;
  /** An aggregate relationship */
  StopTransactions_aggregate: StopTransactions_Aggregate;
  /** fetch data from the table: "StopTransactions" using primary key columns */
  StopTransactions_by_pk?: Maybe<StopTransactions>;
  /** An array relationship */
  Subscriptions: Array<Subscriptions>;
  /** An aggregate relationship */
  Subscriptions_aggregate: Subscriptions_Aggregate;
  /** fetch data from the table: "Subscriptions" using primary key columns */
  Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** An array relationship */
  Tariffs: Array<Tariffs>;
  /** An aggregate relationship */
  Tariffs_aggregate: Tariffs_Aggregate;
  /** fetch data from the table: "Tariffs" using primary key columns */
  Tariffs_by_pk?: Maybe<Tariffs>;
  /** An array relationship */
  TenantPartners: Array<TenantPartners>;
  /** An aggregate relationship */
  TenantPartners_aggregate: TenantPartners_Aggregate;
  /** fetch data from the table: "TenantPartners" using primary key columns */
  TenantPartners_by_pk?: Maybe<TenantPartners>;
  /** fetch data from the table: "Tenants" */
  Tenants: Array<Tenants>;
  /** fetch aggregated fields from the table: "Tenants" */
  Tenants_aggregate: Tenants_Aggregate;
  /** fetch data from the table: "Tenants" using primary key columns */
  Tenants_by_pk?: Maybe<Tenants>;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** fetch data from the table: "TransactionEvents" using primary key columns */
  TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** fetch data from the table: "Transactions" using primary key columns */
  Transactions_by_pk?: Maybe<Transactions>;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** fetch data from the table: "VariableAttributes" using primary key columns */
  VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** An array relationship */
  VariableCharacteristics: Array<VariableCharacteristics>;
  /** An aggregate relationship */
  VariableCharacteristics_aggregate: VariableCharacteristics_Aggregate;
  /** fetch data from the table: "VariableCharacteristics" using primary key columns */
  VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  /** fetch data from the table: "VariableMonitoringStatuses" using primary key columns */
  VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  /** fetch data from the table: "VariableMonitorings" using primary key columns */
  VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  /** fetch data from the table: "VariableStatuses" using primary key columns */
  VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** An array relationship */
  Variables: Array<Variables>;
  /** An aggregate relationship */
  Variables_aggregate: Variables_Aggregate;
  /** fetch data from the table: "Variables" using primary key columns */
  Variables_by_pk?: Maybe<Variables>;
};

export type Query_RootAsyncJobStatusesArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Query_RootAsyncJobStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Query_RootAsyncJobStatuses_By_PkArgs = {
  jobId: Scalars['String']['input'];
};

export type Query_RootAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Query_RootAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Query_RootAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootBootsArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Query_RootBoots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Query_RootBoots_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Query_RootCertificatesArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Query_RootCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Query_RootCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChangeConfigurationsArgs = {
  distinct_on?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChangeConfigurations_Order_By>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

export type Query_RootChangeConfigurations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChangeConfigurations_Order_By>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

export type Query_RootChangeConfigurations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Query_RootChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Query_RootChargingNeeds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Query_RootChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Query_RootChargingProfiles_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Query_RootChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Query_RootChargingSchedules_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootChargingStationNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

export type Query_RootChargingStationNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

export type Query_RootChargingStationNetworkProfiles_By_PkArgs = {
  setNetworkProfileId: Scalars['Int']['input'];
  stationId: Scalars['String']['input'];
};

export type Query_RootChargingStationSecurityInfosArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Query_RootChargingStationSecurityInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Query_RootChargingStationSecurityInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingStationSequencesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

export type Query_RootChargingStationSequences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

export type Query_RootChargingStationSequences_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Query_RootChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Query_RootChargingStations_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Query_RootComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Query_RootComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Query_RootComponentVariables_By_PkArgs = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

export type Query_RootComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Query_RootComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Query_RootComponents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootCompositeSchedulesArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Query_RootCompositeSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Query_RootCompositeSchedules_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

export type Query_RootConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

export type Query_RootConnectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Query_RootEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Query_RootEventData_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootEvseTypesArgs = {
  distinct_on?: InputMaybe<Array<EvseTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EvseTypes_Order_By>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

export type Query_RootEvseTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EvseTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EvseTypes_Order_By>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

export type Query_RootEvseTypes_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootEvsesArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Query_RootEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Query_RootEvses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootInstalledCertificatesArgs = {
  distinct_on?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<InstalledCertificates_Order_By>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

export type Query_RootInstalledCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<InstalledCertificates_Order_By>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

export type Query_RootInstalledCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootLatestStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

export type Query_RootLatestStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

export type Query_RootLatestStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

export type Query_RootLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

export type Query_RootLocalListAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootLocalListVersionAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

export type Query_RootLocalListVersionAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

export type Query_RootLocalListVersionAuthorizations_By_PkArgs = {
  authorizationId: Scalars['Int']['input'];
  localListVersionId: Scalars['Int']['input'];
};

export type Query_RootLocalListVersionsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersions_Order_By>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

export type Query_RootLocalListVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersions_Order_By>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

export type Query_RootLocalListVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Query_RootLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Query_RootLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Query_RootMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Query_RootMessageInfos_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Query_RootMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Query_RootMeterValues_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcppMessagesArgs = {
  distinct_on?: InputMaybe<Array<OcppMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcppMessages_Order_By>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

export type Query_RootOcppMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcppMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcppMessages_Order_By>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

export type Query_RootOcppMessages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Query_RootReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Query_RootReservations_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Query_RootSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Query_RootSalesTariffs_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootSecurityEventsArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Query_RootSecurityEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Query_RootSecurityEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootSendLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

export type Query_RootSendLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

export type Query_RootSendLocalListAuthorizations_By_PkArgs = {
  authorizationId: Scalars['Int']['input'];
  sendLocalListId: Scalars['Int']['input'];
};

export type Query_RootSendLocalListsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalLists_Order_By>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

export type Query_RootSendLocalLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalLists_Order_By>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

export type Query_RootSendLocalLists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootServerNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNetworkProfiles_Order_By>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

export type Query_RootServerNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNetworkProfiles_Order_By>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

export type Query_RootServerNetworkProfiles_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Query_RootSetNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

export type Query_RootSetNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

export type Query_RootSetNetworkProfiles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootStartTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

export type Query_RootStartTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

export type Query_RootStartTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Query_RootStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Query_RootStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootStopTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StopTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StopTransactions_Order_By>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

export type Query_RootStopTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StopTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StopTransactions_Order_By>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

export type Query_RootStopTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootSubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Query_RootSubscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Query_RootSubscriptions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTariffsArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Query_RootTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Query_RootTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTenantPartnersArgs = {
  distinct_on?: InputMaybe<Array<TenantPartners_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TenantPartners_Order_By>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

export type Query_RootTenantPartners_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TenantPartners_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TenantPartners_Order_By>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

export type Query_RootTenantPartners_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTenantsArgs = {
  distinct_on?: InputMaybe<Array<Tenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tenants_Order_By>>;
  where?: InputMaybe<Tenants_Bool_Exp>;
};

export type Query_RootTenants_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tenants_Order_By>>;
  where?: InputMaybe<Tenants_Bool_Exp>;
};

export type Query_RootTenants_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Query_RootTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Query_RootTransactionEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Query_RootTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Query_RootTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Query_RootVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Query_RootVariableAttributes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableCharacteristicsArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Query_RootVariableCharacteristics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Query_RootVariableCharacteristics_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Query_RootVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Query_RootVariableMonitoringStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Query_RootVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Query_RootVariableMonitorings_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Query_RootVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Query_RootVariableStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariablesArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Query_RootVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Query_RootVariables_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type St_D_Within_Geography_Input = {
  distance: Scalars['Float']['input'];
  from: Scalars['geography']['input'];
  use_spheroid?: InputMaybe<Scalars['Boolean']['input']>;
};

export type St_D_Within_Input = {
  distance: Scalars['Float']['input'];
  from: Scalars['geometry']['input'];
};

export type Subscription_Root = {
  /** An array relationship */
  AsyncJobStatuses: Array<AsyncJobStatuses>;
  /** An aggregate relationship */
  AsyncJobStatuses_aggregate: AsyncJobStatuses_Aggregate;
  /** fetch data from the table: "AsyncJobStatuses" using primary key columns */
  AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** fetch data from the table in a streaming manner: "AsyncJobStatuses" */
  AsyncJobStatuses_stream: Array<AsyncJobStatuses>;
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** fetch data from the table: "Authorizations" using primary key columns */
  Authorizations_by_pk?: Maybe<Authorizations>;
  /** fetch data from the table in a streaming manner: "Authorizations" */
  Authorizations_stream: Array<Authorizations>;
  /** An array relationship */
  Boots: Array<Boots>;
  /** An aggregate relationship */
  Boots_aggregate: Boots_Aggregate;
  /** fetch data from the table: "Boots" using primary key columns */
  Boots_by_pk?: Maybe<Boots>;
  /** fetch data from the table in a streaming manner: "Boots" */
  Boots_stream: Array<Boots>;
  /** An array relationship */
  Certificates: Array<Certificates>;
  /** An aggregate relationship */
  Certificates_aggregate: Certificates_Aggregate;
  /** fetch data from the table: "Certificates" using primary key columns */
  Certificates_by_pk?: Maybe<Certificates>;
  /** fetch data from the table in a streaming manner: "Certificates" */
  Certificates_stream: Array<Certificates>;
  /** An array relationship */
  ChangeConfigurations: Array<ChangeConfigurations>;
  /** An aggregate relationship */
  ChangeConfigurations_aggregate: ChangeConfigurations_Aggregate;
  /** fetch data from the table: "ChangeConfigurations" using primary key columns */
  ChangeConfigurations_by_pk?: Maybe<ChangeConfigurations>;
  /** fetch data from the table in a streaming manner: "ChangeConfigurations" */
  ChangeConfigurations_stream: Array<ChangeConfigurations>;
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** fetch data from the table: "ChargingNeeds" using primary key columns */
  ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** fetch data from the table in a streaming manner: "ChargingNeeds" */
  ChargingNeeds_stream: Array<ChargingNeeds>;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** fetch data from the table: "ChargingProfiles" using primary key columns */
  ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** fetch data from the table in a streaming manner: "ChargingProfiles" */
  ChargingProfiles_stream: Array<ChargingProfiles>;
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** fetch data from the table: "ChargingSchedules" using primary key columns */
  ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** fetch data from the table in a streaming manner: "ChargingSchedules" */
  ChargingSchedules_stream: Array<ChargingSchedules>;
  /** An array relationship */
  ChargingStationNetworkProfiles: Array<ChargingStationNetworkProfiles>;
  /** An aggregate relationship */
  ChargingStationNetworkProfiles_aggregate: ChargingStationNetworkProfiles_Aggregate;
  /** fetch data from the table: "ChargingStationNetworkProfiles" using primary key columns */
  ChargingStationNetworkProfiles_by_pk?: Maybe<ChargingStationNetworkProfiles>;
  /** fetch data from the table in a streaming manner: "ChargingStationNetworkProfiles" */
  ChargingStationNetworkProfiles_stream: Array<ChargingStationNetworkProfiles>;
  /** An array relationship */
  ChargingStationSecurityInfos: Array<ChargingStationSecurityInfos>;
  /** An aggregate relationship */
  ChargingStationSecurityInfos_aggregate: ChargingStationSecurityInfos_Aggregate;
  /** fetch data from the table: "ChargingStationSecurityInfos" using primary key columns */
  ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** fetch data from the table in a streaming manner: "ChargingStationSecurityInfos" */
  ChargingStationSecurityInfos_stream: Array<ChargingStationSecurityInfos>;
  /** An array relationship */
  ChargingStationSequences: Array<ChargingStationSequences>;
  /** An aggregate relationship */
  ChargingStationSequences_aggregate: ChargingStationSequences_Aggregate;
  /** fetch data from the table: "ChargingStationSequences" using primary key columns */
  ChargingStationSequences_by_pk?: Maybe<ChargingStationSequences>;
  /** fetch data from the table in a streaming manner: "ChargingStationSequences" */
  ChargingStationSequences_stream: Array<ChargingStationSequences>;
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** fetch data from the table: "ChargingStations" using primary key columns */
  ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** fetch data from the table in a streaming manner: "ChargingStations" */
  ChargingStations_stream: Array<ChargingStations>;
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** fetch data from the table: "ComponentVariables" using primary key columns */
  ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** fetch data from the table in a streaming manner: "ComponentVariables" */
  ComponentVariables_stream: Array<ComponentVariables>;
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** fetch data from the table: "Components" using primary key columns */
  Components_by_pk?: Maybe<Components>;
  /** fetch data from the table in a streaming manner: "Components" */
  Components_stream: Array<Components>;
  /** An array relationship */
  CompositeSchedules: Array<CompositeSchedules>;
  /** An aggregate relationship */
  CompositeSchedules_aggregate: CompositeSchedules_Aggregate;
  /** fetch data from the table: "CompositeSchedules" using primary key columns */
  CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** fetch data from the table in a streaming manner: "CompositeSchedules" */
  CompositeSchedules_stream: Array<CompositeSchedules>;
  /** An array relationship */
  Connectors: Array<Connectors>;
  /** An aggregate relationship */
  Connectors_aggregate: Connectors_Aggregate;
  /** fetch data from the table: "Connectors" using primary key columns */
  Connectors_by_pk?: Maybe<Connectors>;
  /** fetch data from the table in a streaming manner: "Connectors" */
  Connectors_stream: Array<Connectors>;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** fetch data from the table: "EventData" using primary key columns */
  EventData_by_pk?: Maybe<EventData>;
  /** fetch data from the table in a streaming manner: "EventData" */
  EventData_stream: Array<EventData>;
  /** An array relationship */
  EvseTypes: Array<EvseTypes>;
  /** An aggregate relationship */
  EvseTypes_aggregate: EvseTypes_Aggregate;
  /** fetch data from the table: "EvseTypes" using primary key columns */
  EvseTypes_by_pk?: Maybe<EvseTypes>;
  /** fetch data from the table in a streaming manner: "EvseTypes" */
  EvseTypes_stream: Array<EvseTypes>;
  /** An array relationship */
  Evses: Array<Evses>;
  /** An aggregate relationship */
  Evses_aggregate: Evses_Aggregate;
  /** fetch data from the table: "Evses" using primary key columns */
  Evses_by_pk?: Maybe<Evses>;
  /** fetch data from the table in a streaming manner: "Evses" */
  Evses_stream: Array<Evses>;
  /** An array relationship */
  InstalledCertificates: Array<InstalledCertificates>;
  /** An aggregate relationship */
  InstalledCertificates_aggregate: InstalledCertificates_Aggregate;
  /** fetch data from the table: "InstalledCertificates" using primary key columns */
  InstalledCertificates_by_pk?: Maybe<InstalledCertificates>;
  /** fetch data from the table in a streaming manner: "InstalledCertificates" */
  InstalledCertificates_stream: Array<InstalledCertificates>;
  /** An array relationship */
  LatestStatusNotifications: Array<LatestStatusNotifications>;
  /** An aggregate relationship */
  LatestStatusNotifications_aggregate: LatestStatusNotifications_Aggregate;
  /** fetch data from the table: "LatestStatusNotifications" using primary key columns */
  LatestStatusNotifications_by_pk?: Maybe<LatestStatusNotifications>;
  /** fetch data from the table in a streaming manner: "LatestStatusNotifications" */
  LatestStatusNotifications_stream: Array<LatestStatusNotifications>;
  /** An array relationship */
  LocalListAuthorizations: Array<LocalListAuthorizations>;
  /** An aggregate relationship */
  LocalListAuthorizations_aggregate: LocalListAuthorizations_Aggregate;
  /** fetch data from the table: "LocalListAuthorizations" using primary key columns */
  LocalListAuthorizations_by_pk?: Maybe<LocalListAuthorizations>;
  /** fetch data from the table in a streaming manner: "LocalListAuthorizations" */
  LocalListAuthorizations_stream: Array<LocalListAuthorizations>;
  /** An array relationship */
  LocalListVersionAuthorizations: Array<LocalListVersionAuthorizations>;
  /** An aggregate relationship */
  LocalListVersionAuthorizations_aggregate: LocalListVersionAuthorizations_Aggregate;
  /** fetch data from the table: "LocalListVersionAuthorizations" using primary key columns */
  LocalListVersionAuthorizations_by_pk?: Maybe<LocalListVersionAuthorizations>;
  /** fetch data from the table in a streaming manner: "LocalListVersionAuthorizations" */
  LocalListVersionAuthorizations_stream: Array<LocalListVersionAuthorizations>;
  /** An array relationship */
  LocalListVersions: Array<LocalListVersions>;
  /** An aggregate relationship */
  LocalListVersions_aggregate: LocalListVersions_Aggregate;
  /** fetch data from the table: "LocalListVersions" using primary key columns */
  LocalListVersions_by_pk?: Maybe<LocalListVersions>;
  /** fetch data from the table in a streaming manner: "LocalListVersions" */
  LocalListVersions_stream: Array<LocalListVersions>;
  /** An array relationship */
  Locations: Array<Locations>;
  /** An aggregate relationship */
  Locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "Locations" using primary key columns */
  Locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table in a streaming manner: "Locations" */
  Locations_stream: Array<Locations>;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** fetch data from the table: "MessageInfos" using primary key columns */
  MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** fetch data from the table in a streaming manner: "MessageInfos" */
  MessageInfos_stream: Array<MessageInfos>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** fetch data from the table: "MeterValues" using primary key columns */
  MeterValues_by_pk?: Maybe<MeterValues>;
  /** fetch data from the table in a streaming manner: "MeterValues" */
  MeterValues_stream: Array<MeterValues>;
  /** An array relationship */
  OCPPMessages: Array<OcppMessages>;
  /** An aggregate relationship */
  OCPPMessages_aggregate: OcppMessages_Aggregate;
  /** fetch data from the table: "OCPPMessages" using primary key columns */
  OCPPMessages_by_pk?: Maybe<OcppMessages>;
  /** fetch data from the table in a streaming manner: "OCPPMessages" */
  OCPPMessages_stream: Array<OcppMessages>;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** fetch data from the table: "Reservations" using primary key columns */
  Reservations_by_pk?: Maybe<Reservations>;
  /** fetch data from the table in a streaming manner: "Reservations" */
  Reservations_stream: Array<Reservations>;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  /** fetch data from the table: "SalesTariffs" using primary key columns */
  SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** fetch data from the table in a streaming manner: "SalesTariffs" */
  SalesTariffs_stream: Array<SalesTariffs>;
  /** An array relationship */
  SecurityEvents: Array<SecurityEvents>;
  /** An aggregate relationship */
  SecurityEvents_aggregate: SecurityEvents_Aggregate;
  /** fetch data from the table: "SecurityEvents" using primary key columns */
  SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** fetch data from the table in a streaming manner: "SecurityEvents" */
  SecurityEvents_stream: Array<SecurityEvents>;
  /** An array relationship */
  SendLocalListAuthorizations: Array<SendLocalListAuthorizations>;
  /** An aggregate relationship */
  SendLocalListAuthorizations_aggregate: SendLocalListAuthorizations_Aggregate;
  /** fetch data from the table: "SendLocalListAuthorizations" using primary key columns */
  SendLocalListAuthorizations_by_pk?: Maybe<SendLocalListAuthorizations>;
  /** fetch data from the table in a streaming manner: "SendLocalListAuthorizations" */
  SendLocalListAuthorizations_stream: Array<SendLocalListAuthorizations>;
  /** An array relationship */
  SendLocalLists: Array<SendLocalLists>;
  /** An aggregate relationship */
  SendLocalLists_aggregate: SendLocalLists_Aggregate;
  /** fetch data from the table: "SendLocalLists" using primary key columns */
  SendLocalLists_by_pk?: Maybe<SendLocalLists>;
  /** fetch data from the table in a streaming manner: "SendLocalLists" */
  SendLocalLists_stream: Array<SendLocalLists>;
  /** An array relationship */
  ServerNetworkProfiles: Array<ServerNetworkProfiles>;
  /** An aggregate relationship */
  ServerNetworkProfiles_aggregate: ServerNetworkProfiles_Aggregate;
  /** fetch data from the table: "ServerNetworkProfiles" using primary key columns */
  ServerNetworkProfiles_by_pk?: Maybe<ServerNetworkProfiles>;
  /** fetch data from the table in a streaming manner: "ServerNetworkProfiles" */
  ServerNetworkProfiles_stream: Array<ServerNetworkProfiles>;
  /** An array relationship */
  SetNetworkProfiles: Array<SetNetworkProfiles>;
  /** An aggregate relationship */
  SetNetworkProfiles_aggregate: SetNetworkProfiles_Aggregate;
  /** fetch data from the table: "SetNetworkProfiles" using primary key columns */
  SetNetworkProfiles_by_pk?: Maybe<SetNetworkProfiles>;
  /** fetch data from the table in a streaming manner: "SetNetworkProfiles" */
  SetNetworkProfiles_stream: Array<SetNetworkProfiles>;
  /** An array relationship */
  StartTransactions: Array<StartTransactions>;
  /** An aggregate relationship */
  StartTransactions_aggregate: StartTransactions_Aggregate;
  /** fetch data from the table: "StartTransactions" using primary key columns */
  StartTransactions_by_pk?: Maybe<StartTransactions>;
  /** fetch data from the table in a streaming manner: "StartTransactions" */
  StartTransactions_stream: Array<StartTransactions>;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** fetch data from the table: "StatusNotifications" using primary key columns */
  StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** fetch data from the table in a streaming manner: "StatusNotifications" */
  StatusNotifications_stream: Array<StatusNotifications>;
  /** An array relationship */
  StopTransactions: Array<StopTransactions>;
  /** An aggregate relationship */
  StopTransactions_aggregate: StopTransactions_Aggregate;
  /** fetch data from the table: "StopTransactions" using primary key columns */
  StopTransactions_by_pk?: Maybe<StopTransactions>;
  /** fetch data from the table in a streaming manner: "StopTransactions" */
  StopTransactions_stream: Array<StopTransactions>;
  /** An array relationship */
  Subscriptions: Array<Subscriptions>;
  /** An aggregate relationship */
  Subscriptions_aggregate: Subscriptions_Aggregate;
  /** fetch data from the table: "Subscriptions" using primary key columns */
  Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** fetch data from the table in a streaming manner: "Subscriptions" */
  Subscriptions_stream: Array<Subscriptions>;
  /** An array relationship */
  Tariffs: Array<Tariffs>;
  /** An aggregate relationship */
  Tariffs_aggregate: Tariffs_Aggregate;
  /** fetch data from the table: "Tariffs" using primary key columns */
  Tariffs_by_pk?: Maybe<Tariffs>;
  /** fetch data from the table in a streaming manner: "Tariffs" */
  Tariffs_stream: Array<Tariffs>;
  /** An array relationship */
  TenantPartners: Array<TenantPartners>;
  /** An aggregate relationship */
  TenantPartners_aggregate: TenantPartners_Aggregate;
  /** fetch data from the table: "TenantPartners" using primary key columns */
  TenantPartners_by_pk?: Maybe<TenantPartners>;
  /** fetch data from the table in a streaming manner: "TenantPartners" */
  TenantPartners_stream: Array<TenantPartners>;
  /** fetch data from the table: "Tenants" */
  Tenants: Array<Tenants>;
  /** fetch aggregated fields from the table: "Tenants" */
  Tenants_aggregate: Tenants_Aggregate;
  /** fetch data from the table: "Tenants" using primary key columns */
  Tenants_by_pk?: Maybe<Tenants>;
  /** fetch data from the table in a streaming manner: "Tenants" */
  Tenants_stream: Array<Tenants>;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** fetch data from the table: "TransactionEvents" using primary key columns */
  TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** fetch data from the table in a streaming manner: "TransactionEvents" */
  TransactionEvents_stream: Array<TransactionEvents>;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** fetch data from the table: "Transactions" using primary key columns */
  Transactions_by_pk?: Maybe<Transactions>;
  /** fetch data from the table in a streaming manner: "Transactions" */
  Transactions_stream: Array<Transactions>;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** fetch data from the table: "VariableAttributes" using primary key columns */
  VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** fetch data from the table in a streaming manner: "VariableAttributes" */
  VariableAttributes_stream: Array<VariableAttributes>;
  /** An array relationship */
  VariableCharacteristics: Array<VariableCharacteristics>;
  /** An aggregate relationship */
  VariableCharacteristics_aggregate: VariableCharacteristics_Aggregate;
  /** fetch data from the table: "VariableCharacteristics" using primary key columns */
  VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** fetch data from the table in a streaming manner: "VariableCharacteristics" */
  VariableCharacteristics_stream: Array<VariableCharacteristics>;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  /** fetch data from the table: "VariableMonitoringStatuses" using primary key columns */
  VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** fetch data from the table in a streaming manner: "VariableMonitoringStatuses" */
  VariableMonitoringStatuses_stream: Array<VariableMonitoringStatuses>;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  /** fetch data from the table: "VariableMonitorings" using primary key columns */
  VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** fetch data from the table in a streaming manner: "VariableMonitorings" */
  VariableMonitorings_stream: Array<VariableMonitorings>;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  /** fetch data from the table: "VariableStatuses" using primary key columns */
  VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** fetch data from the table in a streaming manner: "VariableStatuses" */
  VariableStatuses_stream: Array<VariableStatuses>;
  /** An array relationship */
  Variables: Array<Variables>;
  /** An aggregate relationship */
  Variables_aggregate: Variables_Aggregate;
  /** fetch data from the table: "Variables" using primary key columns */
  Variables_by_pk?: Maybe<Variables>;
  /** fetch data from the table in a streaming manner: "Variables" */
  Variables_stream: Array<Variables>;
};

export type Subscription_RootAsyncJobStatusesArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Subscription_RootAsyncJobStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Subscription_RootAsyncJobStatuses_By_PkArgs = {
  jobId: Scalars['String']['input'];
};

export type Subscription_RootAsyncJobStatuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AsyncJobStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Subscription_RootAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Subscription_RootAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Subscription_RootAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootAuthorizations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Authorizations_Stream_Cursor_Input>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Subscription_RootBootsArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Subscription_RootBoots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Subscription_RootBoots_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Subscription_RootBoots_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Boots_Stream_Cursor_Input>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Subscription_RootCertificatesArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Subscription_RootCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Subscription_RootCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCertificates_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Certificates_Stream_Cursor_Input>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Subscription_RootChangeConfigurationsArgs = {
  distinct_on?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChangeConfigurations_Order_By>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

export type Subscription_RootChangeConfigurations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChangeConfigurations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChangeConfigurations_Order_By>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

export type Subscription_RootChangeConfigurations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootChangeConfigurations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChangeConfigurations_Stream_Cursor_Input>>;
  where?: InputMaybe<ChangeConfigurations_Bool_Exp>;
};

export type Subscription_RootChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Subscription_RootChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Subscription_RootChargingNeeds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootChargingNeeds_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingNeeds_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Subscription_RootChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Subscription_RootChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Subscription_RootChargingProfiles_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootChargingProfiles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingProfiles_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Subscription_RootChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Subscription_RootChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Subscription_RootChargingSchedules_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootChargingSchedules_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingSchedules_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Subscription_RootChargingStationNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootChargingStationNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationNetworkProfiles_Order_By>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootChargingStationNetworkProfiles_By_PkArgs = {
  setNetworkProfileId: Scalars['Int']['input'];
  stationId: Scalars['String']['input'];
};

export type Subscription_RootChargingStationNetworkProfiles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingStationNetworkProfiles_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingStationNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootChargingStationSecurityInfosArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Subscription_RootChargingStationSecurityInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Subscription_RootChargingStationSecurityInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootChargingStationSecurityInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingStationSecurityInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Subscription_RootChargingStationSequencesArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

export type Subscription_RootChargingStationSequences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSequences_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSequences_Order_By>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

export type Subscription_RootChargingStationSequences_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootChargingStationSequences_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingStationSequences_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingStationSequences_Bool_Exp>;
};

export type Subscription_RootChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Subscription_RootChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Subscription_RootChargingStations_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Subscription_RootChargingStations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingStations_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Subscription_RootComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Subscription_RootComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Subscription_RootComponentVariables_By_PkArgs = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

export type Subscription_RootComponentVariables_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ComponentVariables_Stream_Cursor_Input>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Subscription_RootComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Subscription_RootComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Subscription_RootComponents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootComponents_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Components_Stream_Cursor_Input>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Subscription_RootCompositeSchedulesArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Subscription_RootCompositeSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Subscription_RootCompositeSchedules_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCompositeSchedules_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CompositeSchedules_Stream_Cursor_Input>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Subscription_RootConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

export type Subscription_RootConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Connectors_Order_By>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

export type Subscription_RootConnectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootConnectors_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Connectors_Stream_Cursor_Input>>;
  where?: InputMaybe<Connectors_Bool_Exp>;
};

export type Subscription_RootEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Subscription_RootEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Subscription_RootEventData_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootEventData_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventData_Stream_Cursor_Input>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Subscription_RootEvseTypesArgs = {
  distinct_on?: InputMaybe<Array<EvseTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EvseTypes_Order_By>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

export type Subscription_RootEvseTypes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EvseTypes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EvseTypes_Order_By>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

export type Subscription_RootEvseTypes_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootEvseTypes_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EvseTypes_Stream_Cursor_Input>>;
  where?: InputMaybe<EvseTypes_Bool_Exp>;
};

export type Subscription_RootEvsesArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Subscription_RootEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Subscription_RootEvses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootEvses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Evses_Stream_Cursor_Input>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Subscription_RootInstalledCertificatesArgs = {
  distinct_on?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<InstalledCertificates_Order_By>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

export type Subscription_RootInstalledCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<InstalledCertificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<InstalledCertificates_Order_By>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

export type Subscription_RootInstalledCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootInstalledCertificates_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<InstalledCertificates_Stream_Cursor_Input>>;
  where?: InputMaybe<InstalledCertificates_Bool_Exp>;
};

export type Subscription_RootLatestStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

export type Subscription_RootLatestStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LatestStatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LatestStatusNotifications_Order_By>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

export type Subscription_RootLatestStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLatestStatusNotifications_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LatestStatusNotifications_Stream_Cursor_Input>>;
  where?: InputMaybe<LatestStatusNotifications_Bool_Exp>;
};

export type Subscription_RootLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

export type Subscription_RootLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

export type Subscription_RootLocalListAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLocalListAuthorizations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocalListAuthorizations_Stream_Cursor_Input>>;
  where?: InputMaybe<LocalListAuthorizations_Bool_Exp>;
};

export type Subscription_RootLocalListVersionAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

export type Subscription_RootLocalListVersionAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersionAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersionAuthorizations_Order_By>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

export type Subscription_RootLocalListVersionAuthorizations_By_PkArgs = {
  authorizationId: Scalars['Int']['input'];
  localListVersionId: Scalars['Int']['input'];
};

export type Subscription_RootLocalListVersionAuthorizations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocalListVersionAuthorizations_Stream_Cursor_Input>>;
  where?: InputMaybe<LocalListVersionAuthorizations_Bool_Exp>;
};

export type Subscription_RootLocalListVersionsArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersions_Order_By>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

export type Subscription_RootLocalListVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<LocalListVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<LocalListVersions_Order_By>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

export type Subscription_RootLocalListVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLocalListVersions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<LocalListVersions_Stream_Cursor_Input>>;
  where?: InputMaybe<LocalListVersions_Bool_Exp>;
};

export type Subscription_RootLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Subscription_RootLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Subscription_RootLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLocations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Locations_Stream_Cursor_Input>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Subscription_RootMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Subscription_RootMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Subscription_RootMessageInfos_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootMessageInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MessageInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Subscription_RootMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Subscription_RootMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Subscription_RootMeterValues_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootMeterValues_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MeterValues_Stream_Cursor_Input>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Subscription_RootOcppMessagesArgs = {
  distinct_on?: InputMaybe<Array<OcppMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcppMessages_Order_By>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

export type Subscription_RootOcppMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcppMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcppMessages_Order_By>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

export type Subscription_RootOcppMessages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcppMessages_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcppMessages_Stream_Cursor_Input>>;
  where?: InputMaybe<OcppMessages_Bool_Exp>;
};

export type Subscription_RootReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Subscription_RootReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Subscription_RootReservations_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootReservations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reservations_Stream_Cursor_Input>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Subscription_RootSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Subscription_RootSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Subscription_RootSalesTariffs_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootSalesTariffs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SalesTariffs_Stream_Cursor_Input>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Subscription_RootSecurityEventsArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Subscription_RootSecurityEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Subscription_RootSecurityEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSecurityEvents_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SecurityEvents_Stream_Cursor_Input>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Subscription_RootSendLocalListAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

export type Subscription_RootSendLocalListAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalListAuthorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalListAuthorizations_Order_By>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

export type Subscription_RootSendLocalListAuthorizations_By_PkArgs = {
  authorizationId: Scalars['Int']['input'];
  sendLocalListId: Scalars['Int']['input'];
};

export type Subscription_RootSendLocalListAuthorizations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SendLocalListAuthorizations_Stream_Cursor_Input>>;
  where?: InputMaybe<SendLocalListAuthorizations_Bool_Exp>;
};

export type Subscription_RootSendLocalListsArgs = {
  distinct_on?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalLists_Order_By>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

export type Subscription_RootSendLocalLists_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SendLocalLists_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SendLocalLists_Order_By>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

export type Subscription_RootSendLocalLists_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSendLocalLists_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SendLocalLists_Stream_Cursor_Input>>;
  where?: InputMaybe<SendLocalLists_Bool_Exp>;
};

export type Subscription_RootServerNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNetworkProfiles_Order_By>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootServerNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNetworkProfiles_Order_By>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootServerNetworkProfiles_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Subscription_RootServerNetworkProfiles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerNetworkProfiles_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootSetNetworkProfilesArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootSetNetworkProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SetNetworkProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SetNetworkProfiles_Order_By>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootSetNetworkProfiles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSetNetworkProfiles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SetNetworkProfiles_Stream_Cursor_Input>>;
  where?: InputMaybe<SetNetworkProfiles_Bool_Exp>;
};

export type Subscription_RootStartTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

export type Subscription_RootStartTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StartTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StartTransactions_Order_By>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

export type Subscription_RootStartTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootStartTransactions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<StartTransactions_Stream_Cursor_Input>>;
  where?: InputMaybe<StartTransactions_Bool_Exp>;
};

export type Subscription_RootStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Subscription_RootStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Subscription_RootStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootStatusNotifications_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<StatusNotifications_Stream_Cursor_Input>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Subscription_RootStopTransactionsArgs = {
  distinct_on?: InputMaybe<Array<StopTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StopTransactions_Order_By>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

export type Subscription_RootStopTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StopTransactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StopTransactions_Order_By>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

export type Subscription_RootStopTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootStopTransactions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<StopTransactions_Stream_Cursor_Input>>;
  where?: InputMaybe<StopTransactions_Bool_Exp>;
};

export type Subscription_RootSubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Subscription_RootSubscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Subscription_RootSubscriptions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSubscriptions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Subscriptions_Stream_Cursor_Input>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Subscription_RootTariffsArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Subscription_RootTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Subscription_RootTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTariffs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tariffs_Stream_Cursor_Input>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Subscription_RootTenantPartnersArgs = {
  distinct_on?: InputMaybe<Array<TenantPartners_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TenantPartners_Order_By>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

export type Subscription_RootTenantPartners_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TenantPartners_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TenantPartners_Order_By>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

export type Subscription_RootTenantPartners_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTenantPartners_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TenantPartners_Stream_Cursor_Input>>;
  where?: InputMaybe<TenantPartners_Bool_Exp>;
};

export type Subscription_RootTenantsArgs = {
  distinct_on?: InputMaybe<Array<Tenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tenants_Order_By>>;
  where?: InputMaybe<Tenants_Bool_Exp>;
};

export type Subscription_RootTenants_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tenants_Order_By>>;
  where?: InputMaybe<Tenants_Bool_Exp>;
};

export type Subscription_RootTenants_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTenants_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tenants_Stream_Cursor_Input>>;
  where?: InputMaybe<Tenants_Bool_Exp>;
};

export type Subscription_RootTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Subscription_RootTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Subscription_RootTransactionEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTransactionEvents_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TransactionEvents_Stream_Cursor_Input>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Subscription_RootTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Subscription_RootTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Subscription_RootTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTransactions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Transactions_Stream_Cursor_Input>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Subscription_RootVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Subscription_RootVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Subscription_RootVariableAttributes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableAttributes_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableAttributes_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Subscription_RootVariableCharacteristicsArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Subscription_RootVariableCharacteristics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Subscription_RootVariableCharacteristics_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableCharacteristics_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableCharacteristics_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableMonitoringStatuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableMonitoringStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Subscription_RootVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Subscription_RootVariableMonitorings_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootVariableMonitorings_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableMonitorings_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Subscription_RootVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Subscription_RootVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Subscription_RootVariableStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableStatuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Subscription_RootVariablesArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Subscription_RootVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Subscription_RootVariables_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariables_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Variables_Stream_Cursor_Input>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};
