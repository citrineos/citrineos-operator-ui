// SPDX-FileCopyrightText: 2025 Contributors to the CitrineOS Project
//
// SPDX-License-Identifier: Apache-2.0

export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<
  T extends { [key: string]: unknown },
  K extends keyof T,
> = { [_ in K]?: never };
export type Incremental<T> =
  | T
  | {
      [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never;
    };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
  bigint: { input: any; output: any };
  bpchar: { input: any; output: any };
  enum_AsyncJobStatuses_jobName: { input: any; output: any };
  enum_ClientCredentialsRoles_role: { input: any; output: any };
  enum_ClientVersions_version: { input: any; output: any };
  enum_Images_category: { input: any; output: any };
  enum_Images_type: { input: any; output: any };
  enum_OcpiReservations_countryCode: { input: any; output: any };
  enum_ServerCredentialsRoles_role: { input: any; output: any };
  enum_ServerVersions_version: { input: any; output: any };
  enum_Versions_version: { input: any; output: any };
  float8: { input: any; output: any };
  geography: { input: any; output: any };
  geometry: { input: any; output: any };
  json: { input: any; output: any };
  jsonb: { input: any; output: any };
  numeric: { input: any; output: any };
  timestamptz: { input: any; output: any };
};

export type Connectors = {
  id: Scalars['Int']['output'];
  stationId: Scalars['String']['output'];
  connectorId?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  errorCode?: Maybe<Scalars['String']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
};

export type Connectors_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId: Scalars['String']['input'];
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  errorCode?: InputMaybe<Scalars['String']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
};

export type Connectors_Bool_Exp = {
  _and?: InputMaybe<Array<Connectors_Bool_Exp>>;
  _not?: InputMaybe<Connectors_Bool_Exp>;
  _or?: InputMaybe<Array<Connectors_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  errorCode?: InputMaybe<String_Comparison_Exp>;
  info?: InputMaybe<String_Comparison_Exp>;
  vendorId?: InputMaybe<String_Comparison_Exp>;
  vendorErrorCode?: InputMaybe<String_Comparison_Exp>;
};

export type Connectors_Order_By = {
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  connectorId?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  errorCode?: InputMaybe<Order_By>;
  info?: InputMaybe<Order_By>;
  vendorId?: InputMaybe<Order_By>;
  vendorErrorCode?: InputMaybe<Order_By>;
};

export type Connectors_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  errorCode?: InputMaybe<Scalars['String']['input']>;
  info?: InputMaybe<Scalars['String']['input']>;
  vendorId?: InputMaybe<Scalars['String']['input']>;
  vendorErrorCode?: InputMaybe<Scalars['String']['input']>;
};

export type Connectors_Aggregate_Fields = {
  count: Scalars['Int']['output'];
  avg?: Maybe<Connectors_Avg_Fields>;
  max?: Maybe<Connectors_Max_Fields>;
  min?: Maybe<Connectors_Min_Fields>;
  stddev?: Maybe<Connectors_Stddev_Fields>;
  stddev_pop?: Maybe<Connectors_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Connectors_Stddev_Samp_Fields>;
  sum?: Maybe<Connectors_Sum_Fields>;
  var_pop?: Maybe<Connectors_Var_Pop_Fields>;
  var_samp?: Maybe<Connectors_Var_Samp_Fields>;
  variance?: Maybe<Connectors_Variance_Fields>;
};

/** aggregate avg on columns */
export type Connectors_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate max on columns */
export type Connectors_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  errorCode?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Connectors_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  errorCode?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  info?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  vendorErrorCode?: Maybe<Scalars['String']['output']>;
  vendorId?: Maybe<Scalars['String']['output']>;
};

/** aggregate stddev on columns */
export type Connectors_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Connectors_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Connectors_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate sum on columns */
export type Connectors_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** aggregate var_pop on columns */
export type Connectors_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Connectors_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Connectors_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "AdditionalInfos" */
export type AdditionalInfos = {
  /** An array relationship */
  IdTokenAdditionalInfos: Array<IdTokenAdditionalInfos>;
  /** An aggregate relationship */
  IdTokenAdditionalInfos_aggregate: IdTokenAdditionalInfos_Aggregate;
  additionalIdToken?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "AdditionalInfos" */
export type AdditionalInfosIdTokenAdditionalInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

/** columns and relationships of "AdditionalInfos" */
export type AdditionalInfosIdTokenAdditionalInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

/** aggregated selection of "AdditionalInfos" */
export type AdditionalInfos_Aggregate = {
  aggregate?: Maybe<AdditionalInfos_Aggregate_Fields>;
  nodes: Array<AdditionalInfos>;
};

/** aggregate fields of "AdditionalInfos" */
export type AdditionalInfos_Aggregate_Fields = {
  avg?: Maybe<AdditionalInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AdditionalInfos_Max_Fields>;
  min?: Maybe<AdditionalInfos_Min_Fields>;
  stddev?: Maybe<AdditionalInfos_Stddev_Fields>;
  stddev_pop?: Maybe<AdditionalInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AdditionalInfos_Stddev_Samp_Fields>;
  sum?: Maybe<AdditionalInfos_Sum_Fields>;
  var_pop?: Maybe<AdditionalInfos_Var_Pop_Fields>;
  var_samp?: Maybe<AdditionalInfos_Var_Samp_Fields>;
  variance?: Maybe<AdditionalInfos_Variance_Fields>;
};

/** aggregate fields of "AdditionalInfos" */
export type AdditionalInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AdditionalInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type AdditionalInfos_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "AdditionalInfos". All fields are combined with a logical 'AND'. */
export type AdditionalInfos_Bool_Exp = {
  IdTokenAdditionalInfos?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
  IdTokenAdditionalInfos_aggregate?: InputMaybe<IdTokenAdditionalInfos_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<AdditionalInfos_Bool_Exp>>;
  _not?: InputMaybe<AdditionalInfos_Bool_Exp>;
  _or?: InputMaybe<Array<AdditionalInfos_Bool_Exp>>;
  additionalIdToken?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "AdditionalInfos" */
export type AdditionalInfos_Constraint =
  /** unique or primary key constraint on columns "additionalIdToken", "type" */
  | 'AdditionalInfos_additionalIdToken_type_key'
  /** unique or primary key constraint on columns "id" */
  | 'AdditionalInfos_pkey';

/** input type for incrementing numeric columns in table "AdditionalInfos" */
export type AdditionalInfos_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "AdditionalInfos" */
export type AdditionalInfos_Insert_Input = {
  IdTokenAdditionalInfos?: InputMaybe<IdTokenAdditionalInfos_Arr_Rel_Insert_Input>;
  additionalIdToken?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type AdditionalInfos_Max_Fields = {
  additionalIdToken?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type AdditionalInfos_Min_Fields = {
  additionalIdToken?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "AdditionalInfos" */
export type AdditionalInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AdditionalInfos>;
};

/** input type for inserting object relation for remote table "AdditionalInfos" */
export type AdditionalInfos_Obj_Rel_Insert_Input = {
  data: AdditionalInfos_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<AdditionalInfos_On_Conflict>;
};

/** on_conflict condition type for table "AdditionalInfos" */
export type AdditionalInfos_On_Conflict = {
  constraint: AdditionalInfos_Constraint;
  update_columns?: Array<AdditionalInfos_Update_Column>;
  where?: InputMaybe<AdditionalInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "AdditionalInfos". */
export type AdditionalInfos_Order_By = {
  IdTokenAdditionalInfos_aggregate?: InputMaybe<IdTokenAdditionalInfos_Aggregate_Order_By>;
  additionalIdToken?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: AdditionalInfos */
export type AdditionalInfos_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "AdditionalInfos" */
export type AdditionalInfos_Select_Column =
  /** column name */
  | 'additionalIdToken'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "AdditionalInfos" */
export type AdditionalInfos_Set_Input = {
  additionalIdToken?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type AdditionalInfos_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type AdditionalInfos_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type AdditionalInfos_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "AdditionalInfos" */
export type AdditionalInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AdditionalInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AdditionalInfos_Stream_Cursor_Value_Input = {
  additionalIdToken?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type AdditionalInfos_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "AdditionalInfos" */
export type AdditionalInfos_Update_Column =
  /** column name */
  | 'additionalIdToken'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

export type AdditionalInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<AdditionalInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AdditionalInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: AdditionalInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type AdditionalInfos_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type AdditionalInfos_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type AdditionalInfos_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "AsyncJobStatuses" */
export type AsyncJobStatuses = {
  cpoCountryCode?: Maybe<Scalars['String']['output']>;
  cpoPartyId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  finishedAt?: Maybe<Scalars['timestamptz']['output']>;
  isFailed?: Maybe<Scalars['Boolean']['output']>;
  jobId: Scalars['String']['output'];
  jobName?: Maybe<Scalars['enum_AsyncJobStatuses_jobName']['output']>;
  mspCountryCode?: Maybe<Scalars['String']['output']>;
  mspPartyId?: Maybe<Scalars['String']['output']>;
  paginationParams?: Maybe<Scalars['json']['output']>;
  stopScheduled?: Maybe<Scalars['Boolean']['output']>;
  stoppedAt?: Maybe<Scalars['timestamptz']['output']>;
  totalObjects?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "AsyncJobStatuses" */
export type AsyncJobStatusesPaginationParamsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate = {
  aggregate?: Maybe<AsyncJobStatuses_Aggregate_Fields>;
  nodes: Array<AsyncJobStatuses>;
};

/** aggregate fields of "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate_Fields = {
  avg?: Maybe<AsyncJobStatuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AsyncJobStatuses_Max_Fields>;
  min?: Maybe<AsyncJobStatuses_Min_Fields>;
  stddev?: Maybe<AsyncJobStatuses_Stddev_Fields>;
  stddev_pop?: Maybe<AsyncJobStatuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AsyncJobStatuses_Stddev_Samp_Fields>;
  sum?: Maybe<AsyncJobStatuses_Sum_Fields>;
  var_pop?: Maybe<AsyncJobStatuses_Var_Pop_Fields>;
  var_samp?: Maybe<AsyncJobStatuses_Var_Samp_Fields>;
  variance?: Maybe<AsyncJobStatuses_Variance_Fields>;
};

/** aggregate fields of "AsyncJobStatuses" */
export type AsyncJobStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type AsyncJobStatuses_Avg_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "AsyncJobStatuses". All fields are combined with a logical 'AND'. */
export type AsyncJobStatuses_Bool_Exp = {
  _and?: InputMaybe<Array<AsyncJobStatuses_Bool_Exp>>;
  _not?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<AsyncJobStatuses_Bool_Exp>>;
  cpoCountryCode?: InputMaybe<String_Comparison_Exp>;
  cpoPartyId?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  finishedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  isFailed?: InputMaybe<Boolean_Comparison_Exp>;
  jobId?: InputMaybe<String_Comparison_Exp>;
  jobName?: InputMaybe<Enum_AsyncJobStatuses_JobName_Comparison_Exp>;
  mspCountryCode?: InputMaybe<String_Comparison_Exp>;
  mspPartyId?: InputMaybe<String_Comparison_Exp>;
  paginationParams?: InputMaybe<Json_Comparison_Exp>;
  stopScheduled?: InputMaybe<Boolean_Comparison_Exp>;
  stoppedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  totalObjects?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "AsyncJobStatuses" */
export type AsyncJobStatuses_Constraint =
  /** unique or primary key constraint on columns "jobId" */
  'AsyncJobStatuses_pkey';

/** input type for incrementing numeric columns in table "AsyncJobStatuses" */
export type AsyncJobStatuses_Inc_Input = {
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "AsyncJobStatuses" */
export type AsyncJobStatuses_Insert_Input = {
  cpoCountryCode?: InputMaybe<Scalars['String']['input']>;
  cpoPartyId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finishedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  isFailed?: InputMaybe<Scalars['Boolean']['input']>;
  jobId?: InputMaybe<Scalars['String']['input']>;
  jobName?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  mspCountryCode?: InputMaybe<Scalars['String']['input']>;
  mspPartyId?: InputMaybe<Scalars['String']['input']>;
  paginationParams?: InputMaybe<Scalars['json']['input']>;
  stopScheduled?: InputMaybe<Scalars['Boolean']['input']>;
  stoppedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type AsyncJobStatuses_Max_Fields = {
  cpoCountryCode?: Maybe<Scalars['String']['output']>;
  cpoPartyId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  finishedAt?: Maybe<Scalars['timestamptz']['output']>;
  jobId?: Maybe<Scalars['String']['output']>;
  jobName?: Maybe<Scalars['enum_AsyncJobStatuses_jobName']['output']>;
  mspCountryCode?: Maybe<Scalars['String']['output']>;
  mspPartyId?: Maybe<Scalars['String']['output']>;
  stoppedAt?: Maybe<Scalars['timestamptz']['output']>;
  totalObjects?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type AsyncJobStatuses_Min_Fields = {
  cpoCountryCode?: Maybe<Scalars['String']['output']>;
  cpoPartyId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  finishedAt?: Maybe<Scalars['timestamptz']['output']>;
  jobId?: Maybe<Scalars['String']['output']>;
  jobName?: Maybe<Scalars['enum_AsyncJobStatuses_jobName']['output']>;
  mspCountryCode?: Maybe<Scalars['String']['output']>;
  mspPartyId?: Maybe<Scalars['String']['output']>;
  stoppedAt?: Maybe<Scalars['timestamptz']['output']>;
  totalObjects?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "AsyncJobStatuses" */
export type AsyncJobStatuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AsyncJobStatuses>;
};

/** on_conflict condition type for table "AsyncJobStatuses" */
export type AsyncJobStatuses_On_Conflict = {
  constraint: AsyncJobStatuses_Constraint;
  update_columns?: Array<AsyncJobStatuses_Update_Column>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "AsyncJobStatuses". */
export type AsyncJobStatuses_Order_By = {
  cpoCountryCode?: InputMaybe<Order_By>;
  cpoPartyId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  finishedAt?: InputMaybe<Order_By>;
  isFailed?: InputMaybe<Order_By>;
  jobId?: InputMaybe<Order_By>;
  jobName?: InputMaybe<Order_By>;
  mspCountryCode?: InputMaybe<Order_By>;
  mspPartyId?: InputMaybe<Order_By>;
  paginationParams?: InputMaybe<Order_By>;
  stopScheduled?: InputMaybe<Order_By>;
  stoppedAt?: InputMaybe<Order_By>;
  totalObjects?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: AsyncJobStatuses */
export type AsyncJobStatuses_Pk_Columns_Input = {
  jobId: Scalars['String']['input'];
};

/** select columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Select_Column =
  /** column name */
  | 'cpoCountryCode'
  /** column name */
  | 'cpoPartyId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'finishedAt'
  /** column name */
  | 'isFailed'
  /** column name */
  | 'jobId'
  /** column name */
  | 'jobName'
  /** column name */
  | 'mspCountryCode'
  /** column name */
  | 'mspPartyId'
  /** column name */
  | 'paginationParams'
  /** column name */
  | 'stopScheduled'
  /** column name */
  | 'stoppedAt'
  /** column name */
  | 'totalObjects'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "AsyncJobStatuses" */
export type AsyncJobStatuses_Set_Input = {
  cpoCountryCode?: InputMaybe<Scalars['String']['input']>;
  cpoPartyId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finishedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  isFailed?: InputMaybe<Scalars['Boolean']['input']>;
  jobId?: InputMaybe<Scalars['String']['input']>;
  jobName?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  mspCountryCode?: InputMaybe<Scalars['String']['input']>;
  mspPartyId?: InputMaybe<Scalars['String']['input']>;
  paginationParams?: InputMaybe<Scalars['json']['input']>;
  stopScheduled?: InputMaybe<Scalars['Boolean']['input']>;
  stoppedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type AsyncJobStatuses_Stddev_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type AsyncJobStatuses_Stddev_Pop_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type AsyncJobStatuses_Stddev_Samp_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "AsyncJobStatuses" */
export type AsyncJobStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AsyncJobStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AsyncJobStatuses_Stream_Cursor_Value_Input = {
  cpoCountryCode?: InputMaybe<Scalars['String']['input']>;
  cpoPartyId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  finishedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  isFailed?: InputMaybe<Scalars['Boolean']['input']>;
  jobId?: InputMaybe<Scalars['String']['input']>;
  jobName?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  mspCountryCode?: InputMaybe<Scalars['String']['input']>;
  mspPartyId?: InputMaybe<Scalars['String']['input']>;
  paginationParams?: InputMaybe<Scalars['json']['input']>;
  stopScheduled?: InputMaybe<Scalars['Boolean']['input']>;
  stoppedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  totalObjects?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type AsyncJobStatuses_Sum_Fields = {
  totalObjects?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "AsyncJobStatuses" */
export type AsyncJobStatuses_Update_Column =
  /** column name */
  | 'cpoCountryCode'
  /** column name */
  | 'cpoPartyId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'finishedAt'
  /** column name */
  | 'isFailed'
  /** column name */
  | 'jobId'
  /** column name */
  | 'jobName'
  /** column name */
  | 'mspCountryCode'
  /** column name */
  | 'mspPartyId'
  /** column name */
  | 'paginationParams'
  /** column name */
  | 'stopScheduled'
  /** column name */
  | 'stoppedAt'
  /** column name */
  | 'totalObjects'
  /** column name */
  | 'updatedAt';

export type AsyncJobStatuses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<AsyncJobStatuses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AsyncJobStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: AsyncJobStatuses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type AsyncJobStatuses_Var_Pop_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type AsyncJobStatuses_Var_Samp_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type AsyncJobStatuses_Variance_Fields = {
  totalObjects?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "Authorizations" */
export type Authorizations = {
  /** An object relationship */
  IdToken?: Maybe<IdTokens>;
  /** An object relationship */
  IdTokenInfo?: Maybe<IdTokenInfos>;
  /** An object relationship */
  OcpiToken?: Maybe<OcpiTokens>;
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  createdAt: Scalars['timestamptz']['output'];
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  id: Scalars['Int']['output'];
  idTokenId?: Maybe<Scalars['Int']['output']>;
  idTokenInfoId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "Authorizations" */
export type Authorizations_Aggregate = {
  aggregate?: Maybe<Authorizations_Aggregate_Fields>;
  nodes: Array<Authorizations>;
};

export type Authorizations_Aggregate_Bool_Exp = {
  count?: InputMaybe<Authorizations_Aggregate_Bool_Exp_Count>;
};

export type Authorizations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Authorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Authorizations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Authorizations" */
export type Authorizations_Aggregate_Fields = {
  avg?: Maybe<Authorizations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Authorizations_Max_Fields>;
  min?: Maybe<Authorizations_Min_Fields>;
  stddev?: Maybe<Authorizations_Stddev_Fields>;
  stddev_pop?: Maybe<Authorizations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Authorizations_Stddev_Samp_Fields>;
  sum?: Maybe<Authorizations_Sum_Fields>;
  var_pop?: Maybe<Authorizations_Var_Pop_Fields>;
  var_samp?: Maybe<Authorizations_Var_Samp_Fields>;
  variance?: Maybe<Authorizations_Variance_Fields>;
};

/** aggregate fields of "Authorizations" */
export type Authorizations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Authorizations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Authorizations" */
export type Authorizations_Aggregate_Order_By = {
  avg?: InputMaybe<Authorizations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Authorizations_Max_Order_By>;
  min?: InputMaybe<Authorizations_Min_Order_By>;
  stddev?: InputMaybe<Authorizations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Authorizations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Authorizations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Authorizations_Sum_Order_By>;
  var_pop?: InputMaybe<Authorizations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Authorizations_Var_Samp_Order_By>;
  variance?: InputMaybe<Authorizations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Authorizations" */
export type Authorizations_Arr_Rel_Insert_Input = {
  data: Array<Authorizations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** aggregate avg on columns */
export type Authorizations_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Authorizations" */
export type Authorizations_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Authorizations". All fields are combined with a logical 'AND'. */
export type Authorizations_Bool_Exp = {
  IdToken?: InputMaybe<IdTokens_Bool_Exp>;
  IdTokenInfo?: InputMaybe<IdTokenInfos_Bool_Exp>;
  OcpiToken?: InputMaybe<OcpiTokens_Bool_Exp>;
  _and?: InputMaybe<Array<Authorizations_Bool_Exp>>;
  _not?: InputMaybe<Authorizations_Bool_Exp>;
  _or?: InputMaybe<Array<Authorizations_Bool_Exp>>;
  allowedConnectorTypes?: InputMaybe<String_Array_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  disallowedEvseIdPrefixes?: InputMaybe<String_Array_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idTokenId?: InputMaybe<Int_Comparison_Exp>;
  idTokenInfoId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Authorizations" */
export type Authorizations_Constraint =
  /** unique or primary key constraint on columns "idTokenId" */
  | 'Authorizations_idTokenId_key'
  /** unique or primary key constraint on columns "id" */
  | 'Authorizations_pkey';

/** input type for incrementing numeric columns in table "Authorizations" */
export type Authorizations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  idTokenInfoId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Authorizations" */
export type Authorizations_Insert_Input = {
  IdToken?: InputMaybe<IdTokens_Obj_Rel_Insert_Input>;
  IdTokenInfo?: InputMaybe<IdTokenInfos_Obj_Rel_Insert_Input>;
  OcpiToken?: InputMaybe<OcpiTokens_Obj_Rel_Insert_Input>;
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  idTokenInfoId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Authorizations_Max_Fields = {
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  idTokenInfoId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Authorizations" */
export type Authorizations_Max_Order_By = {
  allowedConnectorTypes?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Authorizations_Min_Fields = {
  allowedConnectorTypes?: Maybe<Array<Scalars['String']['output']>>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  disallowedEvseIdPrefixes?: Maybe<Array<Scalars['String']['output']>>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  idTokenInfoId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Authorizations" */
export type Authorizations_Min_Order_By = {
  allowedConnectorTypes?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Authorizations" */
export type Authorizations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Authorizations>;
};

/** input type for inserting object relation for remote table "Authorizations" */
export type Authorizations_Obj_Rel_Insert_Input = {
  data: Authorizations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** on_conflict condition type for table "Authorizations" */
export type Authorizations_On_Conflict = {
  constraint: Authorizations_Constraint;
  update_columns?: Array<Authorizations_Update_Column>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** Ordering options when selecting data from "Authorizations". */
export type Authorizations_Order_By = {
  IdToken?: InputMaybe<IdTokens_Order_By>;
  IdTokenInfo?: InputMaybe<IdTokenInfos_Order_By>;
  OcpiToken?: InputMaybe<OcpiTokens_Order_By>;
  allowedConnectorTypes?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  disallowedEvseIdPrefixes?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Authorizations */
export type Authorizations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Authorizations" */
export type Authorizations_Select_Column =
  /** column name */
  | 'allowedConnectorTypes'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'disallowedEvseIdPrefixes'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenId'
  /** column name */
  | 'idTokenInfoId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Authorizations" */
export type Authorizations_Set_Input = {
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  idTokenInfoId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Authorizations_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Authorizations" */
export type Authorizations_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Authorizations_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Authorizations" */
export type Authorizations_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Authorizations_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Authorizations" */
export type Authorizations_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Authorizations" */
export type Authorizations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Authorizations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Authorizations_Stream_Cursor_Value_Input = {
  allowedConnectorTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  disallowedEvseIdPrefixes?: InputMaybe<Array<Scalars['String']['input']>>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  idTokenInfoId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Authorizations_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  idTokenInfoId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Authorizations" */
export type Authorizations_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** update columns of table "Authorizations" */
export type Authorizations_Update_Column =
  /** column name */
  | 'allowedConnectorTypes'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'disallowedEvseIdPrefixes'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenId'
  /** column name */
  | 'idTokenInfoId'
  /** column name */
  | 'updatedAt';

export type Authorizations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Authorizations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Authorizations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Authorizations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Authorizations_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Authorizations" */
export type Authorizations_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Authorizations_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Authorizations" */
export type Authorizations_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Authorizations_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  idTokenInfoId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Authorizations" */
export type Authorizations_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  idTokenInfoId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

/** columns and relationships of "Boots" */
export type Boots = {
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  bootWithRejectedVariables?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  getBaseReportOnPending?: Maybe<Scalars['Boolean']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  lastBootTime?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  statusInfo?: Maybe<Scalars['json']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  variablesRejectedOnLastBoot?: Maybe<Scalars['json']['output']>;
};

/** columns and relationships of "Boots" */
export type BootsVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Boots" */
export type BootsVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Boots" */
export type BootsStatusInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Boots" */
export type BootsVariablesRejectedOnLastBootArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Boots" */
export type Boots_Aggregate = {
  aggregate?: Maybe<Boots_Aggregate_Fields>;
  nodes: Array<Boots>;
};

/** aggregate fields of "Boots" */
export type Boots_Aggregate_Fields = {
  avg?: Maybe<Boots_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Boots_Max_Fields>;
  min?: Maybe<Boots_Min_Fields>;
  stddev?: Maybe<Boots_Stddev_Fields>;
  stddev_pop?: Maybe<Boots_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Boots_Stddev_Samp_Fields>;
  sum?: Maybe<Boots_Sum_Fields>;
  var_pop?: Maybe<Boots_Var_Pop_Fields>;
  var_samp?: Maybe<Boots_Var_Samp_Fields>;
  variance?: Maybe<Boots_Variance_Fields>;
};

/** aggregate fields of "Boots" */
export type Boots_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Boots_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Boots_Avg_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Boots". All fields are combined with a logical 'AND'. */
export type Boots_Bool_Exp = {
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Boots_Bool_Exp>>;
  _not?: InputMaybe<Boots_Bool_Exp>;
  _or?: InputMaybe<Array<Boots_Bool_Exp>>;
  bootRetryInterval?: InputMaybe<Int_Comparison_Exp>;
  bootWithRejectedVariables?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  getBaseReportOnPending?: InputMaybe<Boolean_Comparison_Exp>;
  heartbeatInterval?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  lastBootTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  statusInfo?: InputMaybe<Json_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variablesRejectedOnLastBoot?: InputMaybe<Json_Comparison_Exp>;
};

/** unique or primary key constraints on table "Boots" */
export type Boots_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Boots_pkey';

/** input type for incrementing numeric columns in table "Boots" */
export type Boots_Inc_Input = {
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Boots" */
export type Boots_Insert_Input = {
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  bootWithRejectedVariables?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  getBaseReportOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  lastBootTime?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variablesRejectedOnLastBoot?: InputMaybe<Scalars['json']['input']>;
};

/** aggregate max on columns */
export type Boots_Max_Fields = {
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  lastBootTime?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Boots_Min_Fields = {
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  lastBootTime?: Maybe<Scalars['timestamptz']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "Boots" */
export type Boots_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Boots>;
};

/** input type for inserting object relation for remote table "Boots" */
export type Boots_Obj_Rel_Insert_Input = {
  data: Boots_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** on_conflict condition type for table "Boots" */
export type Boots_On_Conflict = {
  constraint: Boots_Constraint;
  update_columns?: Array<Boots_Update_Column>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

/** Ordering options when selecting data from "Boots". */
export type Boots_Order_By = {
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  bootRetryInterval?: InputMaybe<Order_By>;
  bootWithRejectedVariables?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  getBaseReportOnPending?: InputMaybe<Order_By>;
  heartbeatInterval?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastBootTime?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  statusInfo?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variablesRejectedOnLastBoot?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Boots */
export type Boots_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** select columns of table "Boots" */
export type Boots_Select_Column =
  /** column name */
  | 'bootRetryInterval'
  /** column name */
  | 'bootWithRejectedVariables'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'getBaseReportOnPending'
  /** column name */
  | 'heartbeatInterval'
  /** column name */
  | 'id'
  /** column name */
  | 'lastBootTime'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variablesRejectedOnLastBoot';

/** input type for updating data in table "Boots" */
export type Boots_Set_Input = {
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  bootWithRejectedVariables?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  getBaseReportOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  lastBootTime?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variablesRejectedOnLastBoot?: InputMaybe<Scalars['json']['input']>;
};

/** aggregate stddev on columns */
export type Boots_Stddev_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Boots_Stddev_Pop_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Boots_Stddev_Samp_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Boots" */
export type Boots_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Boots_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Boots_Stream_Cursor_Value_Input = {
  bootRetryInterval?: InputMaybe<Scalars['Int']['input']>;
  bootWithRejectedVariables?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  getBaseReportOnPending?: InputMaybe<Scalars['Boolean']['input']>;
  heartbeatInterval?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  lastBootTime?: InputMaybe<Scalars['timestamptz']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variablesRejectedOnLastBoot?: InputMaybe<Scalars['json']['input']>;
};

/** aggregate sum on columns */
export type Boots_Sum_Fields = {
  bootRetryInterval?: Maybe<Scalars['Int']['output']>;
  heartbeatInterval?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Boots" */
export type Boots_Update_Column =
  /** column name */
  | 'bootRetryInterval'
  /** column name */
  | 'bootWithRejectedVariables'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'getBaseReportOnPending'
  /** column name */
  | 'heartbeatInterval'
  /** column name */
  | 'id'
  /** column name */
  | 'lastBootTime'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variablesRejectedOnLastBoot';

export type Boots_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Boots_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Boots_Set_Input>;
  /** filter the rows which have to be updated */
  where: Boots_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Boots_Var_Pop_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Boots_Var_Samp_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Boots_Variance_Fields = {
  bootRetryInterval?: Maybe<Scalars['Float']['output']>;
  heartbeatInterval?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "BusinessDetails" */
export type BusinessDetails = {
  /** An object relationship */
  ClientCredentialsRole?: Maybe<ClientCredentialsRoles>;
  /** An array relationship */
  Images: Array<Images>;
  /** An aggregate relationship */
  Images_aggregate: Images_Aggregate;
  /** An object relationship */
  ServerCredentialsRole?: Maybe<ServerCredentialsRoles>;
  clientCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  website?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "BusinessDetails" */
export type BusinessDetailsImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

/** columns and relationships of "BusinessDetails" */
export type BusinessDetailsImages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

/** aggregated selection of "BusinessDetails" */
export type BusinessDetails_Aggregate = {
  aggregate?: Maybe<BusinessDetails_Aggregate_Fields>;
  nodes: Array<BusinessDetails>;
};

export type BusinessDetails_Aggregate_Bool_Exp = {
  count?: InputMaybe<BusinessDetails_Aggregate_Bool_Exp_Count>;
};

export type BusinessDetails_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<BusinessDetails_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "BusinessDetails" */
export type BusinessDetails_Aggregate_Fields = {
  avg?: Maybe<BusinessDetails_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<BusinessDetails_Max_Fields>;
  min?: Maybe<BusinessDetails_Min_Fields>;
  stddev?: Maybe<BusinessDetails_Stddev_Fields>;
  stddev_pop?: Maybe<BusinessDetails_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<BusinessDetails_Stddev_Samp_Fields>;
  sum?: Maybe<BusinessDetails_Sum_Fields>;
  var_pop?: Maybe<BusinessDetails_Var_Pop_Fields>;
  var_samp?: Maybe<BusinessDetails_Var_Samp_Fields>;
  variance?: Maybe<BusinessDetails_Variance_Fields>;
};

/** aggregate fields of "BusinessDetails" */
export type BusinessDetails_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "BusinessDetails" */
export type BusinessDetails_Aggregate_Order_By = {
  avg?: InputMaybe<BusinessDetails_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<BusinessDetails_Max_Order_By>;
  min?: InputMaybe<BusinessDetails_Min_Order_By>;
  stddev?: InputMaybe<BusinessDetails_Stddev_Order_By>;
  stddev_pop?: InputMaybe<BusinessDetails_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<BusinessDetails_Stddev_Samp_Order_By>;
  sum?: InputMaybe<BusinessDetails_Sum_Order_By>;
  var_pop?: InputMaybe<BusinessDetails_Var_Pop_Order_By>;
  var_samp?: InputMaybe<BusinessDetails_Var_Samp_Order_By>;
  variance?: InputMaybe<BusinessDetails_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "BusinessDetails" */
export type BusinessDetails_Arr_Rel_Insert_Input = {
  data: Array<BusinessDetails_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<BusinessDetails_On_Conflict>;
};

/** aggregate avg on columns */
export type BusinessDetails_Avg_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "BusinessDetails" */
export type BusinessDetails_Avg_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "BusinessDetails". All fields are combined with a logical 'AND'. */
export type BusinessDetails_Bool_Exp = {
  ClientCredentialsRole?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
  Images?: InputMaybe<Images_Bool_Exp>;
  Images_aggregate?: InputMaybe<Images_Aggregate_Bool_Exp>;
  ServerCredentialsRole?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
  _and?: InputMaybe<Array<BusinessDetails_Bool_Exp>>;
  _not?: InputMaybe<BusinessDetails_Bool_Exp>;
  _or?: InputMaybe<Array<BusinessDetails_Bool_Exp>>;
  clientCredentialsRoleId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  serverCredentialsRoleId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "BusinessDetails" */
export type BusinessDetails_Constraint =
  /** unique or primary key constraint on columns "id" */
  'BusinessDetails_pkey';

/** input type for incrementing numeric columns in table "BusinessDetails" */
export type BusinessDetails_Inc_Input = {
  clientCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  serverCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "BusinessDetails" */
export type BusinessDetails_Insert_Input = {
  ClientCredentialsRole?: InputMaybe<ClientCredentialsRoles_Obj_Rel_Insert_Input>;
  Images?: InputMaybe<Images_Arr_Rel_Insert_Input>;
  ServerCredentialsRole?: InputMaybe<ServerCredentialsRoles_Obj_Rel_Insert_Input>;
  clientCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  serverCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type BusinessDetails_Max_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "BusinessDetails" */
export type BusinessDetails_Max_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type BusinessDetails_Min_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  website?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "BusinessDetails" */
export type BusinessDetails_Min_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "BusinessDetails" */
export type BusinessDetails_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<BusinessDetails>;
};

/** input type for inserting object relation for remote table "BusinessDetails" */
export type BusinessDetails_Obj_Rel_Insert_Input = {
  data: BusinessDetails_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<BusinessDetails_On_Conflict>;
};

/** on_conflict condition type for table "BusinessDetails" */
export type BusinessDetails_On_Conflict = {
  constraint: BusinessDetails_Constraint;
  update_columns?: Array<BusinessDetails_Update_Column>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

/** Ordering options when selecting data from "BusinessDetails". */
export type BusinessDetails_Order_By = {
  ClientCredentialsRole?: InputMaybe<ClientCredentialsRoles_Order_By>;
  Images_aggregate?: InputMaybe<Images_Aggregate_Order_By>;
  ServerCredentialsRole?: InputMaybe<ServerCredentialsRoles_Order_By>;
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: BusinessDetails */
export type BusinessDetails_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "BusinessDetails" */
export type BusinessDetails_Select_Column =
  /** column name */
  | 'clientCredentialsRoleId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'serverCredentialsRoleId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'website';

/** input type for updating data in table "BusinessDetails" */
export type BusinessDetails_Set_Input = {
  clientCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  serverCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type BusinessDetails_Stddev_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "BusinessDetails" */
export type BusinessDetails_Stddev_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type BusinessDetails_Stddev_Pop_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "BusinessDetails" */
export type BusinessDetails_Stddev_Pop_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type BusinessDetails_Stddev_Samp_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "BusinessDetails" */
export type BusinessDetails_Stddev_Samp_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "BusinessDetails" */
export type BusinessDetails_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: BusinessDetails_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type BusinessDetails_Stream_Cursor_Value_Input = {
  clientCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  serverCredentialsRoleId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type BusinessDetails_Sum_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "BusinessDetails" */
export type BusinessDetails_Sum_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** update columns of table "BusinessDetails" */
export type BusinessDetails_Update_Column =
  /** column name */
  | 'clientCredentialsRoleId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'serverCredentialsRoleId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'website';

export type BusinessDetails_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<BusinessDetails_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<BusinessDetails_Set_Input>;
  /** filter the rows which have to be updated */
  where: BusinessDetails_Bool_Exp;
};

/** aggregate var_pop on columns */
export type BusinessDetails_Var_Pop_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "BusinessDetails" */
export type BusinessDetails_Var_Pop_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type BusinessDetails_Var_Samp_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "BusinessDetails" */
export type BusinessDetails_Var_Samp_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type BusinessDetails_Variance_Fields = {
  clientCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverCredentialsRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "BusinessDetails" */
export type BusinessDetails_Variance_Order_By = {
  clientCredentialsRoleId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverCredentialsRoleId?: InputMaybe<Order_By>;
};

/** columns and relationships of "CallMessages" */
export type CallMessages = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  reservationId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "CallMessages" */
export type CallMessages_Aggregate = {
  aggregate?: Maybe<CallMessages_Aggregate_Fields>;
  nodes: Array<CallMessages>;
};

/** aggregate fields of "CallMessages" */
export type CallMessages_Aggregate_Fields = {
  avg?: Maybe<CallMessages_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CallMessages_Max_Fields>;
  min?: Maybe<CallMessages_Min_Fields>;
  stddev?: Maybe<CallMessages_Stddev_Fields>;
  stddev_pop?: Maybe<CallMessages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CallMessages_Stddev_Samp_Fields>;
  sum?: Maybe<CallMessages_Sum_Fields>;
  var_pop?: Maybe<CallMessages_Var_Pop_Fields>;
  var_samp?: Maybe<CallMessages_Var_Samp_Fields>;
  variance?: Maybe<CallMessages_Variance_Fields>;
};

/** aggregate fields of "CallMessages" */
export type CallMessages_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CallMessages_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type CallMessages_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "CallMessages". All fields are combined with a logical 'AND'. */
export type CallMessages_Bool_Exp = {
  _and?: InputMaybe<Array<CallMessages_Bool_Exp>>;
  _not?: InputMaybe<CallMessages_Bool_Exp>;
  _or?: InputMaybe<Array<CallMessages_Bool_Exp>>;
  correlationId?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  reservationId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "CallMessages" */
export type CallMessages_Constraint =
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key1'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key2'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key3'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key4'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key5'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key6'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key7'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key8'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key9'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key10'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key11'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key12'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key13'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key14'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key15'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key16'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key17'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key18'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key19'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key20'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key21'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key22'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key23'
  /** unique or primary key constraint on columns "correlationId" */
  | 'CallMessages_correlationId_key24'
  /** unique or primary key constraint on columns "id" */
  | 'CallMessages_pkey';

/** input type for incrementing numeric columns in table "CallMessages" */
export type CallMessages_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "CallMessages" */
export type CallMessages_Insert_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type CallMessages_Max_Fields = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type CallMessages_Min_Fields = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "CallMessages" */
export type CallMessages_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<CallMessages>;
};

/** on_conflict condition type for table "CallMessages" */
export type CallMessages_On_Conflict = {
  constraint: CallMessages_Constraint;
  update_columns?: Array<CallMessages_Update_Column>;
  where?: InputMaybe<CallMessages_Bool_Exp>;
};

/** Ordering options when selecting data from "CallMessages". */
export type CallMessages_Order_By = {
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: CallMessages */
export type CallMessages_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "CallMessages" */
export type CallMessages_Select_Column =
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "CallMessages" */
export type CallMessages_Set_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type CallMessages_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type CallMessages_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type CallMessages_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "CallMessages" */
export type CallMessages_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CallMessages_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CallMessages_Stream_Cursor_Value_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type CallMessages_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "CallMessages" */
export type CallMessages_Update_Column =
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'updatedAt';

export type CallMessages_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CallMessages_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CallMessages_Set_Input>;
  /** filter the rows which have to be updated */
  where: CallMessages_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CallMessages_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type CallMessages_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type CallMessages_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "Certificates" */
export type Certificates = {
  certificateFileId?: Maybe<Scalars['String']['output']>;
  commonName?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  isCA?: Maybe<Scalars['Boolean']['output']>;
  issuerName?: Maybe<Scalars['String']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  privateKeyFileId?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  signatureAlgorithm?: Maybe<Scalars['String']['output']>;
  signedBy?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  validBefore?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "Certificates" */
export type Certificates_Aggregate = {
  aggregate?: Maybe<Certificates_Aggregate_Fields>;
  nodes: Array<Certificates>;
};

/** aggregate fields of "Certificates" */
export type Certificates_Aggregate_Fields = {
  avg?: Maybe<Certificates_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Certificates_Max_Fields>;
  min?: Maybe<Certificates_Min_Fields>;
  stddev?: Maybe<Certificates_Stddev_Fields>;
  stddev_pop?: Maybe<Certificates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Certificates_Stddev_Samp_Fields>;
  sum?: Maybe<Certificates_Sum_Fields>;
  var_pop?: Maybe<Certificates_Var_Pop_Fields>;
  var_samp?: Maybe<Certificates_Var_Samp_Fields>;
  variance?: Maybe<Certificates_Variance_Fields>;
};

/** aggregate fields of "Certificates" */
export type Certificates_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Certificates_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Certificates_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Certificates". All fields are combined with a logical 'AND'. */
export type Certificates_Bool_Exp = {
  _and?: InputMaybe<Array<Certificates_Bool_Exp>>;
  _not?: InputMaybe<Certificates_Bool_Exp>;
  _or?: InputMaybe<Array<Certificates_Bool_Exp>>;
  certificateFileId?: InputMaybe<String_Comparison_Exp>;
  commonName?: InputMaybe<String_Comparison_Exp>;
  countryName?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  isCA?: InputMaybe<Boolean_Comparison_Exp>;
  issuerName?: InputMaybe<String_Comparison_Exp>;
  keyLength?: InputMaybe<Int_Comparison_Exp>;
  organizationName?: InputMaybe<String_Comparison_Exp>;
  pathLen?: InputMaybe<Int_Comparison_Exp>;
  privateKeyFileId?: InputMaybe<String_Comparison_Exp>;
  serialNumber?: InputMaybe<Bigint_Comparison_Exp>;
  signatureAlgorithm?: InputMaybe<String_Comparison_Exp>;
  signedBy?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  validBefore?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Certificates" */
export type Certificates_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Certificates_pkey'
  /** unique or primary key constraint on columns "issuerName", "serialNumber" */
  | 'Certificates_serialNumber_issuerName_key';

/** input type for incrementing numeric columns in table "Certificates" */
export type Certificates_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "Certificates" */
export type Certificates_Insert_Input = {
  certificateFileId?: InputMaybe<Scalars['String']['input']>;
  commonName?: InputMaybe<Scalars['String']['input']>;
  countryName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isCA?: InputMaybe<Scalars['Boolean']['input']>;
  issuerName?: InputMaybe<Scalars['String']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  organizationName?: InputMaybe<Scalars['String']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  privateKeyFileId?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  signatureAlgorithm?: InputMaybe<Scalars['String']['input']>;
  signedBy?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validBefore?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Certificates_Max_Fields = {
  certificateFileId?: Maybe<Scalars['String']['output']>;
  commonName?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuerName?: Maybe<Scalars['String']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  privateKeyFileId?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  signatureAlgorithm?: Maybe<Scalars['String']['output']>;
  signedBy?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validBefore?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Certificates_Min_Fields = {
  certificateFileId?: Maybe<Scalars['String']['output']>;
  commonName?: Maybe<Scalars['String']['output']>;
  countryName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuerName?: Maybe<Scalars['String']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  privateKeyFileId?: Maybe<Scalars['String']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
  signatureAlgorithm?: Maybe<Scalars['String']['output']>;
  signedBy?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validBefore?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "Certificates" */
export type Certificates_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Certificates>;
};

/** on_conflict condition type for table "Certificates" */
export type Certificates_On_Conflict = {
  constraint: Certificates_Constraint;
  update_columns?: Array<Certificates_Update_Column>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

/** Ordering options when selecting data from "Certificates". */
export type Certificates_Order_By = {
  certificateFileId?: InputMaybe<Order_By>;
  commonName?: InputMaybe<Order_By>;
  countryName?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isCA?: InputMaybe<Order_By>;
  issuerName?: InputMaybe<Order_By>;
  keyLength?: InputMaybe<Order_By>;
  organizationName?: InputMaybe<Order_By>;
  pathLen?: InputMaybe<Order_By>;
  privateKeyFileId?: InputMaybe<Order_By>;
  serialNumber?: InputMaybe<Order_By>;
  signatureAlgorithm?: InputMaybe<Order_By>;
  signedBy?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validBefore?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Certificates */
export type Certificates_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Certificates" */
export type Certificates_Select_Column =
  /** column name */
  | 'certificateFileId'
  /** column name */
  | 'commonName'
  /** column name */
  | 'countryName'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isCA'
  /** column name */
  | 'issuerName'
  /** column name */
  | 'keyLength'
  /** column name */
  | 'organizationName'
  /** column name */
  | 'pathLen'
  /** column name */
  | 'privateKeyFileId'
  /** column name */
  | 'serialNumber'
  /** column name */
  | 'signatureAlgorithm'
  /** column name */
  | 'signedBy'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validBefore';

/** input type for updating data in table "Certificates" */
export type Certificates_Set_Input = {
  certificateFileId?: InputMaybe<Scalars['String']['input']>;
  commonName?: InputMaybe<Scalars['String']['input']>;
  countryName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isCA?: InputMaybe<Scalars['Boolean']['input']>;
  issuerName?: InputMaybe<Scalars['String']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  organizationName?: InputMaybe<Scalars['String']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  privateKeyFileId?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  signatureAlgorithm?: InputMaybe<Scalars['String']['input']>;
  signedBy?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validBefore?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Certificates_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Certificates_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Certificates_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Certificates" */
export type Certificates_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Certificates_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Certificates_Stream_Cursor_Value_Input = {
  certificateFileId?: InputMaybe<Scalars['String']['input']>;
  commonName?: InputMaybe<Scalars['String']['input']>;
  countryName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isCA?: InputMaybe<Scalars['Boolean']['input']>;
  issuerName?: InputMaybe<Scalars['String']['input']>;
  keyLength?: InputMaybe<Scalars['Int']['input']>;
  organizationName?: InputMaybe<Scalars['String']['input']>;
  pathLen?: InputMaybe<Scalars['Int']['input']>;
  privateKeyFileId?: InputMaybe<Scalars['String']['input']>;
  serialNumber?: InputMaybe<Scalars['bigint']['input']>;
  signatureAlgorithm?: InputMaybe<Scalars['String']['input']>;
  signedBy?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validBefore?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Certificates_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  keyLength?: Maybe<Scalars['Int']['output']>;
  pathLen?: Maybe<Scalars['Int']['output']>;
  serialNumber?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "Certificates" */
export type Certificates_Update_Column =
  /** column name */
  | 'certificateFileId'
  /** column name */
  | 'commonName'
  /** column name */
  | 'countryName'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isCA'
  /** column name */
  | 'issuerName'
  /** column name */
  | 'keyLength'
  /** column name */
  | 'organizationName'
  /** column name */
  | 'pathLen'
  /** column name */
  | 'privateKeyFileId'
  /** column name */
  | 'serialNumber'
  /** column name */
  | 'signatureAlgorithm'
  /** column name */
  | 'signedBy'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validBefore';

export type Certificates_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Certificates_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Certificates_Set_Input>;
  /** filter the rows which have to be updated */
  where: Certificates_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Certificates_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Certificates_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Certificates_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  keyLength?: Maybe<Scalars['Float']['output']>;
  pathLen?: Maybe<Scalars['Float']['output']>;
  serialNumber?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "ChargingNeeds" */
export type ChargingNeeds = {
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  acChargingParameters?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  dcChargingParameters?: Maybe<Scalars['jsonb']['output']>;
  departureTime?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  requestedEnergyTransfer?: Maybe<Scalars['String']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ChargingNeeds" */
export type ChargingNeedsAcChargingParametersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "ChargingNeeds" */
export type ChargingNeedsDcChargingParametersArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ChargingNeeds" */
export type ChargingNeeds_Aggregate = {
  aggregate?: Maybe<ChargingNeeds_Aggregate_Fields>;
  nodes: Array<ChargingNeeds>;
};

export type ChargingNeeds_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp_Count>;
};

export type ChargingNeeds_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingNeeds_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingNeeds" */
export type ChargingNeeds_Aggregate_Fields = {
  avg?: Maybe<ChargingNeeds_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingNeeds_Max_Fields>;
  min?: Maybe<ChargingNeeds_Min_Fields>;
  stddev?: Maybe<ChargingNeeds_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingNeeds_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingNeeds_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingNeeds_Sum_Fields>;
  var_pop?: Maybe<ChargingNeeds_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingNeeds_Var_Samp_Fields>;
  variance?: Maybe<ChargingNeeds_Variance_Fields>;
};

/** aggregate fields of "ChargingNeeds" */
export type ChargingNeeds_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingNeeds" */
export type ChargingNeeds_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingNeeds_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingNeeds_Max_Order_By>;
  min?: InputMaybe<ChargingNeeds_Min_Order_By>;
  stddev?: InputMaybe<ChargingNeeds_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingNeeds_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingNeeds_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingNeeds_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingNeeds_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingNeeds_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingNeeds_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ChargingNeeds_Append_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "ChargingNeeds" */
export type ChargingNeeds_Arr_Rel_Insert_Input = {
  data: Array<ChargingNeeds_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingNeeds_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingNeeds_Avg_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Avg_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingNeeds". All fields are combined with a logical 'AND'. */
export type ChargingNeeds_Bool_Exp = {
  Evse?: InputMaybe<Evses_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingNeeds_Bool_Exp>>;
  _not?: InputMaybe<ChargingNeeds_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingNeeds_Bool_Exp>>;
  acChargingParameters?: InputMaybe<Jsonb_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dcChargingParameters?: InputMaybe<Jsonb_Comparison_Exp>;
  departureTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  maxScheduleTuples?: InputMaybe<Int_Comparison_Exp>;
  requestedEnergyTransfer?: InputMaybe<String_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingNeeds" */
export type ChargingNeeds_Constraint =
  /** unique or primary key constraint on columns "evseDatabaseId", "transactionDatabaseId" */
  | 'ChargingNeeds_evseDatabaseId_transactionDatabaseId_key'
  /** unique or primary key constraint on columns "id" */
  | 'ChargingNeeds_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ChargingNeeds_Delete_At_Path_Input = {
  acChargingParameters?: InputMaybe<Array<Scalars['String']['input']>>;
  dcChargingParameters?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ChargingNeeds_Delete_Elem_Input = {
  acChargingParameters?: InputMaybe<Scalars['Int']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ChargingNeeds_Delete_Key_Input = {
  acChargingParameters?: InputMaybe<Scalars['String']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "ChargingNeeds" */
export type ChargingNeeds_Inc_Input = {
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingNeeds" */
export type ChargingNeeds_Insert_Input = {
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  departureTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  requestedEnergyTransfer?: InputMaybe<Scalars['String']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingNeeds_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  departureTime?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  requestedEnergyTransfer?: Maybe<Scalars['String']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  departureTime?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  requestedEnergyTransfer?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingNeeds_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  departureTime?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  requestedEnergyTransfer?: Maybe<Scalars['String']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  departureTime?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  requestedEnergyTransfer?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingNeeds" */
export type ChargingNeeds_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingNeeds>;
};

/** on_conflict condition type for table "ChargingNeeds" */
export type ChargingNeeds_On_Conflict = {
  constraint: ChargingNeeds_Constraint;
  update_columns?: Array<ChargingNeeds_Update_Column>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingNeeds". */
export type ChargingNeeds_Order_By = {
  Evse?: InputMaybe<Evses_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  acChargingParameters?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dcChargingParameters?: InputMaybe<Order_By>;
  departureTime?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  requestedEnergyTransfer?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingNeeds */
export type ChargingNeeds_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ChargingNeeds_Prepend_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "ChargingNeeds" */
export type ChargingNeeds_Select_Column =
  /** column name */
  | 'acChargingParameters'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dcChargingParameters'
  /** column name */
  | 'departureTime'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'maxScheduleTuples'
  /** column name */
  | 'requestedEnergyTransfer'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ChargingNeeds" */
export type ChargingNeeds_Set_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  departureTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  requestedEnergyTransfer?: InputMaybe<Scalars['String']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingNeeds_Stddev_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Stddev_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingNeeds_Stddev_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Stddev_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingNeeds_Stddev_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Stddev_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingNeeds" */
export type ChargingNeeds_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingNeeds_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingNeeds_Stream_Cursor_Value_Input = {
  acChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dcChargingParameters?: InputMaybe<Scalars['jsonb']['input']>;
  departureTime?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxScheduleTuples?: InputMaybe<Scalars['Int']['input']>;
  requestedEnergyTransfer?: InputMaybe<Scalars['String']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingNeeds_Sum_Fields = {
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Sum_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingNeeds" */
export type ChargingNeeds_Update_Column =
  /** column name */
  | 'acChargingParameters'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dcChargingParameters'
  /** column name */
  | 'departureTime'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'maxScheduleTuples'
  /** column name */
  | 'requestedEnergyTransfer'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt';

export type ChargingNeeds_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ChargingNeeds_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ChargingNeeds_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ChargingNeeds_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ChargingNeeds_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingNeeds_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ChargingNeeds_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingNeeds_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingNeeds_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingNeeds_Var_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Var_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingNeeds_Var_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Var_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingNeeds_Variance_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  maxScheduleTuples?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingNeeds" */
export type ChargingNeeds_Variance_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxScheduleTuples?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingProfiles" */
export type ChargingProfiles = {
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  chargingLimitSource?: Maybe<Scalars['String']['output']>;
  chargingProfileKind?: Maybe<Scalars['String']['output']>;
  chargingProfilePurpose?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  recurrencyKind?: Maybe<Scalars['String']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  validFrom?: Maybe<Scalars['timestamptz']['output']>;
  validTo?: Maybe<Scalars['timestamptz']['output']>;
};

/** columns and relationships of "ChargingProfiles" */
export type ChargingProfilesChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** columns and relationships of "ChargingProfiles" */
export type ChargingProfilesChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** aggregated selection of "ChargingProfiles" */
export type ChargingProfiles_Aggregate = {
  aggregate?: Maybe<ChargingProfiles_Aggregate_Fields>;
  nodes: Array<ChargingProfiles>;
};

export type ChargingProfiles_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp_Count>;
};

export type ChargingProfiles_Aggregate_Bool_Exp_Bool_And = {
  arguments: ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingProfiles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingProfiles_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingProfiles_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingProfiles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingProfiles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingProfiles" */
export type ChargingProfiles_Aggregate_Fields = {
  avg?: Maybe<ChargingProfiles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingProfiles_Max_Fields>;
  min?: Maybe<ChargingProfiles_Min_Fields>;
  stddev?: Maybe<ChargingProfiles_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingProfiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingProfiles_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingProfiles_Sum_Fields>;
  var_pop?: Maybe<ChargingProfiles_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingProfiles_Var_Samp_Fields>;
  variance?: Maybe<ChargingProfiles_Variance_Fields>;
};

/** aggregate fields of "ChargingProfiles" */
export type ChargingProfiles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingProfiles" */
export type ChargingProfiles_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingProfiles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingProfiles_Max_Order_By>;
  min?: InputMaybe<ChargingProfiles_Min_Order_By>;
  stddev?: InputMaybe<ChargingProfiles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingProfiles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingProfiles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingProfiles_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingProfiles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingProfiles_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingProfiles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChargingProfiles" */
export type ChargingProfiles_Arr_Rel_Insert_Input = {
  data: Array<ChargingProfiles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingProfiles_Avg_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Avg_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingProfiles". All fields are combined with a logical 'AND'. */
export type ChargingProfiles_Bool_Exp = {
  ChargingSchedules?: InputMaybe<ChargingSchedules_Bool_Exp>;
  ChargingSchedules_aggregate?: InputMaybe<ChargingSchedules_Aggregate_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingProfiles_Bool_Exp>>;
  _not?: InputMaybe<ChargingProfiles_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingProfiles_Bool_Exp>>;
  chargingLimitSource?: InputMaybe<String_Comparison_Exp>;
  chargingProfileKind?: InputMaybe<String_Comparison_Exp>;
  chargingProfilePurpose?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  recurrencyKind?: InputMaybe<String_Comparison_Exp>;
  stackLevel?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  validFrom?: InputMaybe<Timestamptz_Comparison_Exp>;
  validTo?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingProfiles" */
export type ChargingProfiles_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  | 'ChargingProfiles_pkey'
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'ChargingProfiles_stationId_id_key';

/** input type for incrementing numeric columns in table "ChargingProfiles" */
export type ChargingProfiles_Inc_Input = {
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingProfiles" */
export type ChargingProfiles_Insert_Input = {
  ChargingSchedules?: InputMaybe<ChargingSchedules_Arr_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  chargingLimitSource?: InputMaybe<Scalars['String']['input']>;
  chargingProfileKind?: InputMaybe<Scalars['String']['input']>;
  chargingProfilePurpose?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  recurrencyKind?: InputMaybe<Scalars['String']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validFrom?: InputMaybe<Scalars['timestamptz']['input']>;
  validTo?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingProfiles_Max_Fields = {
  chargingLimitSource?: Maybe<Scalars['String']['output']>;
  chargingProfileKind?: Maybe<Scalars['String']['output']>;
  chargingProfilePurpose?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  recurrencyKind?: Maybe<Scalars['String']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validFrom?: Maybe<Scalars['timestamptz']['output']>;
  validTo?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Max_Order_By = {
  chargingLimitSource?: InputMaybe<Order_By>;
  chargingProfileKind?: InputMaybe<Order_By>;
  chargingProfilePurpose?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  recurrencyKind?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validFrom?: InputMaybe<Order_By>;
  validTo?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingProfiles_Min_Fields = {
  chargingLimitSource?: Maybe<Scalars['String']['output']>;
  chargingProfileKind?: Maybe<Scalars['String']['output']>;
  chargingProfilePurpose?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  recurrencyKind?: Maybe<Scalars['String']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  validFrom?: Maybe<Scalars['timestamptz']['output']>;
  validTo?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Min_Order_By = {
  chargingLimitSource?: InputMaybe<Order_By>;
  chargingProfileKind?: InputMaybe<Order_By>;
  chargingProfilePurpose?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  recurrencyKind?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validFrom?: InputMaybe<Order_By>;
  validTo?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingProfiles" */
export type ChargingProfiles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingProfiles>;
};

/** input type for inserting object relation for remote table "ChargingProfiles" */
export type ChargingProfiles_Obj_Rel_Insert_Input = {
  data: ChargingProfiles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** on_conflict condition type for table "ChargingProfiles" */
export type ChargingProfiles_On_Conflict = {
  constraint: ChargingProfiles_Constraint;
  update_columns?: Array<ChargingProfiles_Update_Column>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingProfiles". */
export type ChargingProfiles_Order_By = {
  ChargingSchedules_aggregate?: InputMaybe<ChargingSchedules_Aggregate_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  chargingLimitSource?: InputMaybe<Order_By>;
  chargingProfileKind?: InputMaybe<Order_By>;
  chargingProfilePurpose?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  recurrencyKind?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  validFrom?: InputMaybe<Order_By>;
  validTo?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingProfiles */
export type ChargingProfiles_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "ChargingProfiles" */
export type ChargingProfiles_Select_Column =
  /** column name */
  | 'chargingLimitSource'
  /** column name */
  | 'chargingProfileKind'
  /** column name */
  | 'chargingProfilePurpose'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'recurrencyKind'
  /** column name */
  | 'stackLevel'
  /** column name */
  | 'stationId'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validFrom'
  /** column name */
  | 'validTo';

/** select "ChargingProfiles_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ChargingProfiles" */
export type ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isActive';

/** select "ChargingProfiles_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ChargingProfiles" */
export type ChargingProfiles_Select_Column_ChargingProfiles_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isActive';

/** input type for updating data in table "ChargingProfiles" */
export type ChargingProfiles_Set_Input = {
  chargingLimitSource?: InputMaybe<Scalars['String']['input']>;
  chargingProfileKind?: InputMaybe<Scalars['String']['input']>;
  chargingProfilePurpose?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  recurrencyKind?: InputMaybe<Scalars['String']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validFrom?: InputMaybe<Scalars['timestamptz']['input']>;
  validTo?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingProfiles_Stddev_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Stddev_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingProfiles_Stddev_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Stddev_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingProfiles_Stddev_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Stddev_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingProfiles" */
export type ChargingProfiles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingProfiles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingProfiles_Stream_Cursor_Value_Input = {
  chargingLimitSource?: InputMaybe<Scalars['String']['input']>;
  chargingProfileKind?: InputMaybe<Scalars['String']['input']>;
  chargingProfilePurpose?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  recurrencyKind?: InputMaybe<Scalars['String']['input']>;
  stackLevel?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  validFrom?: InputMaybe<Scalars['timestamptz']['input']>;
  validTo?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingProfiles_Sum_Fields = {
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stackLevel?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Sum_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingProfiles" */
export type ChargingProfiles_Update_Column =
  /** column name */
  | 'chargingLimitSource'
  /** column name */
  | 'chargingProfileKind'
  /** column name */
  | 'chargingProfilePurpose'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'recurrencyKind'
  /** column name */
  | 'stackLevel'
  /** column name */
  | 'stationId'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'validFrom'
  /** column name */
  | 'validTo';

export type ChargingProfiles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingProfiles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingProfiles_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingProfiles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingProfiles_Var_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Var_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingProfiles_Var_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Var_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingProfiles_Variance_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  stackLevel?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingProfiles" */
export type ChargingProfiles_Variance_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stackLevel?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedules = {
  /** An object relationship */
  ChargingProfile?: Maybe<ChargingProfiles>;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  chargingSchedulePeriod?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  startSchedule?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedulesSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedulesSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** columns and relationships of "ChargingSchedules" */
export type ChargingSchedulesChargingSchedulePeriodArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ChargingSchedules" */
export type ChargingSchedules_Aggregate = {
  aggregate?: Maybe<ChargingSchedules_Aggregate_Fields>;
  nodes: Array<ChargingSchedules>;
};

export type ChargingSchedules_Aggregate_Bool_Exp = {
  count?: InputMaybe<ChargingSchedules_Aggregate_Bool_Exp_Count>;
};

export type ChargingSchedules_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingSchedules_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingSchedules" */
export type ChargingSchedules_Aggregate_Fields = {
  avg?: Maybe<ChargingSchedules_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingSchedules_Max_Fields>;
  min?: Maybe<ChargingSchedules_Min_Fields>;
  stddev?: Maybe<ChargingSchedules_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingSchedules_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingSchedules_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingSchedules_Sum_Fields>;
  var_pop?: Maybe<ChargingSchedules_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingSchedules_Var_Samp_Fields>;
  variance?: Maybe<ChargingSchedules_Variance_Fields>;
};

/** aggregate fields of "ChargingSchedules" */
export type ChargingSchedules_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingSchedules" */
export type ChargingSchedules_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingSchedules_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingSchedules_Max_Order_By>;
  min?: InputMaybe<ChargingSchedules_Min_Order_By>;
  stddev?: InputMaybe<ChargingSchedules_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingSchedules_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingSchedules_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingSchedules_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingSchedules_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingSchedules_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingSchedules_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ChargingSchedules_Append_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "ChargingSchedules" */
export type ChargingSchedules_Arr_Rel_Insert_Input = {
  data: Array<ChargingSchedules_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingSchedules_Avg_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Avg_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingSchedules". All fields are combined with a logical 'AND'. */
export type ChargingSchedules_Bool_Exp = {
  ChargingProfile?: InputMaybe<ChargingProfiles_Bool_Exp>;
  SalesTariffs?: InputMaybe<SalesTariffs_Bool_Exp>;
  SalesTariffs_aggregate?: InputMaybe<SalesTariffs_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingSchedules_Bool_Exp>>;
  _not?: InputMaybe<ChargingSchedules_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingSchedules_Bool_Exp>>;
  chargingProfileDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  chargingRateUnit?: InputMaybe<String_Comparison_Exp>;
  chargingSchedulePeriod?: InputMaybe<Jsonb_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  duration?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  minChargingRate?: InputMaybe<Numeric_Comparison_Exp>;
  startSchedule?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingSchedules" */
export type ChargingSchedules_Constraint =
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'ChargingSchedules_id_stationId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'ChargingSchedules_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ChargingSchedules_Delete_At_Path_Input = {
  chargingSchedulePeriod?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ChargingSchedules_Delete_Elem_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ChargingSchedules_Delete_Key_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "ChargingSchedules" */
export type ChargingSchedules_Inc_Input = {
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "ChargingSchedules" */
export type ChargingSchedules_Insert_Input = {
  ChargingProfile?: InputMaybe<ChargingProfiles_Obj_Rel_Insert_Input>;
  SalesTariffs?: InputMaybe<SalesTariffs_Arr_Rel_Insert_Input>;
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  startSchedule?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingSchedules_Max_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  startSchedule?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Max_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  startSchedule?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingSchedules_Min_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
  startSchedule?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Min_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  startSchedule?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingSchedules" */
export type ChargingSchedules_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingSchedules>;
};

/** input type for inserting object relation for remote table "ChargingSchedules" */
export type ChargingSchedules_Obj_Rel_Insert_Input = {
  data: ChargingSchedules_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** on_conflict condition type for table "ChargingSchedules" */
export type ChargingSchedules_On_Conflict = {
  constraint: ChargingSchedules_Constraint;
  update_columns?: Array<ChargingSchedules_Update_Column>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingSchedules". */
export type ChargingSchedules_Order_By = {
  ChargingProfile?: InputMaybe<ChargingProfiles_Order_By>;
  SalesTariffs_aggregate?: InputMaybe<SalesTariffs_Aggregate_Order_By>;
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  chargingRateUnit?: InputMaybe<Order_By>;
  chargingSchedulePeriod?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
  startSchedule?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingSchedules */
export type ChargingSchedules_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ChargingSchedules_Prepend_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "ChargingSchedules" */
export type ChargingSchedules_Select_Column =
  /** column name */
  | 'chargingProfileDatabaseId'
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'duration'
  /** column name */
  | 'id'
  /** column name */
  | 'minChargingRate'
  /** column name */
  | 'startSchedule'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ChargingSchedules" */
export type ChargingSchedules_Set_Input = {
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  startSchedule?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingSchedules_Stddev_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Stddev_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingSchedules_Stddev_Pop_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Stddev_Pop_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingSchedules_Stddev_Samp_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Stddev_Samp_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingSchedules" */
export type ChargingSchedules_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingSchedules_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingSchedules_Stream_Cursor_Value_Input = {
  chargingProfileDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  minChargingRate?: InputMaybe<Scalars['numeric']['input']>;
  startSchedule?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingSchedules_Sum_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  minChargingRate?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Sum_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingSchedules" */
export type ChargingSchedules_Update_Column =
  /** column name */
  | 'chargingProfileDatabaseId'
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'duration'
  /** column name */
  | 'id'
  /** column name */
  | 'minChargingRate'
  /** column name */
  | 'startSchedule'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

export type ChargingSchedules_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ChargingSchedules_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ChargingSchedules_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ChargingSchedules_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ChargingSchedules_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingSchedules_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ChargingSchedules_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingSchedules_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingSchedules_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingSchedules_Var_Pop_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Var_Pop_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingSchedules_Var_Samp_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Var_Samp_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingSchedules_Variance_Fields = {
  chargingProfileDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  duration?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  minChargingRate?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingSchedules" */
export type ChargingSchedules_Variance_Order_By = {
  chargingProfileDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  minChargingRate?: InputMaybe<Order_By>;
};

/** columns and relationships of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos = {
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  publicKeyFileId?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate = {
  aggregate?: Maybe<ChargingStationSecurityInfos_Aggregate_Fields>;
  nodes: Array<ChargingStationSecurityInfos>;
};

/** aggregate fields of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate_Fields = {
  avg?: Maybe<ChargingStationSecurityInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingStationSecurityInfos_Max_Fields>;
  min?: Maybe<ChargingStationSecurityInfos_Min_Fields>;
  stddev?: Maybe<ChargingStationSecurityInfos_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingStationSecurityInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingStationSecurityInfos_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingStationSecurityInfos_Sum_Fields>;
  var_pop?: Maybe<ChargingStationSecurityInfos_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingStationSecurityInfos_Var_Samp_Fields>;
  variance?: Maybe<ChargingStationSecurityInfos_Variance_Fields>;
};

/** aggregate fields of "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ChargingStationSecurityInfos_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "ChargingStationSecurityInfos". All fields are combined with a logical 'AND'. */
export type ChargingStationSecurityInfos_Bool_Exp = {
  _and?: InputMaybe<Array<ChargingStationSecurityInfos_Bool_Exp>>;
  _not?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingStationSecurityInfos_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  publicKeyFileId?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'ChargingStationSecurityInfos_pkey'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key'
  /** unique or primary key constraint on columns "stationId" */
  | 'ChargingStationSecurityInfos_stationId_key1';

/** input type for incrementing numeric columns in table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  publicKeyFileId?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingStationSecurityInfos_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  publicKeyFileId?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type ChargingStationSecurityInfos_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  publicKeyFileId?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingStationSecurityInfos>;
};

/** on_conflict condition type for table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_On_Conflict = {
  constraint: ChargingStationSecurityInfos_Constraint;
  update_columns?: Array<ChargingStationSecurityInfos_Update_Column>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingStationSecurityInfos". */
export type ChargingStationSecurityInfos_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  publicKeyFileId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingStationSecurityInfos */
export type ChargingStationSecurityInfos_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'publicKeyFileId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  publicKeyFileId?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingStationSecurityInfos_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ChargingStationSecurityInfos_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ChargingStationSecurityInfos_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingStationSecurityInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingStationSecurityInfos_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  publicKeyFileId?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingStationSecurityInfos_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "ChargingStationSecurityInfos" */
export type ChargingStationSecurityInfos_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'publicKeyFileId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

export type ChargingStationSecurityInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingStationSecurityInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingStationSecurityInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingStationSecurityInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingStationSecurityInfos_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ChargingStationSecurityInfos_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ChargingStationSecurityInfos_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStations = {
  /** An object relationship */
  Location?: Maybe<Locations>;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['String']['output'];
  isOnline?: Maybe<Scalars['Boolean']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "ChargingStations" */
export type ChargingStationsTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** aggregated selection of "ChargingStations" */
export type ChargingStations_Aggregate = {
  aggregate?: Maybe<ChargingStations_Aggregate_Fields>;
  nodes: Array<ChargingStations>;
};

export type ChargingStations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ChargingStations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ChargingStations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ChargingStations_Aggregate_Bool_Exp_Count>;
};

export type ChargingStations_Aggregate_Bool_Exp_Bool_And = {
  arguments: ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingStations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ChargingStations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ChargingStations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ChargingStations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ChargingStations" */
export type ChargingStations_Aggregate_Fields = {
  avg?: Maybe<ChargingStations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ChargingStations_Max_Fields>;
  min?: Maybe<ChargingStations_Min_Fields>;
  stddev?: Maybe<ChargingStations_Stddev_Fields>;
  stddev_pop?: Maybe<ChargingStations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ChargingStations_Stddev_Samp_Fields>;
  sum?: Maybe<ChargingStations_Sum_Fields>;
  var_pop?: Maybe<ChargingStations_Var_Pop_Fields>;
  var_samp?: Maybe<ChargingStations_Var_Samp_Fields>;
  variance?: Maybe<ChargingStations_Variance_Fields>;
};

/** aggregate fields of "ChargingStations" */
export type ChargingStations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ChargingStations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ChargingStations" */
export type ChargingStations_Aggregate_Order_By = {
  avg?: InputMaybe<ChargingStations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ChargingStations_Max_Order_By>;
  min?: InputMaybe<ChargingStations_Min_Order_By>;
  stddev?: InputMaybe<ChargingStations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ChargingStations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ChargingStations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ChargingStations_Sum_Order_By>;
  var_pop?: InputMaybe<ChargingStations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ChargingStations_Var_Samp_Order_By>;
  variance?: InputMaybe<ChargingStations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ChargingStations" */
export type ChargingStations_Arr_Rel_Insert_Input = {
  data: Array<ChargingStations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** aggregate avg on columns */
export type ChargingStations_Avg_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ChargingStations" */
export type ChargingStations_Avg_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ChargingStations". All fields are combined with a logical 'AND'. */
export type ChargingStations_Bool_Exp = {
  Location?: InputMaybe<Locations_Bool_Exp>;
  StatusNotifications?: InputMaybe<StatusNotifications_Bool_Exp>;
  StatusNotifications_aggregate?: InputMaybe<StatusNotifications_Aggregate_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<ChargingStations_Bool_Exp>>;
  _not?: InputMaybe<ChargingStations_Bool_Exp>;
  _or?: InputMaybe<Array<ChargingStations_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  isOnline?: InputMaybe<Boolean_Comparison_Exp>;
  locationId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ChargingStations" */
export type ChargingStations_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ChargingStations_pkey';

/** input type for incrementing numeric columns in table "ChargingStations" */
export type ChargingStations_Inc_Input = {
  locationId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ChargingStations" */
export type ChargingStations_Insert_Input = {
  Location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  StatusNotifications?: InputMaybe<StatusNotifications_Arr_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ChargingStations_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ChargingStations" */
export type ChargingStations_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ChargingStations_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ChargingStations" */
export type ChargingStations_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ChargingStations" */
export type ChargingStations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ChargingStations>;
};

/** input type for inserting object relation for remote table "ChargingStations" */
export type ChargingStations_Obj_Rel_Insert_Input = {
  data: ChargingStations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** on_conflict condition type for table "ChargingStations" */
export type ChargingStations_On_Conflict = {
  constraint: ChargingStations_Constraint;
  update_columns?: Array<ChargingStations_Update_Column>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** Ordering options when selecting data from "ChargingStations". */
export type ChargingStations_Order_By = {
  Location?: InputMaybe<Locations_Order_By>;
  StatusNotifications_aggregate?: InputMaybe<StatusNotifications_Aggregate_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isOnline?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ChargingStations */
export type ChargingStations_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** select columns of table "ChargingStations" */
export type ChargingStations_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isOnline'
  /** column name */
  | 'locationId'
  /** column name */
  | 'updatedAt';

/** select "ChargingStations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ChargingStations" */
export type ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isOnline';

/** select "ChargingStations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ChargingStations" */
export type ChargingStations_Select_Column_ChargingStations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isOnline';

/** input type for updating data in table "ChargingStations" */
export type ChargingStations_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ChargingStations_Stddev_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ChargingStations" */
export type ChargingStations_Stddev_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ChargingStations_Stddev_Pop_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ChargingStations" */
export type ChargingStations_Stddev_Pop_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ChargingStations_Stddev_Samp_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ChargingStations" */
export type ChargingStations_Stddev_Samp_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ChargingStations" */
export type ChargingStations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ChargingStations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ChargingStations_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ChargingStations_Sum_Fields = {
  locationId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ChargingStations" */
export type ChargingStations_Sum_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** update columns of table "ChargingStations" */
export type ChargingStations_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'isOnline'
  /** column name */
  | 'locationId'
  /** column name */
  | 'updatedAt';

export type ChargingStations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ChargingStations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ChargingStations_Set_Input>;
  /** filter the rows which have to be updated */
  where: ChargingStations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ChargingStations_Var_Pop_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ChargingStations" */
export type ChargingStations_Var_Pop_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ChargingStations_Var_Samp_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ChargingStations" */
export type ChargingStations_Var_Samp_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ChargingStations_Variance_Fields = {
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ChargingStations" */
export type ChargingStations_Variance_Order_By = {
  locationId?: InputMaybe<Order_By>;
};

/** columns and relationships of "ClientCredentialsRoles" */
export type ClientCredentialsRoles = {
  /** An array relationship */
  BusinessDetails: Array<BusinessDetails>;
  /** An aggregate relationship */
  BusinessDetails_aggregate: BusinessDetails_Aggregate;
  /** An object relationship */
  ClientInformation?: Maybe<ClientInformations>;
  /** An object relationship */
  CpoTenant?: Maybe<CpoTenants>;
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  party_id?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['enum_ClientCredentialsRoles_role']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ClientCredentialsRoles" */
export type ClientCredentialsRolesBusinessDetailsArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

/** columns and relationships of "ClientCredentialsRoles" */
export type ClientCredentialsRolesBusinessDetails_AggregateArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

/** aggregated selection of "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Aggregate = {
  aggregate?: Maybe<ClientCredentialsRoles_Aggregate_Fields>;
  nodes: Array<ClientCredentialsRoles>;
};

export type ClientCredentialsRoles_Aggregate_Bool_Exp = {
  count?: InputMaybe<ClientCredentialsRoles_Aggregate_Bool_Exp_Count>;
};

export type ClientCredentialsRoles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Aggregate_Fields = {
  avg?: Maybe<ClientCredentialsRoles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientCredentialsRoles_Max_Fields>;
  min?: Maybe<ClientCredentialsRoles_Min_Fields>;
  stddev?: Maybe<ClientCredentialsRoles_Stddev_Fields>;
  stddev_pop?: Maybe<ClientCredentialsRoles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ClientCredentialsRoles_Stddev_Samp_Fields>;
  sum?: Maybe<ClientCredentialsRoles_Sum_Fields>;
  var_pop?: Maybe<ClientCredentialsRoles_Var_Pop_Fields>;
  var_samp?: Maybe<ClientCredentialsRoles_Var_Samp_Fields>;
  variance?: Maybe<ClientCredentialsRoles_Variance_Fields>;
};

/** aggregate fields of "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Aggregate_Order_By = {
  avg?: InputMaybe<ClientCredentialsRoles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ClientCredentialsRoles_Max_Order_By>;
  min?: InputMaybe<ClientCredentialsRoles_Min_Order_By>;
  stddev?: InputMaybe<ClientCredentialsRoles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ClientCredentialsRoles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ClientCredentialsRoles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ClientCredentialsRoles_Sum_Order_By>;
  var_pop?: InputMaybe<ClientCredentialsRoles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ClientCredentialsRoles_Var_Samp_Order_By>;
  variance?: InputMaybe<ClientCredentialsRoles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Arr_Rel_Insert_Input = {
  data: Array<ClientCredentialsRoles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientCredentialsRoles_On_Conflict>;
};

/** aggregate avg on columns */
export type ClientCredentialsRoles_Avg_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Avg_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ClientCredentialsRoles". All fields are combined with a logical 'AND'. */
export type ClientCredentialsRoles_Bool_Exp = {
  BusinessDetails?: InputMaybe<BusinessDetails_Bool_Exp>;
  BusinessDetails_aggregate?: InputMaybe<BusinessDetails_Aggregate_Bool_Exp>;
  ClientInformation?: InputMaybe<ClientInformations_Bool_Exp>;
  CpoTenant?: InputMaybe<CpoTenants_Bool_Exp>;
  _and?: InputMaybe<Array<ClientCredentialsRoles_Bool_Exp>>;
  _not?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
  _or?: InputMaybe<Array<ClientCredentialsRoles_Bool_Exp>>;
  clientInformationId?: InputMaybe<Int_Comparison_Exp>;
  country_code?: InputMaybe<String_Comparison_Exp>;
  cpoTenantId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  party_id?: InputMaybe<String_Comparison_Exp>;
  role?: InputMaybe<Enum_ClientCredentialsRoles_Role_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ClientCredentialsRoles_pkey';

/** input type for incrementing numeric columns in table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Inc_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Insert_Input = {
  BusinessDetails?: InputMaybe<BusinessDetails_Arr_Rel_Insert_Input>;
  ClientInformation?: InputMaybe<ClientInformations_Obj_Rel_Insert_Input>;
  CpoTenant?: InputMaybe<CpoTenants_Obj_Rel_Insert_Input>;
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ClientCredentialsRoles_Max_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['enum_ClientCredentialsRoles_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Max_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ClientCredentialsRoles_Min_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['enum_ClientCredentialsRoles_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Min_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientCredentialsRoles>;
};

/** input type for inserting object relation for remote table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Obj_Rel_Insert_Input = {
  data: ClientCredentialsRoles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientCredentialsRoles_On_Conflict>;
};

/** on_conflict condition type for table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_On_Conflict = {
  constraint: ClientCredentialsRoles_Constraint;
  update_columns?: Array<ClientCredentialsRoles_Update_Column>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

/** Ordering options when selecting data from "ClientCredentialsRoles". */
export type ClientCredentialsRoles_Order_By = {
  BusinessDetails_aggregate?: InputMaybe<BusinessDetails_Aggregate_Order_By>;
  ClientInformation?: InputMaybe<ClientInformations_Order_By>;
  CpoTenant?: InputMaybe<CpoTenants_Order_By>;
  clientInformationId?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ClientCredentialsRoles */
export type ClientCredentialsRoles_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Select_Column =
  /** column name */
  | 'clientInformationId'
  /** column name */
  | 'country_code'
  /** column name */
  | 'cpoTenantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'party_id'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Set_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ClientCredentialsRoles_Stddev_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Stddev_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ClientCredentialsRoles_Stddev_Pop_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Stddev_Pop_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ClientCredentialsRoles_Stddev_Samp_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Stddev_Samp_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ClientCredentialsRoles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientCredentialsRoles_Stream_Cursor_Value_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ClientCredentialsRoles_Sum_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Sum_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Update_Column =
  /** column name */
  | 'clientInformationId'
  /** column name */
  | 'country_code'
  /** column name */
  | 'cpoTenantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'party_id'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt';

export type ClientCredentialsRoles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientCredentialsRoles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientCredentialsRoles_Set_Input>;
  /** filter the rows which have to be updated */
  where: ClientCredentialsRoles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ClientCredentialsRoles_Var_Pop_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Var_Pop_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ClientCredentialsRoles_Var_Samp_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Var_Samp_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ClientCredentialsRoles_Variance_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ClientCredentialsRoles" */
export type ClientCredentialsRoles_Variance_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ClientInformations" */
export type ClientInformations = {
  /** An array relationship */
  ClientCredentialsRoles: Array<ClientCredentialsRoles>;
  /** An aggregate relationship */
  ClientCredentialsRoles_aggregate: ClientCredentialsRoles_Aggregate;
  /** An array relationship */
  ClientVersions: Array<ClientVersions>;
  /** An aggregate relationship */
  ClientVersions_aggregate: ClientVersions_Aggregate;
  /** An object relationship */
  CpoTenant?: Maybe<CpoTenants>;
  /** An array relationship */
  ServerVersions: Array<ServerVersions>;
  /** An aggregate relationship */
  ServerVersions_aggregate: ServerVersions_Aggregate;
  clientToken?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  registered?: Maybe<Scalars['Boolean']['output']>;
  serverToken?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ClientInformations" */
export type ClientInformationsClientCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

/** columns and relationships of "ClientInformations" */
export type ClientInformationsClientCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

/** columns and relationships of "ClientInformations" */
export type ClientInformationsClientVersionsArgs = {
  distinct_on?: InputMaybe<Array<ClientVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientVersions_Order_By>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

/** columns and relationships of "ClientInformations" */
export type ClientInformationsClientVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientVersions_Order_By>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

/** columns and relationships of "ClientInformations" */
export type ClientInformationsServerVersionsArgs = {
  distinct_on?: InputMaybe<Array<ServerVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerVersions_Order_By>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

/** columns and relationships of "ClientInformations" */
export type ClientInformationsServerVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerVersions_Order_By>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

/** aggregated selection of "ClientInformations" */
export type ClientInformations_Aggregate = {
  aggregate?: Maybe<ClientInformations_Aggregate_Fields>;
  nodes: Array<ClientInformations>;
};

export type ClientInformations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ClientInformations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ClientInformations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ClientInformations_Aggregate_Bool_Exp_Count>;
};

export type ClientInformations_Aggregate_Bool_Exp_Bool_And = {
  arguments: ClientInformations_Select_Column_ClientInformations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientInformations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ClientInformations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ClientInformations_Select_Column_ClientInformations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientInformations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ClientInformations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ClientInformations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientInformations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ClientInformations" */
export type ClientInformations_Aggregate_Fields = {
  avg?: Maybe<ClientInformations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientInformations_Max_Fields>;
  min?: Maybe<ClientInformations_Min_Fields>;
  stddev?: Maybe<ClientInformations_Stddev_Fields>;
  stddev_pop?: Maybe<ClientInformations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ClientInformations_Stddev_Samp_Fields>;
  sum?: Maybe<ClientInformations_Sum_Fields>;
  var_pop?: Maybe<ClientInformations_Var_Pop_Fields>;
  var_samp?: Maybe<ClientInformations_Var_Samp_Fields>;
  variance?: Maybe<ClientInformations_Variance_Fields>;
};

/** aggregate fields of "ClientInformations" */
export type ClientInformations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ClientInformations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ClientInformations" */
export type ClientInformations_Aggregate_Order_By = {
  avg?: InputMaybe<ClientInformations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ClientInformations_Max_Order_By>;
  min?: InputMaybe<ClientInformations_Min_Order_By>;
  stddev?: InputMaybe<ClientInformations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ClientInformations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ClientInformations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ClientInformations_Sum_Order_By>;
  var_pop?: InputMaybe<ClientInformations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ClientInformations_Var_Samp_Order_By>;
  variance?: InputMaybe<ClientInformations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ClientInformations" */
export type ClientInformations_Arr_Rel_Insert_Input = {
  data: Array<ClientInformations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientInformations_On_Conflict>;
};

/** aggregate avg on columns */
export type ClientInformations_Avg_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ClientInformations" */
export type ClientInformations_Avg_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ClientInformations". All fields are combined with a logical 'AND'. */
export type ClientInformations_Bool_Exp = {
  ClientCredentialsRoles?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
  ClientCredentialsRoles_aggregate?: InputMaybe<ClientCredentialsRoles_Aggregate_Bool_Exp>;
  ClientVersions?: InputMaybe<ClientVersions_Bool_Exp>;
  ClientVersions_aggregate?: InputMaybe<ClientVersions_Aggregate_Bool_Exp>;
  CpoTenant?: InputMaybe<CpoTenants_Bool_Exp>;
  ServerVersions?: InputMaybe<ServerVersions_Bool_Exp>;
  ServerVersions_aggregate?: InputMaybe<ServerVersions_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<ClientInformations_Bool_Exp>>;
  _not?: InputMaybe<ClientInformations_Bool_Exp>;
  _or?: InputMaybe<Array<ClientInformations_Bool_Exp>>;
  clientToken?: InputMaybe<String_Comparison_Exp>;
  cpoTenantId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  registered?: InputMaybe<Boolean_Comparison_Exp>;
  serverToken?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ClientInformations" */
export type ClientInformations_Constraint =
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key1'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key2'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key3'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key4'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key5'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key6'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key7'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key8'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key9'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key10'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key11'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key12'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key13'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key14'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key15'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key16'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key17'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key18'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key19'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key20'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key21'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key22'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key23'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key24'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key25'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key26'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key27'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key28'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key29'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key30'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key31'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key32'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key33'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key34'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key35'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key36'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key37'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key38'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key39'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key40'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key41'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key42'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key43'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key44'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key45'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key46'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key47'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key48'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key49'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key50'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key51'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key52'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key53'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key54'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key55'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key56'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key57'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key58'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key59'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key60'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key61'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key62'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key63'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key64'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key65'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key66'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key67'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key68'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key69'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key70'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key71'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key72'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key73'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key74'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key75'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key76'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key77'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key78'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key79'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key80'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key81'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key82'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key83'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key84'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key85'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key86'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key87'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key88'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key89'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key90'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key91'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key92'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key93'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key94'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key95'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key96'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key97'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key98'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key99'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key100'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key101'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key102'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key103'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key104'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key105'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key106'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key107'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key108'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key109'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key110'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key111'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key112'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key113'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key114'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key115'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key116'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key117'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key118'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key119'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key120'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key121'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key122'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key123'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key124'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key125'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key126'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key127'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key128'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key129'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key130'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key131'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key132'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key133'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key134'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key135'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key136'
  /** unique or primary key constraint on columns "clientToken" */
  | 'ClientInformations_clientToken_key137'
  /** unique or primary key constraint on columns "id" */
  | 'ClientInformations_pkey'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key1'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key2'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key3'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key4'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key5'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key6'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key7'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key8'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key9'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key10'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key11'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key12'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key13'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key14'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key15'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key16'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key17'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key18'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key19'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key20'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key21'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key22'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key23'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key24'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key25'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key26'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key27'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key28'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key29'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key30'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key31'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key32'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key33'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key34'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key35'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key36'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key37'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key38'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key39'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key40'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key41'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key42'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key43'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key44'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key45'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key46'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key47'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key48'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key49'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key50'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key51'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key52'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key53'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key54'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key55'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key56'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key57'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key58'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key59'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key60'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key61'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key62'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key63'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key64'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key65'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key66'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key67'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key68'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key69'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key70'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key71'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key72'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key73'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key74'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key75'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key76'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key77'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key78'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key79'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key80'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key81'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key82'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key83'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key84'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key85'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key86'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key87'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key88'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key89'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key90'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key91'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key92'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key93'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key94'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key95'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key96'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key97'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key98'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key99'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key100'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key101'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key102'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key103'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key104'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key105'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key106'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key107'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key108'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key109'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key110'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key111'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key112'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key113'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key114'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key115'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key116'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key117'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key118'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key119'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key120'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key121'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key122'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key123'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key124'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key125'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key126'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key127'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key128'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key129'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key130'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key131'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key132'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key133'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key134'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key135'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key136'
  /** unique or primary key constraint on columns "serverToken" */
  | 'ClientInformations_serverToken_key137';

/** input type for incrementing numeric columns in table "ClientInformations" */
export type ClientInformations_Inc_Input = {
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ClientInformations" */
export type ClientInformations_Insert_Input = {
  ClientCredentialsRoles?: InputMaybe<ClientCredentialsRoles_Arr_Rel_Insert_Input>;
  ClientVersions?: InputMaybe<ClientVersions_Arr_Rel_Insert_Input>;
  CpoTenant?: InputMaybe<CpoTenants_Obj_Rel_Insert_Input>;
  ServerVersions?: InputMaybe<ServerVersions_Arr_Rel_Insert_Input>;
  clientToken?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  registered?: InputMaybe<Scalars['Boolean']['input']>;
  serverToken?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ClientInformations_Max_Fields = {
  clientToken?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  serverToken?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ClientInformations" */
export type ClientInformations_Max_Order_By = {
  clientToken?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverToken?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ClientInformations_Min_Fields = {
  clientToken?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  serverToken?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ClientInformations" */
export type ClientInformations_Min_Order_By = {
  clientToken?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverToken?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ClientInformations" */
export type ClientInformations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientInformations>;
};

/** input type for inserting object relation for remote table "ClientInformations" */
export type ClientInformations_Obj_Rel_Insert_Input = {
  data: ClientInformations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientInformations_On_Conflict>;
};

/** on_conflict condition type for table "ClientInformations" */
export type ClientInformations_On_Conflict = {
  constraint: ClientInformations_Constraint;
  update_columns?: Array<ClientInformations_Update_Column>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

/** Ordering options when selecting data from "ClientInformations". */
export type ClientInformations_Order_By = {
  ClientCredentialsRoles_aggregate?: InputMaybe<ClientCredentialsRoles_Aggregate_Order_By>;
  ClientVersions_aggregate?: InputMaybe<ClientVersions_Aggregate_Order_By>;
  CpoTenant?: InputMaybe<CpoTenants_Order_By>;
  ServerVersions_aggregate?: InputMaybe<ServerVersions_Aggregate_Order_By>;
  clientToken?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  registered?: InputMaybe<Order_By>;
  serverToken?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ClientInformations */
export type ClientInformations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ClientInformations" */
export type ClientInformations_Select_Column =
  /** column name */
  | 'clientToken'
  /** column name */
  | 'cpoTenantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'registered'
  /** column name */
  | 'serverToken'
  /** column name */
  | 'updatedAt';

/** select "ClientInformations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "ClientInformations" */
export type ClientInformations_Select_Column_ClientInformations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'registered';

/** select "ClientInformations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "ClientInformations" */
export type ClientInformations_Select_Column_ClientInformations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'registered';

/** input type for updating data in table "ClientInformations" */
export type ClientInformations_Set_Input = {
  clientToken?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  registered?: InputMaybe<Scalars['Boolean']['input']>;
  serverToken?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ClientInformations_Stddev_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ClientInformations" */
export type ClientInformations_Stddev_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ClientInformations_Stddev_Pop_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ClientInformations" */
export type ClientInformations_Stddev_Pop_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ClientInformations_Stddev_Samp_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ClientInformations" */
export type ClientInformations_Stddev_Samp_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ClientInformations" */
export type ClientInformations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ClientInformations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientInformations_Stream_Cursor_Value_Input = {
  clientToken?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  registered?: InputMaybe<Scalars['Boolean']['input']>;
  serverToken?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ClientInformations_Sum_Fields = {
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ClientInformations" */
export type ClientInformations_Sum_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ClientInformations" */
export type ClientInformations_Update_Column =
  /** column name */
  | 'clientToken'
  /** column name */
  | 'cpoTenantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'registered'
  /** column name */
  | 'serverToken'
  /** column name */
  | 'updatedAt';

export type ClientInformations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientInformations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientInformations_Set_Input>;
  /** filter the rows which have to be updated */
  where: ClientInformations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ClientInformations_Var_Pop_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ClientInformations" */
export type ClientInformations_Var_Pop_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ClientInformations_Var_Samp_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ClientInformations" */
export type ClientInformations_Var_Samp_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ClientInformations_Variance_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ClientInformations" */
export type ClientInformations_Variance_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ClientVersions" */
export type ClientVersions = {
  /** An object relationship */
  ClientInformation?: Maybe<ClientInformations>;
  /** An array relationship */
  Endpoints: Array<Endpoints>;
  /** An aggregate relationship */
  Endpoints_aggregate: Endpoints_Aggregate;
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_ClientVersions_version']['output']>;
};

/** columns and relationships of "ClientVersions" */
export type ClientVersionsEndpointsArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

/** columns and relationships of "ClientVersions" */
export type ClientVersionsEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

/** aggregated selection of "ClientVersions" */
export type ClientVersions_Aggregate = {
  aggregate?: Maybe<ClientVersions_Aggregate_Fields>;
  nodes: Array<ClientVersions>;
};

export type ClientVersions_Aggregate_Bool_Exp = {
  count?: InputMaybe<ClientVersions_Aggregate_Bool_Exp_Count>;
};

export type ClientVersions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ClientVersions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientVersions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ClientVersions" */
export type ClientVersions_Aggregate_Fields = {
  avg?: Maybe<ClientVersions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientVersions_Max_Fields>;
  min?: Maybe<ClientVersions_Min_Fields>;
  stddev?: Maybe<ClientVersions_Stddev_Fields>;
  stddev_pop?: Maybe<ClientVersions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ClientVersions_Stddev_Samp_Fields>;
  sum?: Maybe<ClientVersions_Sum_Fields>;
  var_pop?: Maybe<ClientVersions_Var_Pop_Fields>;
  var_samp?: Maybe<ClientVersions_Var_Samp_Fields>;
  variance?: Maybe<ClientVersions_Variance_Fields>;
};

/** aggregate fields of "ClientVersions" */
export type ClientVersions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ClientVersions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ClientVersions" */
export type ClientVersions_Aggregate_Order_By = {
  avg?: InputMaybe<ClientVersions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ClientVersions_Max_Order_By>;
  min?: InputMaybe<ClientVersions_Min_Order_By>;
  stddev?: InputMaybe<ClientVersions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ClientVersions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ClientVersions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ClientVersions_Sum_Order_By>;
  var_pop?: InputMaybe<ClientVersions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ClientVersions_Var_Samp_Order_By>;
  variance?: InputMaybe<ClientVersions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ClientVersions" */
export type ClientVersions_Arr_Rel_Insert_Input = {
  data: Array<ClientVersions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientVersions_On_Conflict>;
};

/** aggregate avg on columns */
export type ClientVersions_Avg_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ClientVersions" */
export type ClientVersions_Avg_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ClientVersions". All fields are combined with a logical 'AND'. */
export type ClientVersions_Bool_Exp = {
  ClientInformation?: InputMaybe<ClientInformations_Bool_Exp>;
  Endpoints?: InputMaybe<Endpoints_Bool_Exp>;
  Endpoints_aggregate?: InputMaybe<Endpoints_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<ClientVersions_Bool_Exp>>;
  _not?: InputMaybe<ClientVersions_Bool_Exp>;
  _or?: InputMaybe<Array<ClientVersions_Bool_Exp>>;
  clientInformationId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  version?: InputMaybe<Enum_ClientVersions_Version_Comparison_Exp>;
};

/** unique or primary key constraints on table "ClientVersions" */
export type ClientVersions_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ClientVersions_pkey';

/** input type for incrementing numeric columns in table "ClientVersions" */
export type ClientVersions_Inc_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ClientVersions" */
export type ClientVersions_Insert_Input = {
  ClientInformation?: InputMaybe<ClientInformations_Obj_Rel_Insert_Input>;
  Endpoints?: InputMaybe<Endpoints_Arr_Rel_Insert_Input>;
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
};

/** aggregate max on columns */
export type ClientVersions_Max_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_ClientVersions_version']['output']>;
};

/** order by max() on columns of table "ClientVersions" */
export type ClientVersions_Max_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ClientVersions_Min_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_ClientVersions_version']['output']>;
};

/** order by min() on columns of table "ClientVersions" */
export type ClientVersions_Min_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ClientVersions" */
export type ClientVersions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientVersions>;
};

/** input type for inserting object relation for remote table "ClientVersions" */
export type ClientVersions_Obj_Rel_Insert_Input = {
  data: ClientVersions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientVersions_On_Conflict>;
};

/** on_conflict condition type for table "ClientVersions" */
export type ClientVersions_On_Conflict = {
  constraint: ClientVersions_Constraint;
  update_columns?: Array<ClientVersions_Update_Column>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

/** Ordering options when selecting data from "ClientVersions". */
export type ClientVersions_Order_By = {
  ClientInformation?: InputMaybe<ClientInformations_Order_By>;
  Endpoints_aggregate?: InputMaybe<Endpoints_Aggregate_Order_By>;
  clientInformationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ClientVersions */
export type ClientVersions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ClientVersions" */
export type ClientVersions_Select_Column =
  /** column name */
  | 'clientInformationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'version';

/** input type for updating data in table "ClientVersions" */
export type ClientVersions_Set_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
};

/** aggregate stddev on columns */
export type ClientVersions_Stddev_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ClientVersions" */
export type ClientVersions_Stddev_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ClientVersions_Stddev_Pop_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ClientVersions" */
export type ClientVersions_Stddev_Pop_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ClientVersions_Stddev_Samp_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ClientVersions" */
export type ClientVersions_Stddev_Samp_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ClientVersions" */
export type ClientVersions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ClientVersions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientVersions_Stream_Cursor_Value_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
};

/** aggregate sum on columns */
export type ClientVersions_Sum_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ClientVersions" */
export type ClientVersions_Sum_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ClientVersions" */
export type ClientVersions_Update_Column =
  /** column name */
  | 'clientInformationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'version';

export type ClientVersions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientVersions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientVersions_Set_Input>;
  /** filter the rows which have to be updated */
  where: ClientVersions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ClientVersions_Var_Pop_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ClientVersions" */
export type ClientVersions_Var_Pop_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ClientVersions_Var_Samp_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ClientVersions" */
export type ClientVersions_Var_Samp_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ClientVersions_Variance_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ClientVersions" */
export type ClientVersions_Variance_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ComponentVariables" */
export type ComponentVariables = {
  /** An object relationship */
  Component: Components;
  /** An object relationship */
  Variable: Variables;
  componentId: Scalars['Int']['output'];
  createdAt: Scalars['timestamptz']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  variableId: Scalars['Int']['output'];
};

/** aggregated selection of "ComponentVariables" */
export type ComponentVariables_Aggregate = {
  aggregate?: Maybe<ComponentVariables_Aggregate_Fields>;
  nodes: Array<ComponentVariables>;
};

export type ComponentVariables_Aggregate_Bool_Exp = {
  count?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp_Count>;
};

export type ComponentVariables_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ComponentVariables_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ComponentVariables" */
export type ComponentVariables_Aggregate_Fields = {
  avg?: Maybe<ComponentVariables_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ComponentVariables_Max_Fields>;
  min?: Maybe<ComponentVariables_Min_Fields>;
  stddev?: Maybe<ComponentVariables_Stddev_Fields>;
  stddev_pop?: Maybe<ComponentVariables_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ComponentVariables_Stddev_Samp_Fields>;
  sum?: Maybe<ComponentVariables_Sum_Fields>;
  var_pop?: Maybe<ComponentVariables_Var_Pop_Fields>;
  var_samp?: Maybe<ComponentVariables_Var_Samp_Fields>;
  variance?: Maybe<ComponentVariables_Variance_Fields>;
};

/** aggregate fields of "ComponentVariables" */
export type ComponentVariables_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ComponentVariables" */
export type ComponentVariables_Aggregate_Order_By = {
  avg?: InputMaybe<ComponentVariables_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ComponentVariables_Max_Order_By>;
  min?: InputMaybe<ComponentVariables_Min_Order_By>;
  stddev?: InputMaybe<ComponentVariables_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ComponentVariables_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ComponentVariables_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ComponentVariables_Sum_Order_By>;
  var_pop?: InputMaybe<ComponentVariables_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ComponentVariables_Var_Samp_Order_By>;
  variance?: InputMaybe<ComponentVariables_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ComponentVariables" */
export type ComponentVariables_Arr_Rel_Insert_Input = {
  data: Array<ComponentVariables_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ComponentVariables_On_Conflict>;
};

/** aggregate avg on columns */
export type ComponentVariables_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ComponentVariables" */
export type ComponentVariables_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ComponentVariables". All fields are combined with a logical 'AND'. */
export type ComponentVariables_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  _and?: InputMaybe<Array<ComponentVariables_Bool_Exp>>;
  _not?: InputMaybe<ComponentVariables_Bool_Exp>;
  _or?: InputMaybe<Array<ComponentVariables_Bool_Exp>>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "ComponentVariables" */
export type ComponentVariables_Constraint =
  /** unique or primary key constraint on columns "componentId", "variableId" */
  'ComponentVariables_pkey';

/** input type for incrementing numeric columns in table "ComponentVariables" */
export type ComponentVariables_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ComponentVariables" */
export type ComponentVariables_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type ComponentVariables_Max_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "ComponentVariables" */
export type ComponentVariables_Max_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ComponentVariables_Min_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "ComponentVariables" */
export type ComponentVariables_Min_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ComponentVariables" */
export type ComponentVariables_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ComponentVariables>;
};

/** on_conflict condition type for table "ComponentVariables" */
export type ComponentVariables_On_Conflict = {
  constraint: ComponentVariables_Constraint;
  update_columns?: Array<ComponentVariables_Update_Column>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** Ordering options when selecting data from "ComponentVariables". */
export type ComponentVariables_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ComponentVariables */
export type ComponentVariables_Pk_Columns_Input = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

/** select columns of table "ComponentVariables" */
export type ComponentVariables_Select_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId';

/** input type for updating data in table "ComponentVariables" */
export type ComponentVariables_Set_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type ComponentVariables_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ComponentVariables" */
export type ComponentVariables_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ComponentVariables_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ComponentVariables" */
export type ComponentVariables_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ComponentVariables_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ComponentVariables" */
export type ComponentVariables_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ComponentVariables" */
export type ComponentVariables_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ComponentVariables_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ComponentVariables_Stream_Cursor_Value_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type ComponentVariables_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ComponentVariables" */
export type ComponentVariables_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "ComponentVariables" */
export type ComponentVariables_Update_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId';

export type ComponentVariables_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ComponentVariables_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ComponentVariables_Set_Input>;
  /** filter the rows which have to be updated */
  where: ComponentVariables_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ComponentVariables_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ComponentVariables" */
export type ComponentVariables_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ComponentVariables_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ComponentVariables" */
export type ComponentVariables_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ComponentVariables_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ComponentVariables" */
export type ComponentVariables_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Components" */
export type Components = {
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Components" */
export type ComponentsComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** columns and relationships of "Components" */
export type ComponentsVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** aggregated selection of "Components" */
export type Components_Aggregate = {
  aggregate?: Maybe<Components_Aggregate_Fields>;
  nodes: Array<Components>;
};

export type Components_Aggregate_Bool_Exp = {
  count?: InputMaybe<Components_Aggregate_Bool_Exp_Count>;
};

export type Components_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Components_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Components_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Components" */
export type Components_Aggregate_Fields = {
  avg?: Maybe<Components_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Components_Max_Fields>;
  min?: Maybe<Components_Min_Fields>;
  stddev?: Maybe<Components_Stddev_Fields>;
  stddev_pop?: Maybe<Components_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Components_Stddev_Samp_Fields>;
  sum?: Maybe<Components_Sum_Fields>;
  var_pop?: Maybe<Components_Var_Pop_Fields>;
  var_samp?: Maybe<Components_Var_Samp_Fields>;
  variance?: Maybe<Components_Variance_Fields>;
};

/** aggregate fields of "Components" */
export type Components_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Components_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Components" */
export type Components_Aggregate_Order_By = {
  avg?: InputMaybe<Components_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Components_Max_Order_By>;
  min?: InputMaybe<Components_Min_Order_By>;
  stddev?: InputMaybe<Components_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Components_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Components_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Components_Sum_Order_By>;
  var_pop?: InputMaybe<Components_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Components_Var_Samp_Order_By>;
  variance?: InputMaybe<Components_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Components" */
export type Components_Arr_Rel_Insert_Input = {
  data: Array<Components_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** aggregate avg on columns */
export type Components_Avg_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Components" */
export type Components_Avg_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Components". All fields are combined with a logical 'AND'. */
export type Components_Bool_Exp = {
  ComponentVariables?: InputMaybe<ComponentVariables_Bool_Exp>;
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp>;
  EventData?: InputMaybe<EventData_Bool_Exp>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Bool_Exp>;
  Evse?: InputMaybe<Evses_Bool_Exp>;
  MessageInfos?: InputMaybe<MessageInfos_Bool_Exp>;
  MessageInfos_aggregate?: InputMaybe<MessageInfos_Aggregate_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Bool_Exp>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Components_Bool_Exp>>;
  _not?: InputMaybe<Components_Bool_Exp>;
  _or?: InputMaybe<Array<Components_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  instance?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Components" */
export type Components_Constraint =
  /** unique or primary key constraint on columns "instance", "name" */
  | 'Components_name_instance_key'
  /** unique or primary key constraint on columns "id" */
  | 'Components_pkey';

/** input type for incrementing numeric columns in table "Components" */
export type Components_Inc_Input = {
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Components" */
export type Components_Insert_Input = {
  ComponentVariables?: InputMaybe<ComponentVariables_Arr_Rel_Insert_Input>;
  EventData?: InputMaybe<EventData_Arr_Rel_Insert_Input>;
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  MessageInfos?: InputMaybe<MessageInfos_Arr_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Components_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Components" */
export type Components_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Components_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Components" */
export type Components_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Components" */
export type Components_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Components>;
};

/** input type for inserting object relation for remote table "Components" */
export type Components_Obj_Rel_Insert_Input = {
  data: Components_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** on_conflict condition type for table "Components" */
export type Components_On_Conflict = {
  constraint: Components_Constraint;
  update_columns?: Array<Components_Update_Column>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** Ordering options when selecting data from "Components". */
export type Components_Order_By = {
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Order_By>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Order_By>;
  Evse?: InputMaybe<Evses_Order_By>;
  MessageInfos_aggregate?: InputMaybe<MessageInfos_Aggregate_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Components */
export type Components_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Components" */
export type Components_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Components" */
export type Components_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Components_Stddev_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Components" */
export type Components_Stddev_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Components_Stddev_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Components" */
export type Components_Stddev_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Components_Stddev_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Components" */
export type Components_Stddev_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Components" */
export type Components_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Components_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Components_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Components_Sum_Fields = {
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Components" */
export type Components_Sum_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "Components" */
export type Components_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt';

export type Components_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Components_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Components_Set_Input>;
  /** filter the rows which have to be updated */
  where: Components_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Components_Var_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Components" */
export type Components_Var_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Components_Var_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Components" */
export type Components_Var_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Components_Variance_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Components" */
export type Components_Variance_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "CompositeSchedules" */
export type CompositeSchedules = {
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  chargingSchedulePeriod?: Maybe<Scalars['jsonb']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  scheduleStart?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "CompositeSchedules" */
export type CompositeSchedulesChargingSchedulePeriodArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "CompositeSchedules" */
export type CompositeSchedules_Aggregate = {
  aggregate?: Maybe<CompositeSchedules_Aggregate_Fields>;
  nodes: Array<CompositeSchedules>;
};

/** aggregate fields of "CompositeSchedules" */
export type CompositeSchedules_Aggregate_Fields = {
  avg?: Maybe<CompositeSchedules_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CompositeSchedules_Max_Fields>;
  min?: Maybe<CompositeSchedules_Min_Fields>;
  stddev?: Maybe<CompositeSchedules_Stddev_Fields>;
  stddev_pop?: Maybe<CompositeSchedules_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CompositeSchedules_Stddev_Samp_Fields>;
  sum?: Maybe<CompositeSchedules_Sum_Fields>;
  var_pop?: Maybe<CompositeSchedules_Var_Pop_Fields>;
  var_samp?: Maybe<CompositeSchedules_Var_Samp_Fields>;
  variance?: Maybe<CompositeSchedules_Variance_Fields>;
};

/** aggregate fields of "CompositeSchedules" */
export type CompositeSchedules_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CompositeSchedules_Append_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type CompositeSchedules_Avg_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "CompositeSchedules". All fields are combined with a logical 'AND'. */
export type CompositeSchedules_Bool_Exp = {
  _and?: InputMaybe<Array<CompositeSchedules_Bool_Exp>>;
  _not?: InputMaybe<CompositeSchedules_Bool_Exp>;
  _or?: InputMaybe<Array<CompositeSchedules_Bool_Exp>>;
  chargingRateUnit?: InputMaybe<String_Comparison_Exp>;
  chargingSchedulePeriod?: InputMaybe<Jsonb_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  duration?: InputMaybe<Int_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  scheduleStart?: InputMaybe<Timestamptz_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "CompositeSchedules" */
export type CompositeSchedules_Constraint =
  /** unique or primary key constraint on columns "id" */
  'CompositeSchedules_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CompositeSchedules_Delete_At_Path_Input = {
  chargingSchedulePeriod?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CompositeSchedules_Delete_Elem_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CompositeSchedules_Delete_Key_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "CompositeSchedules" */
export type CompositeSchedules_Inc_Input = {
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "CompositeSchedules" */
export type CompositeSchedules_Insert_Input = {
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  scheduleStart?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type CompositeSchedules_Max_Fields = {
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  scheduleStart?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type CompositeSchedules_Min_Fields = {
  chargingRateUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  scheduleStart?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "CompositeSchedules" */
export type CompositeSchedules_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<CompositeSchedules>;
};

/** on_conflict condition type for table "CompositeSchedules" */
export type CompositeSchedules_On_Conflict = {
  constraint: CompositeSchedules_Constraint;
  update_columns?: Array<CompositeSchedules_Update_Column>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

/** Ordering options when selecting data from "CompositeSchedules". */
export type CompositeSchedules_Order_By = {
  chargingRateUnit?: InputMaybe<Order_By>;
  chargingSchedulePeriod?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  duration?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  scheduleStart?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: CompositeSchedules */
export type CompositeSchedules_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CompositeSchedules_Prepend_Input = {
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "CompositeSchedules" */
export type CompositeSchedules_Select_Column =
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'duration'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'scheduleStart'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "CompositeSchedules" */
export type CompositeSchedules_Set_Input = {
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  scheduleStart?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type CompositeSchedules_Stddev_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type CompositeSchedules_Stddev_Pop_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type CompositeSchedules_Stddev_Samp_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "CompositeSchedules" */
export type CompositeSchedules_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CompositeSchedules_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CompositeSchedules_Stream_Cursor_Value_Input = {
  chargingRateUnit?: InputMaybe<Scalars['String']['input']>;
  chargingSchedulePeriod?: InputMaybe<Scalars['jsonb']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  duration?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  scheduleStart?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type CompositeSchedules_Sum_Fields = {
  duration?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "CompositeSchedules" */
export type CompositeSchedules_Update_Column =
  /** column name */
  | 'chargingRateUnit'
  /** column name */
  | 'chargingSchedulePeriod'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'duration'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'scheduleStart'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

export type CompositeSchedules_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<CompositeSchedules_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<CompositeSchedules_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<CompositeSchedules_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<CompositeSchedules_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CompositeSchedules_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<CompositeSchedules_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CompositeSchedules_Set_Input>;
  /** filter the rows which have to be updated */
  where: CompositeSchedules_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CompositeSchedules_Var_Pop_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type CompositeSchedules_Var_Samp_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type CompositeSchedules_Variance_Fields = {
  duration?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "CpoTenants" */
export type CpoTenants = {
  /** An array relationship */
  ClientCredentialsRoles: Array<ClientCredentialsRoles>;
  /** An aggregate relationship */
  ClientCredentialsRoles_aggregate: ClientCredentialsRoles_Aggregate;
  /** An array relationship */
  ClientInformations: Array<ClientInformations>;
  /** An aggregate relationship */
  ClientInformations_aggregate: ClientInformations_Aggregate;
  /** An array relationship */
  ServerCredentialsRoles: Array<ServerCredentialsRoles>;
  /** An aggregate relationship */
  ServerCredentialsRoles_aggregate: ServerCredentialsRoles_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "CpoTenants" */
export type CpoTenantsClientCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

/** columns and relationships of "CpoTenants" */
export type CpoTenantsClientCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

/** columns and relationships of "CpoTenants" */
export type CpoTenantsClientInformationsArgs = {
  distinct_on?: InputMaybe<Array<ClientInformations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInformations_Order_By>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

/** columns and relationships of "CpoTenants" */
export type CpoTenantsClientInformations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInformations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInformations_Order_By>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

/** columns and relationships of "CpoTenants" */
export type CpoTenantsServerCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCredentialsRoles_Order_By>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

/** columns and relationships of "CpoTenants" */
export type CpoTenantsServerCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCredentialsRoles_Order_By>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

/** aggregated selection of "CpoTenants" */
export type CpoTenants_Aggregate = {
  aggregate?: Maybe<CpoTenants_Aggregate_Fields>;
  nodes: Array<CpoTenants>;
};

/** aggregate fields of "CpoTenants" */
export type CpoTenants_Aggregate_Fields = {
  avg?: Maybe<CpoTenants_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CpoTenants_Max_Fields>;
  min?: Maybe<CpoTenants_Min_Fields>;
  stddev?: Maybe<CpoTenants_Stddev_Fields>;
  stddev_pop?: Maybe<CpoTenants_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CpoTenants_Stddev_Samp_Fields>;
  sum?: Maybe<CpoTenants_Sum_Fields>;
  var_pop?: Maybe<CpoTenants_Var_Pop_Fields>;
  var_samp?: Maybe<CpoTenants_Var_Samp_Fields>;
  variance?: Maybe<CpoTenants_Variance_Fields>;
};

/** aggregate fields of "CpoTenants" */
export type CpoTenants_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CpoTenants_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type CpoTenants_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "CpoTenants". All fields are combined with a logical 'AND'. */
export type CpoTenants_Bool_Exp = {
  ClientCredentialsRoles?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
  ClientCredentialsRoles_aggregate?: InputMaybe<ClientCredentialsRoles_Aggregate_Bool_Exp>;
  ClientInformations?: InputMaybe<ClientInformations_Bool_Exp>;
  ClientInformations_aggregate?: InputMaybe<ClientInformations_Aggregate_Bool_Exp>;
  ServerCredentialsRoles?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
  ServerCredentialsRoles_aggregate?: InputMaybe<ServerCredentialsRoles_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<CpoTenants_Bool_Exp>>;
  _not?: InputMaybe<CpoTenants_Bool_Exp>;
  _or?: InputMaybe<Array<CpoTenants_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "CpoTenants" */
export type CpoTenants_Constraint =
  /** unique or primary key constraint on columns "id" */
  'CpoTenants_pkey';

/** input type for incrementing numeric columns in table "CpoTenants" */
export type CpoTenants_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "CpoTenants" */
export type CpoTenants_Insert_Input = {
  ClientCredentialsRoles?: InputMaybe<ClientCredentialsRoles_Arr_Rel_Insert_Input>;
  ClientInformations?: InputMaybe<ClientInformations_Arr_Rel_Insert_Input>;
  ServerCredentialsRoles?: InputMaybe<ServerCredentialsRoles_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type CpoTenants_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type CpoTenants_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "CpoTenants" */
export type CpoTenants_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<CpoTenants>;
};

/** input type for inserting object relation for remote table "CpoTenants" */
export type CpoTenants_Obj_Rel_Insert_Input = {
  data: CpoTenants_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<CpoTenants_On_Conflict>;
};

/** on_conflict condition type for table "CpoTenants" */
export type CpoTenants_On_Conflict = {
  constraint: CpoTenants_Constraint;
  update_columns?: Array<CpoTenants_Update_Column>;
  where?: InputMaybe<CpoTenants_Bool_Exp>;
};

/** Ordering options when selecting data from "CpoTenants". */
export type CpoTenants_Order_By = {
  ClientCredentialsRoles_aggregate?: InputMaybe<ClientCredentialsRoles_Aggregate_Order_By>;
  ClientInformations_aggregate?: InputMaybe<ClientInformations_Aggregate_Order_By>;
  ServerCredentialsRoles_aggregate?: InputMaybe<ServerCredentialsRoles_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: CpoTenants */
export type CpoTenants_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "CpoTenants" */
export type CpoTenants_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "CpoTenants" */
export type CpoTenants_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type CpoTenants_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type CpoTenants_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type CpoTenants_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "CpoTenants" */
export type CpoTenants_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CpoTenants_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CpoTenants_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type CpoTenants_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "CpoTenants" */
export type CpoTenants_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt';

export type CpoTenants_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CpoTenants_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CpoTenants_Set_Input>;
  /** filter the rows which have to be updated */
  where: CpoTenants_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CpoTenants_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type CpoTenants_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type CpoTenants_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "Endpoints" */
export type Endpoints = {
  /** An object relationship */
  ClientVersion?: Maybe<ClientVersions>;
  /** An object relationship */
  ServerVersion?: Maybe<ServerVersions>;
  clientVersionId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  identifier?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  serverVersionId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "Endpoints" */
export type Endpoints_Aggregate = {
  aggregate?: Maybe<Endpoints_Aggregate_Fields>;
  nodes: Array<Endpoints>;
};

export type Endpoints_Aggregate_Bool_Exp = {
  count?: InputMaybe<Endpoints_Aggregate_Bool_Exp_Count>;
};

export type Endpoints_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Endpoints_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Endpoints_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Endpoints" */
export type Endpoints_Aggregate_Fields = {
  avg?: Maybe<Endpoints_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Endpoints_Max_Fields>;
  min?: Maybe<Endpoints_Min_Fields>;
  stddev?: Maybe<Endpoints_Stddev_Fields>;
  stddev_pop?: Maybe<Endpoints_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Endpoints_Stddev_Samp_Fields>;
  sum?: Maybe<Endpoints_Sum_Fields>;
  var_pop?: Maybe<Endpoints_Var_Pop_Fields>;
  var_samp?: Maybe<Endpoints_Var_Samp_Fields>;
  variance?: Maybe<Endpoints_Variance_Fields>;
};

/** aggregate fields of "Endpoints" */
export type Endpoints_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Endpoints_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Endpoints" */
export type Endpoints_Aggregate_Order_By = {
  avg?: InputMaybe<Endpoints_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Endpoints_Max_Order_By>;
  min?: InputMaybe<Endpoints_Min_Order_By>;
  stddev?: InputMaybe<Endpoints_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Endpoints_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Endpoints_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Endpoints_Sum_Order_By>;
  var_pop?: InputMaybe<Endpoints_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Endpoints_Var_Samp_Order_By>;
  variance?: InputMaybe<Endpoints_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Endpoints" */
export type Endpoints_Arr_Rel_Insert_Input = {
  data: Array<Endpoints_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Endpoints_On_Conflict>;
};

/** aggregate avg on columns */
export type Endpoints_Avg_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Endpoints" */
export type Endpoints_Avg_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Endpoints". All fields are combined with a logical 'AND'. */
export type Endpoints_Bool_Exp = {
  ClientVersion?: InputMaybe<ClientVersions_Bool_Exp>;
  ServerVersion?: InputMaybe<ServerVersions_Bool_Exp>;
  _and?: InputMaybe<Array<Endpoints_Bool_Exp>>;
  _not?: InputMaybe<Endpoints_Bool_Exp>;
  _or?: InputMaybe<Array<Endpoints_Bool_Exp>>;
  clientVersionId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  identifier?: InputMaybe<String_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  serverVersionId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Endpoints" */
export type Endpoints_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Endpoints_pkey';

/** input type for incrementing numeric columns in table "Endpoints" */
export type Endpoints_Inc_Input = {
  clientVersionId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  serverVersionId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Endpoints" */
export type Endpoints_Insert_Input = {
  ClientVersion?: InputMaybe<ClientVersions_Obj_Rel_Insert_Input>;
  ServerVersion?: InputMaybe<ServerVersions_Obj_Rel_Insert_Input>;
  clientVersionId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  serverVersionId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Endpoints_Max_Fields = {
  clientVersionId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  serverVersionId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "Endpoints" */
export type Endpoints_Max_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifier?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Endpoints_Min_Fields = {
  clientVersionId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  serverVersionId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "Endpoints" */
export type Endpoints_Min_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifier?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Endpoints" */
export type Endpoints_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Endpoints>;
};

/** on_conflict condition type for table "Endpoints" */
export type Endpoints_On_Conflict = {
  constraint: Endpoints_Constraint;
  update_columns?: Array<Endpoints_Update_Column>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

/** Ordering options when selecting data from "Endpoints". */
export type Endpoints_Order_By = {
  ClientVersion?: InputMaybe<ClientVersions_Order_By>;
  ServerVersion?: InputMaybe<ServerVersions_Order_By>;
  clientVersionId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifier?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Endpoints */
export type Endpoints_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Endpoints" */
export type Endpoints_Select_Column =
  /** column name */
  | 'clientVersionId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'identifier'
  /** column name */
  | 'role'
  /** column name */
  | 'serverVersionId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

/** input type for updating data in table "Endpoints" */
export type Endpoints_Set_Input = {
  clientVersionId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  serverVersionId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Endpoints_Stddev_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Endpoints" */
export type Endpoints_Stddev_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Endpoints_Stddev_Pop_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Endpoints" */
export type Endpoints_Stddev_Pop_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Endpoints_Stddev_Samp_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Endpoints" */
export type Endpoints_Stddev_Samp_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Endpoints" */
export type Endpoints_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Endpoints_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Endpoints_Stream_Cursor_Value_Input = {
  clientVersionId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  serverVersionId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Endpoints_Sum_Fields = {
  clientVersionId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  serverVersionId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Endpoints" */
export type Endpoints_Sum_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** update columns of table "Endpoints" */
export type Endpoints_Update_Column =
  /** column name */
  | 'clientVersionId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'identifier'
  /** column name */
  | 'role'
  /** column name */
  | 'serverVersionId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

export type Endpoints_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Endpoints_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Endpoints_Set_Input>;
  /** filter the rows which have to be updated */
  where: Endpoints_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Endpoints_Var_Pop_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Endpoints" */
export type Endpoints_Var_Pop_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Endpoints_Var_Samp_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Endpoints" */
export type Endpoints_Var_Samp_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Endpoints_Variance_Fields = {
  clientVersionId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  serverVersionId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Endpoints" */
export type Endpoints_Variance_Order_By = {
  clientVersionId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  serverVersionId?: InputMaybe<Order_By>;
};

/** columns and relationships of "EventData" */
export type EventData = {
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  cause?: Maybe<Scalars['Int']['output']>;
  cleared?: Maybe<Scalars['Boolean']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  eventId?: Maybe<Scalars['Int']['output']>;
  eventNotificationType?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  trigger?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "EventData" */
export type EventData_Aggregate = {
  aggregate?: Maybe<EventData_Aggregate_Fields>;
  nodes: Array<EventData>;
};

export type EventData_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<EventData_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<EventData_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<EventData_Aggregate_Bool_Exp_Count>;
};

export type EventData_Aggregate_Bool_Exp_Bool_And = {
  arguments: EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventData_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type EventData_Aggregate_Bool_Exp_Bool_Or = {
  arguments: EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventData_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type EventData_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<EventData_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<EventData_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "EventData" */
export type EventData_Aggregate_Fields = {
  avg?: Maybe<EventData_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<EventData_Max_Fields>;
  min?: Maybe<EventData_Min_Fields>;
  stddev?: Maybe<EventData_Stddev_Fields>;
  stddev_pop?: Maybe<EventData_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<EventData_Stddev_Samp_Fields>;
  sum?: Maybe<EventData_Sum_Fields>;
  var_pop?: Maybe<EventData_Var_Pop_Fields>;
  var_samp?: Maybe<EventData_Var_Samp_Fields>;
  variance?: Maybe<EventData_Variance_Fields>;
};

/** aggregate fields of "EventData" */
export type EventData_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<EventData_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "EventData" */
export type EventData_Aggregate_Order_By = {
  avg?: InputMaybe<EventData_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<EventData_Max_Order_By>;
  min?: InputMaybe<EventData_Min_Order_By>;
  stddev?: InputMaybe<EventData_Stddev_Order_By>;
  stddev_pop?: InputMaybe<EventData_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<EventData_Stddev_Samp_Order_By>;
  sum?: InputMaybe<EventData_Sum_Order_By>;
  var_pop?: InputMaybe<EventData_Var_Pop_Order_By>;
  var_samp?: InputMaybe<EventData_Var_Samp_Order_By>;
  variance?: InputMaybe<EventData_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "EventData" */
export type EventData_Arr_Rel_Insert_Input = {
  data: Array<EventData_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<EventData_On_Conflict>;
};

/** aggregate avg on columns */
export type EventData_Avg_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "EventData" */
export type EventData_Avg_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "EventData". All fields are combined with a logical 'AND'. */
export type EventData_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  _and?: InputMaybe<Array<EventData_Bool_Exp>>;
  _not?: InputMaybe<EventData_Bool_Exp>;
  _or?: InputMaybe<Array<EventData_Bool_Exp>>;
  cause?: InputMaybe<Int_Comparison_Exp>;
  cleared?: InputMaybe<Boolean_Comparison_Exp>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  eventId?: InputMaybe<Int_Comparison_Exp>;
  eventNotificationType?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  trigger?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
  variableMonitoringId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventData" */
export type EventData_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'EventData_pkey'
  /** unique or primary key constraint on columns "stationId" */
  | 'EventData_stationId_key';

/** input type for incrementing numeric columns in table "EventData" */
export type EventData_Inc_Input = {
  cause?: InputMaybe<Scalars['Int']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "EventData" */
export type EventData_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  cause?: InputMaybe<Scalars['Int']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  eventNotificationType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  trigger?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type EventData_Max_Fields = {
  cause?: Maybe<Scalars['Int']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['Int']['output']>;
  eventNotificationType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  trigger?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "EventData" */
export type EventData_Max_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  eventNotificationType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type EventData_Min_Fields = {
  cause?: Maybe<Scalars['Int']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventId?: Maybe<Scalars['Int']['output']>;
  eventNotificationType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  trigger?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "EventData" */
export type EventData_Min_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  eventNotificationType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "EventData" */
export type EventData_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<EventData>;
};

/** on_conflict condition type for table "EventData" */
export type EventData_On_Conflict = {
  constraint: EventData_Constraint;
  update_columns?: Array<EventData_Update_Column>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** Ordering options when selecting data from "EventData". */
export type EventData_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  cause?: InputMaybe<Order_By>;
  cleared?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  eventNotificationType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  trigger?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: EventData */
export type EventData_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "EventData" */
export type EventData_Select_Column =
  /** column name */
  | 'cause'
  /** column name */
  | 'cleared'
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventId'
  /** column name */
  | 'eventNotificationType'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'trigger'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId'
  /** column name */
  | 'variableMonitoringId';

/** select "EventData_aggregate_bool_exp_bool_and_arguments_columns" columns of table "EventData" */
export type EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'cleared';

/** select "EventData_aggregate_bool_exp_bool_or_arguments_columns" columns of table "EventData" */
export type EventData_Select_Column_EventData_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'cleared';

/** input type for updating data in table "EventData" */
export type EventData_Set_Input = {
  cause?: InputMaybe<Scalars['Int']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  eventNotificationType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  trigger?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type EventData_Stddev_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "EventData" */
export type EventData_Stddev_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type EventData_Stddev_Pop_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "EventData" */
export type EventData_Stddev_Pop_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type EventData_Stddev_Samp_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "EventData" */
export type EventData_Stddev_Samp_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "EventData" */
export type EventData_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: EventData_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type EventData_Stream_Cursor_Value_Input = {
  cause?: InputMaybe<Scalars['Int']['input']>;
  cleared?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventId?: InputMaybe<Scalars['Int']['input']>;
  eventNotificationType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  trigger?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type EventData_Sum_Fields = {
  cause?: Maybe<Scalars['Int']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  eventId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "EventData" */
export type EventData_Sum_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** update columns of table "EventData" */
export type EventData_Update_Column =
  /** column name */
  | 'cause'
  /** column name */
  | 'cleared'
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventId'
  /** column name */
  | 'eventNotificationType'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'trigger'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableId'
  /** column name */
  | 'variableMonitoringId';

export type EventData_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<EventData_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<EventData_Set_Input>;
  /** filter the rows which have to be updated */
  where: EventData_Bool_Exp;
};

/** aggregate var_pop on columns */
export type EventData_Var_Pop_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "EventData" */
export type EventData_Var_Pop_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type EventData_Var_Samp_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "EventData" */
export type EventData_Var_Samp_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type EventData_Variance_Fields = {
  cause?: Maybe<Scalars['Float']['output']>;
  componentId?: Maybe<Scalars['Float']['output']>;
  eventId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "EventData" */
export type EventData_Variance_Order_By = {
  cause?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  eventId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Evses" */
export type Evses = {
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Evses" */
export type EvsesChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Evses" */
export type EvsesVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** aggregated selection of "Evses" */
export type Evses_Aggregate = {
  aggregate?: Maybe<Evses_Aggregate_Fields>;
  nodes: Array<Evses>;
};

/** aggregate fields of "Evses" */
export type Evses_Aggregate_Fields = {
  avg?: Maybe<Evses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Evses_Max_Fields>;
  min?: Maybe<Evses_Min_Fields>;
  stddev?: Maybe<Evses_Stddev_Fields>;
  stddev_pop?: Maybe<Evses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Evses_Stddev_Samp_Fields>;
  sum?: Maybe<Evses_Sum_Fields>;
  var_pop?: Maybe<Evses_Var_Pop_Fields>;
  var_samp?: Maybe<Evses_Var_Samp_Fields>;
  variance?: Maybe<Evses_Variance_Fields>;
};

/** aggregate fields of "Evses" */
export type Evses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Evses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Evses_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Evses". All fields are combined with a logical 'AND'. */
export type Evses_Bool_Exp = {
  ChargingNeeds?: InputMaybe<ChargingNeeds_Bool_Exp>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp>;
  Components?: InputMaybe<Components_Bool_Exp>;
  Components_aggregate?: InputMaybe<Components_Aggregate_Bool_Exp>;
  Reservations?: InputMaybe<Reservations_Bool_Exp>;
  Reservations_aggregate?: InputMaybe<Reservations_Aggregate_Bool_Exp>;
  TransactionEvents?: InputMaybe<TransactionEvents_Bool_Exp>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp>;
  Transactions?: InputMaybe<Transactions_Bool_Exp>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Evses_Bool_Exp>>;
  _not?: InputMaybe<Evses_Bool_Exp>;
  _or?: InputMaybe<Array<Evses_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Evses" */
export type Evses_Constraint =
  /** unique or primary key constraint on columns "id", "connectorId" */
  | 'Evses_id_connectorId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'Evses_pkey';

/** input type for incrementing numeric columns in table "Evses" */
export type Evses_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Evses" */
export type Evses_Insert_Input = {
  ChargingNeeds?: InputMaybe<ChargingNeeds_Arr_Rel_Insert_Input>;
  Components?: InputMaybe<Components_Arr_Rel_Insert_Input>;
  Reservations?: InputMaybe<Reservations_Arr_Rel_Insert_Input>;
  TransactionEvents?: InputMaybe<TransactionEvents_Arr_Rel_Insert_Input>;
  Transactions?: InputMaybe<Transactions_Arr_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Evses_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Evses_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "Evses" */
export type Evses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Evses>;
};

/** input type for inserting object relation for remote table "Evses" */
export type Evses_Obj_Rel_Insert_Input = {
  data: Evses_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** on_conflict condition type for table "Evses" */
export type Evses_On_Conflict = {
  constraint: Evses_Constraint;
  update_columns?: Array<Evses_Update_Column>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

/** Ordering options when selecting data from "Evses". */
export type Evses_Order_By = {
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Order_By>;
  Components_aggregate?: InputMaybe<Components_Aggregate_Order_By>;
  Reservations_aggregate?: InputMaybe<Reservations_Aggregate_Order_By>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Order_By>;
  Transactions_aggregate?: InputMaybe<Transactions_Aggregate_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Evses */
export type Evses_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "Evses" */
export type Evses_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Evses" */
export type Evses_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Evses_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Evses_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Evses_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Evses" */
export type Evses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Evses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Evses_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Evses_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Evses" */
export type Evses_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt';

export type Evses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Evses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Evses_Set_Input>;
  /** filter the rows which have to be updated */
  where: Evses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Evses_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Evses_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Evses_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'. */
export type Float_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Float']['input']>;
  _gt?: InputMaybe<Scalars['Float']['input']>;
  _gte?: InputMaybe<Scalars['Float']['input']>;
  _in?: InputMaybe<Array<Scalars['Float']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Float']['input']>;
  _lte?: InputMaybe<Scalars['Float']['input']>;
  _neq?: InputMaybe<Scalars['Float']['input']>;
  _nin?: InputMaybe<Array<Scalars['Float']['input']>>;
};

/** columns and relationships of "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos = {
  /** An object relationship */
  AdditionalInfo: AdditionalInfos;
  /** An object relationship */
  IdToken: IdTokens;
  additionalInfoId: Scalars['Int']['output'];
  createdAt: Scalars['timestamptz']['output'];
  idTokenId: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Aggregate = {
  aggregate?: Maybe<IdTokenAdditionalInfos_Aggregate_Fields>;
  nodes: Array<IdTokenAdditionalInfos>;
};

export type IdTokenAdditionalInfos_Aggregate_Bool_Exp = {
  count?: InputMaybe<IdTokenAdditionalInfos_Aggregate_Bool_Exp_Count>;
};

export type IdTokenAdditionalInfos_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Aggregate_Fields = {
  avg?: Maybe<IdTokenAdditionalInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IdTokenAdditionalInfos_Max_Fields>;
  min?: Maybe<IdTokenAdditionalInfos_Min_Fields>;
  stddev?: Maybe<IdTokenAdditionalInfos_Stddev_Fields>;
  stddev_pop?: Maybe<IdTokenAdditionalInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<IdTokenAdditionalInfos_Stddev_Samp_Fields>;
  sum?: Maybe<IdTokenAdditionalInfos_Sum_Fields>;
  var_pop?: Maybe<IdTokenAdditionalInfos_Var_Pop_Fields>;
  var_samp?: Maybe<IdTokenAdditionalInfos_Var_Samp_Fields>;
  variance?: Maybe<IdTokenAdditionalInfos_Variance_Fields>;
};

/** aggregate fields of "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Aggregate_Order_By = {
  avg?: InputMaybe<IdTokenAdditionalInfos_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<IdTokenAdditionalInfos_Max_Order_By>;
  min?: InputMaybe<IdTokenAdditionalInfos_Min_Order_By>;
  stddev?: InputMaybe<IdTokenAdditionalInfos_Stddev_Order_By>;
  stddev_pop?: InputMaybe<IdTokenAdditionalInfos_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<IdTokenAdditionalInfos_Stddev_Samp_Order_By>;
  sum?: InputMaybe<IdTokenAdditionalInfos_Sum_Order_By>;
  var_pop?: InputMaybe<IdTokenAdditionalInfos_Var_Pop_Order_By>;
  var_samp?: InputMaybe<IdTokenAdditionalInfos_Var_Samp_Order_By>;
  variance?: InputMaybe<IdTokenAdditionalInfos_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Arr_Rel_Insert_Input = {
  data: Array<IdTokenAdditionalInfos_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<IdTokenAdditionalInfos_On_Conflict>;
};

/** aggregate avg on columns */
export type IdTokenAdditionalInfos_Avg_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Avg_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "IdTokenAdditionalInfos". All fields are combined with a logical 'AND'. */
export type IdTokenAdditionalInfos_Bool_Exp = {
  AdditionalInfo?: InputMaybe<AdditionalInfos_Bool_Exp>;
  IdToken?: InputMaybe<IdTokens_Bool_Exp>;
  _and?: InputMaybe<Array<IdTokenAdditionalInfos_Bool_Exp>>;
  _not?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
  _or?: InputMaybe<Array<IdTokenAdditionalInfos_Bool_Exp>>;
  additionalInfoId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  idTokenId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Constraint =
  /** unique or primary key constraint on columns "additionalInfoId", "idTokenId" */
  'IdTokenAdditionalInfos_pkey';

/** input type for incrementing numeric columns in table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Inc_Input = {
  additionalInfoId?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Insert_Input = {
  AdditionalInfo?: InputMaybe<AdditionalInfos_Obj_Rel_Insert_Input>;
  IdToken?: InputMaybe<IdTokens_Obj_Rel_Insert_Input>;
  additionalInfoId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type IdTokenAdditionalInfos_Max_Fields = {
  additionalInfoId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Max_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type IdTokenAdditionalInfos_Min_Fields = {
  additionalInfoId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Min_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<IdTokenAdditionalInfos>;
};

/** on_conflict condition type for table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_On_Conflict = {
  constraint: IdTokenAdditionalInfos_Constraint;
  update_columns?: Array<IdTokenAdditionalInfos_Update_Column>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "IdTokenAdditionalInfos". */
export type IdTokenAdditionalInfos_Order_By = {
  AdditionalInfo?: InputMaybe<AdditionalInfos_Order_By>;
  IdToken?: InputMaybe<IdTokens_Order_By>;
  additionalInfoId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: IdTokenAdditionalInfos */
export type IdTokenAdditionalInfos_Pk_Columns_Input = {
  additionalInfoId: Scalars['Int']['input'];
  idTokenId: Scalars['Int']['input'];
};

/** select columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Select_Column =
  /** column name */
  | 'additionalInfoId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'idTokenId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Set_Input = {
  additionalInfoId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type IdTokenAdditionalInfos_Stddev_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Stddev_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type IdTokenAdditionalInfos_Stddev_Pop_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Stddev_Pop_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type IdTokenAdditionalInfos_Stddev_Samp_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Stddev_Samp_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: IdTokenAdditionalInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type IdTokenAdditionalInfos_Stream_Cursor_Value_Input = {
  additionalInfoId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type IdTokenAdditionalInfos_Sum_Fields = {
  additionalInfoId?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Sum_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** update columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Update_Column =
  /** column name */
  | 'additionalInfoId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'idTokenId'
  /** column name */
  | 'updatedAt';

export type IdTokenAdditionalInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<IdTokenAdditionalInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<IdTokenAdditionalInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: IdTokenAdditionalInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type IdTokenAdditionalInfos_Var_Pop_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Var_Pop_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type IdTokenAdditionalInfos_Var_Samp_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Var_Samp_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type IdTokenAdditionalInfos_Variance_Fields = {
  additionalInfoId?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "IdTokenAdditionalInfos" */
export type IdTokenAdditionalInfos_Variance_Order_By = {
  additionalInfoId?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
};

/** columns and relationships of "IdTokenInfos" */
export type IdTokenInfos = {
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** An object relationship */
  IdToken?: Maybe<IdTokens>;
  cacheExpiryDateTime?: Maybe<Scalars['String']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  groupIdTokenId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  personalMessage?: Maybe<Scalars['json']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "IdTokenInfos" */
export type IdTokenInfosAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "IdTokenInfos" */
export type IdTokenInfosAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

/** columns and relationships of "IdTokenInfos" */
export type IdTokenInfosPersonalMessageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "IdTokenInfos" */
export type IdTokenInfos_Aggregate = {
  aggregate?: Maybe<IdTokenInfos_Aggregate_Fields>;
  nodes: Array<IdTokenInfos>;
};

export type IdTokenInfos_Aggregate_Bool_Exp = {
  count?: InputMaybe<IdTokenInfos_Aggregate_Bool_Exp_Count>;
};

export type IdTokenInfos_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<IdTokenInfos_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "IdTokenInfos" */
export type IdTokenInfos_Aggregate_Fields = {
  avg?: Maybe<IdTokenInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IdTokenInfos_Max_Fields>;
  min?: Maybe<IdTokenInfos_Min_Fields>;
  stddev?: Maybe<IdTokenInfos_Stddev_Fields>;
  stddev_pop?: Maybe<IdTokenInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<IdTokenInfos_Stddev_Samp_Fields>;
  sum?: Maybe<IdTokenInfos_Sum_Fields>;
  var_pop?: Maybe<IdTokenInfos_Var_Pop_Fields>;
  var_samp?: Maybe<IdTokenInfos_Var_Samp_Fields>;
  variance?: Maybe<IdTokenInfos_Variance_Fields>;
};

/** aggregate fields of "IdTokenInfos" */
export type IdTokenInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "IdTokenInfos" */
export type IdTokenInfos_Aggregate_Order_By = {
  avg?: InputMaybe<IdTokenInfos_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<IdTokenInfos_Max_Order_By>;
  min?: InputMaybe<IdTokenInfos_Min_Order_By>;
  stddev?: InputMaybe<IdTokenInfos_Stddev_Order_By>;
  stddev_pop?: InputMaybe<IdTokenInfos_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<IdTokenInfos_Stddev_Samp_Order_By>;
  sum?: InputMaybe<IdTokenInfos_Sum_Order_By>;
  var_pop?: InputMaybe<IdTokenInfos_Var_Pop_Order_By>;
  var_samp?: InputMaybe<IdTokenInfos_Var_Samp_Order_By>;
  variance?: InputMaybe<IdTokenInfos_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "IdTokenInfos" */
export type IdTokenInfos_Arr_Rel_Insert_Input = {
  data: Array<IdTokenInfos_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<IdTokenInfos_On_Conflict>;
};

/** aggregate avg on columns */
export type IdTokenInfos_Avg_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Avg_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "IdTokenInfos". All fields are combined with a logical 'AND'. */
export type IdTokenInfos_Bool_Exp = {
  Authorizations?: InputMaybe<Authorizations_Bool_Exp>;
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Bool_Exp>;
  IdToken?: InputMaybe<IdTokens_Bool_Exp>;
  _and?: InputMaybe<Array<IdTokenInfos_Bool_Exp>>;
  _not?: InputMaybe<IdTokenInfos_Bool_Exp>;
  _or?: InputMaybe<Array<IdTokenInfos_Bool_Exp>>;
  cacheExpiryDateTime?: InputMaybe<String_Comparison_Exp>;
  chargingPriority?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  groupIdTokenId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  language1?: InputMaybe<String_Comparison_Exp>;
  language2?: InputMaybe<String_Comparison_Exp>;
  personalMessage?: InputMaybe<Json_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "IdTokenInfos" */
export type IdTokenInfos_Constraint =
  /** unique or primary key constraint on columns "id" */
  'IdTokenInfos_pkey';

/** input type for incrementing numeric columns in table "IdTokenInfos" */
export type IdTokenInfos_Inc_Input = {
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  groupIdTokenId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "IdTokenInfos" */
export type IdTokenInfos_Insert_Input = {
  Authorizations?: InputMaybe<Authorizations_Arr_Rel_Insert_Input>;
  IdToken?: InputMaybe<IdTokens_Obj_Rel_Insert_Input>;
  cacheExpiryDateTime?: InputMaybe<Scalars['String']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdTokenId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type IdTokenInfos_Max_Fields = {
  cacheExpiryDateTime?: Maybe<Scalars['String']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  groupIdTokenId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Max_Order_By = {
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type IdTokenInfos_Min_Fields = {
  cacheExpiryDateTime?: Maybe<Scalars['String']['output']>;
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  groupIdTokenId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language1?: Maybe<Scalars['String']['output']>;
  language2?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Min_Order_By = {
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "IdTokenInfos" */
export type IdTokenInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<IdTokenInfos>;
};

/** input type for inserting object relation for remote table "IdTokenInfos" */
export type IdTokenInfos_Obj_Rel_Insert_Input = {
  data: IdTokenInfos_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<IdTokenInfos_On_Conflict>;
};

/** on_conflict condition type for table "IdTokenInfos" */
export type IdTokenInfos_On_Conflict = {
  constraint: IdTokenInfos_Constraint;
  update_columns?: Array<IdTokenInfos_Update_Column>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "IdTokenInfos". */
export type IdTokenInfos_Order_By = {
  Authorizations_aggregate?: InputMaybe<Authorizations_Aggregate_Order_By>;
  IdToken?: InputMaybe<IdTokens_Order_By>;
  cacheExpiryDateTime?: InputMaybe<Order_By>;
  chargingPriority?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  language1?: InputMaybe<Order_By>;
  language2?: InputMaybe<Order_By>;
  personalMessage?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: IdTokenInfos */
export type IdTokenInfos_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "IdTokenInfos" */
export type IdTokenInfos_Select_Column =
  /** column name */
  | 'cacheExpiryDateTime'
  /** column name */
  | 'chargingPriority'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'groupIdTokenId'
  /** column name */
  | 'id'
  /** column name */
  | 'language1'
  /** column name */
  | 'language2'
  /** column name */
  | 'personalMessage'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "IdTokenInfos" */
export type IdTokenInfos_Set_Input = {
  cacheExpiryDateTime?: InputMaybe<Scalars['String']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdTokenId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type IdTokenInfos_Stddev_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Stddev_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type IdTokenInfos_Stddev_Pop_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Stddev_Pop_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type IdTokenInfos_Stddev_Samp_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Stddev_Samp_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "IdTokenInfos" */
export type IdTokenInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: IdTokenInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type IdTokenInfos_Stream_Cursor_Value_Input = {
  cacheExpiryDateTime?: InputMaybe<Scalars['String']['input']>;
  chargingPriority?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdTokenId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  language1?: InputMaybe<Scalars['String']['input']>;
  language2?: InputMaybe<Scalars['String']['input']>;
  personalMessage?: InputMaybe<Scalars['json']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type IdTokenInfos_Sum_Fields = {
  chargingPriority?: Maybe<Scalars['Int']['output']>;
  groupIdTokenId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Sum_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "IdTokenInfos" */
export type IdTokenInfos_Update_Column =
  /** column name */
  | 'cacheExpiryDateTime'
  /** column name */
  | 'chargingPriority'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'groupIdTokenId'
  /** column name */
  | 'id'
  /** column name */
  | 'language1'
  /** column name */
  | 'language2'
  /** column name */
  | 'personalMessage'
  /** column name */
  | 'status'
  /** column name */
  | 'updatedAt';

export type IdTokenInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<IdTokenInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<IdTokenInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: IdTokenInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type IdTokenInfos_Var_Pop_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Var_Pop_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type IdTokenInfos_Var_Samp_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Var_Samp_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type IdTokenInfos_Variance_Fields = {
  chargingPriority?: Maybe<Scalars['Float']['output']>;
  groupIdTokenId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "IdTokenInfos" */
export type IdTokenInfos_Variance_Order_By = {
  chargingPriority?: InputMaybe<Order_By>;
  groupIdTokenId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "IdTokens" */
export type IdTokens = {
  /** An object relationship */
  Authorization?: Maybe<Authorizations>;
  /** An array relationship */
  IdTokenAdditionalInfos: Array<IdTokenAdditionalInfos>;
  /** An aggregate relationship */
  IdTokenAdditionalInfos_aggregate: IdTokenAdditionalInfos_Aggregate;
  /** An array relationship */
  IdTokenInfos: Array<IdTokenInfos>;
  /** An aggregate relationship */
  IdTokenInfos_aggregate: IdTokenInfos_Aggregate;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  idToken?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "IdTokens" */
export type IdTokensIdTokenAdditionalInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

/** columns and relationships of "IdTokens" */
export type IdTokensIdTokenAdditionalInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

/** columns and relationships of "IdTokens" */
export type IdTokensIdTokenInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenInfos_Order_By>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

/** columns and relationships of "IdTokens" */
export type IdTokensIdTokenInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenInfos_Order_By>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

/** columns and relationships of "IdTokens" */
export type IdTokensTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "IdTokens" */
export type IdTokensTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** aggregated selection of "IdTokens" */
export type IdTokens_Aggregate = {
  aggregate?: Maybe<IdTokens_Aggregate_Fields>;
  nodes: Array<IdTokens>;
};

/** aggregate fields of "IdTokens" */
export type IdTokens_Aggregate_Fields = {
  avg?: Maybe<IdTokens_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<IdTokens_Max_Fields>;
  min?: Maybe<IdTokens_Min_Fields>;
  stddev?: Maybe<IdTokens_Stddev_Fields>;
  stddev_pop?: Maybe<IdTokens_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<IdTokens_Stddev_Samp_Fields>;
  sum?: Maybe<IdTokens_Sum_Fields>;
  var_pop?: Maybe<IdTokens_Var_Pop_Fields>;
  var_samp?: Maybe<IdTokens_Var_Samp_Fields>;
  variance?: Maybe<IdTokens_Variance_Fields>;
};

/** aggregate fields of "IdTokens" */
export type IdTokens_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<IdTokens_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type IdTokens_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "IdTokens". All fields are combined with a logical 'AND'. */
export type IdTokens_Bool_Exp = {
  Authorization?: InputMaybe<Authorizations_Bool_Exp>;
  IdTokenAdditionalInfos?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
  IdTokenAdditionalInfos_aggregate?: InputMaybe<IdTokenAdditionalInfos_Aggregate_Bool_Exp>;
  IdTokenInfos?: InputMaybe<IdTokenInfos_Bool_Exp>;
  IdTokenInfos_aggregate?: InputMaybe<IdTokenInfos_Aggregate_Bool_Exp>;
  TransactionEvents?: InputMaybe<TransactionEvents_Bool_Exp>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<IdTokens_Bool_Exp>>;
  _not?: InputMaybe<IdTokens_Bool_Exp>;
  _or?: InputMaybe<Array<IdTokens_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idToken?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "IdTokens" */
export type IdTokens_Constraint =
  /** unique or primary key constraint on columns "type", "idToken" */
  | 'IdTokens_idToken_type_key'
  /** unique or primary key constraint on columns "id" */
  | 'IdTokens_pkey';

/** input type for incrementing numeric columns in table "IdTokens" */
export type IdTokens_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "IdTokens" */
export type IdTokens_Insert_Input = {
  Authorization?: InputMaybe<Authorizations_Obj_Rel_Insert_Input>;
  IdTokenAdditionalInfos?: InputMaybe<IdTokenAdditionalInfos_Arr_Rel_Insert_Input>;
  IdTokenInfos?: InputMaybe<IdTokenInfos_Arr_Rel_Insert_Input>;
  TransactionEvents?: InputMaybe<TransactionEvents_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type IdTokens_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type IdTokens_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "IdTokens" */
export type IdTokens_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<IdTokens>;
};

/** input type for inserting object relation for remote table "IdTokens" */
export type IdTokens_Obj_Rel_Insert_Input = {
  data: IdTokens_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<IdTokens_On_Conflict>;
};

/** on_conflict condition type for table "IdTokens" */
export type IdTokens_On_Conflict = {
  constraint: IdTokens_Constraint;
  update_columns?: Array<IdTokens_Update_Column>;
  where?: InputMaybe<IdTokens_Bool_Exp>;
};

/** Ordering options when selecting data from "IdTokens". */
export type IdTokens_Order_By = {
  Authorization?: InputMaybe<Authorizations_Order_By>;
  IdTokenAdditionalInfos_aggregate?: InputMaybe<IdTokenAdditionalInfos_Aggregate_Order_By>;
  IdTokenInfos_aggregate?: InputMaybe<IdTokenInfos_Aggregate_Order_By>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: IdTokens */
export type IdTokens_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "IdTokens" */
export type IdTokens_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "IdTokens" */
export type IdTokens_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type IdTokens_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type IdTokens_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type IdTokens_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "IdTokens" */
export type IdTokens_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: IdTokens_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type IdTokens_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type IdTokens_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "IdTokens" */
export type IdTokens_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

export type IdTokens_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<IdTokens_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<IdTokens_Set_Input>;
  /** filter the rows which have to be updated */
  where: IdTokens_Bool_Exp;
};

/** aggregate var_pop on columns */
export type IdTokens_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type IdTokens_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type IdTokens_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "Images" */
export type Images = {
  /** An object relationship */
  BusinessDetail?: Maybe<BusinessDetails>;
  businessDetailsId?: Maybe<Scalars['Int']['output']>;
  category?: Maybe<Scalars['enum_Images_category']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  height?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  thumbnail?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['enum_Images_type']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
  width?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "Images" */
export type Images_Aggregate = {
  aggregate?: Maybe<Images_Aggregate_Fields>;
  nodes: Array<Images>;
};

export type Images_Aggregate_Bool_Exp = {
  count?: InputMaybe<Images_Aggregate_Bool_Exp_Count>;
};

export type Images_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Images_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Images_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Images" */
export type Images_Aggregate_Fields = {
  avg?: Maybe<Images_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Images_Max_Fields>;
  min?: Maybe<Images_Min_Fields>;
  stddev?: Maybe<Images_Stddev_Fields>;
  stddev_pop?: Maybe<Images_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Images_Stddev_Samp_Fields>;
  sum?: Maybe<Images_Sum_Fields>;
  var_pop?: Maybe<Images_Var_Pop_Fields>;
  var_samp?: Maybe<Images_Var_Samp_Fields>;
  variance?: Maybe<Images_Variance_Fields>;
};

/** aggregate fields of "Images" */
export type Images_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Images_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Images" */
export type Images_Aggregate_Order_By = {
  avg?: InputMaybe<Images_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Images_Max_Order_By>;
  min?: InputMaybe<Images_Min_Order_By>;
  stddev?: InputMaybe<Images_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Images_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Images_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Images_Sum_Order_By>;
  var_pop?: InputMaybe<Images_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Images_Var_Samp_Order_By>;
  variance?: InputMaybe<Images_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Images" */
export type Images_Arr_Rel_Insert_Input = {
  data: Array<Images_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Images_On_Conflict>;
};

/** aggregate avg on columns */
export type Images_Avg_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Images" */
export type Images_Avg_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Images". All fields are combined with a logical 'AND'. */
export type Images_Bool_Exp = {
  BusinessDetail?: InputMaybe<BusinessDetails_Bool_Exp>;
  _and?: InputMaybe<Array<Images_Bool_Exp>>;
  _not?: InputMaybe<Images_Bool_Exp>;
  _or?: InputMaybe<Array<Images_Bool_Exp>>;
  businessDetailsId?: InputMaybe<Int_Comparison_Exp>;
  category?: InputMaybe<Enum_Images_Category_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  height?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  thumbnail?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<Enum_Images_Type_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  width?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "Images" */
export type Images_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Images_pkey';

/** input type for incrementing numeric columns in table "Images" */
export type Images_Inc_Input = {
  businessDetailsId?: InputMaybe<Scalars['Int']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Images" */
export type Images_Insert_Input = {
  BusinessDetail?: InputMaybe<BusinessDetails_Obj_Rel_Insert_Input>;
  businessDetailsId?: InputMaybe<Scalars['Int']['input']>;
  category?: InputMaybe<Scalars['enum_Images_category']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['enum_Images_type']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Images_Max_Fields = {
  businessDetailsId?: Maybe<Scalars['Int']['output']>;
  category?: Maybe<Scalars['enum_Images_category']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  thumbnail?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['enum_Images_type']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  width?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "Images" */
export type Images_Max_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  thumbnail?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Images_Min_Fields = {
  businessDetailsId?: Maybe<Scalars['Int']['output']>;
  category?: Maybe<Scalars['enum_Images_category']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  thumbnail?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['enum_Images_type']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  width?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "Images" */
export type Images_Min_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  thumbnail?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Images" */
export type Images_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Images>;
};

/** on_conflict condition type for table "Images" */
export type Images_On_Conflict = {
  constraint: Images_Constraint;
  update_columns?: Array<Images_Update_Column>;
  where?: InputMaybe<Images_Bool_Exp>;
};

/** Ordering options when selecting data from "Images". */
export type Images_Order_By = {
  BusinessDetail?: InputMaybe<BusinessDetails_Order_By>;
  businessDetailsId?: InputMaybe<Order_By>;
  category?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  thumbnail?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Images */
export type Images_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Images" */
export type Images_Select_Column =
  /** column name */
  | 'businessDetailsId'
  /** column name */
  | 'category'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'height'
  /** column name */
  | 'id'
  /** column name */
  | 'thumbnail'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'width';

/** input type for updating data in table "Images" */
export type Images_Set_Input = {
  businessDetailsId?: InputMaybe<Scalars['Int']['input']>;
  category?: InputMaybe<Scalars['enum_Images_category']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['enum_Images_type']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Images_Stddev_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Images" */
export type Images_Stddev_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Images_Stddev_Pop_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Images" */
export type Images_Stddev_Pop_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Images_Stddev_Samp_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Images" */
export type Images_Stddev_Samp_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Images" */
export type Images_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Images_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Images_Stream_Cursor_Value_Input = {
  businessDetailsId?: InputMaybe<Scalars['Int']['input']>;
  category?: InputMaybe<Scalars['enum_Images_category']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['enum_Images_type']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Images_Sum_Fields = {
  businessDetailsId?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  width?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Images" */
export type Images_Sum_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** update columns of table "Images" */
export type Images_Update_Column =
  /** column name */
  | 'businessDetailsId'
  /** column name */
  | 'category'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'height'
  /** column name */
  | 'id'
  /** column name */
  | 'thumbnail'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'width';

export type Images_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Images_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Images_Set_Input>;
  /** filter the rows which have to be updated */
  where: Images_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Images_Var_Pop_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Images" */
export type Images_Var_Pop_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Images_Var_Samp_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Images" */
export type Images_Var_Samp_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Images_Variance_Fields = {
  businessDetailsId?: Maybe<Scalars['Float']['output']>;
  height?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  width?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Images" */
export type Images_Variance_Order_By = {
  businessDetailsId?: InputMaybe<Order_By>;
  height?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  width?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** columns and relationships of "Locations" */
export type Locations = {
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** An object relationship */
  OcpiLocation?: Maybe<OcpiLocations>;
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  coordinates?: Maybe<Scalars['geometry']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Locations" */
export type LocationsChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** columns and relationships of "Locations" */
export type LocationsChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

/** aggregated selection of "Locations" */
export type Locations_Aggregate = {
  aggregate?: Maybe<Locations_Aggregate_Fields>;
  nodes: Array<Locations>;
};

/** aggregate fields of "Locations" */
export type Locations_Aggregate_Fields = {
  avg?: Maybe<Locations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Locations_Max_Fields>;
  min?: Maybe<Locations_Min_Fields>;
  stddev?: Maybe<Locations_Stddev_Fields>;
  stddev_pop?: Maybe<Locations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locations_Stddev_Samp_Fields>;
  sum?: Maybe<Locations_Sum_Fields>;
  var_pop?: Maybe<Locations_Var_Pop_Fields>;
  var_samp?: Maybe<Locations_Var_Samp_Fields>;
  variance?: Maybe<Locations_Variance_Fields>;
};

/** aggregate fields of "Locations" */
export type Locations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Locations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Locations_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Locations". All fields are combined with a logical 'AND'. */
export type Locations_Bool_Exp = {
  ChargingStations?: InputMaybe<ChargingStations_Bool_Exp>;
  ChargingStations_aggregate?: InputMaybe<ChargingStations_Aggregate_Bool_Exp>;
  OcpiLocation?: InputMaybe<OcpiLocations_Bool_Exp>;
  _and?: InputMaybe<Array<Locations_Bool_Exp>>;
  _not?: InputMaybe<Locations_Bool_Exp>;
  _or?: InputMaybe<Array<Locations_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  coordinates?: InputMaybe<Geometry_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  postalCode?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Locations" */
export type Locations_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Locations_pkey';

/** input type for incrementing numeric columns in table "Locations" */
export type Locations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Locations" */
export type Locations_Insert_Input = {
  ChargingStations?: InputMaybe<ChargingStations_Arr_Rel_Insert_Input>;
  OcpiLocation?: InputMaybe<OcpiLocations_Obj_Rel_Insert_Input>;
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Locations_Max_Fields = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Locations_Min_Fields = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "Locations" */
export type Locations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Locations>;
};

/** input type for inserting object relation for remote table "Locations" */
export type Locations_Obj_Rel_Insert_Input = {
  data: Locations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** on_conflict condition type for table "Locations" */
export type Locations_On_Conflict = {
  constraint: Locations_Constraint;
  update_columns?: Array<Locations_Update_Column>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

/** Ordering options when selecting data from "Locations". */
export type Locations_Order_By = {
  ChargingStations_aggregate?: InputMaybe<ChargingStations_Aggregate_Order_By>;
  OcpiLocation?: InputMaybe<OcpiLocations_Order_By>;
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  coordinates?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  postalCode?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Locations */
export type Locations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Locations" */
export type Locations_Select_Column =
  /** column name */
  | 'address'
  /** column name */
  | 'city'
  /** column name */
  | 'coordinates'
  /** column name */
  | 'country'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'postalCode'
  /** column name */
  | 'state'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Locations" */
export type Locations_Set_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Locations_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Locations_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Locations_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Locations" */
export type Locations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Locations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Locations_Stream_Cursor_Value_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  coordinates?: InputMaybe<Scalars['geometry']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Locations_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Locations" */
export type Locations_Update_Column =
  /** column name */
  | 'address'
  /** column name */
  | 'city'
  /** column name */
  | 'coordinates'
  /** column name */
  | 'country'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'postalCode'
  /** column name */
  | 'state'
  /** column name */
  | 'updatedAt';

export type Locations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Locations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Locations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Locations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Locations_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Locations_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Locations_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "MessageInfos" */
export type MessageInfos = {
  /** An object relationship */
  Component?: Maybe<Components>;
  active?: Maybe<Scalars['Boolean']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  endDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  message?: Maybe<Scalars['json']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  startDateTime?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "MessageInfos" */
export type MessageInfosMessageArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "MessageInfos" */
export type MessageInfos_Aggregate = {
  aggregate?: Maybe<MessageInfos_Aggregate_Fields>;
  nodes: Array<MessageInfos>;
};

export type MessageInfos_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<MessageInfos_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<MessageInfos_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<MessageInfos_Aggregate_Bool_Exp_Count>;
};

export type MessageInfos_Aggregate_Bool_Exp_Bool_And = {
  arguments: MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MessageInfos_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type MessageInfos_Aggregate_Bool_Exp_Bool_Or = {
  arguments: MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MessageInfos_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type MessageInfos_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<MessageInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MessageInfos_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "MessageInfos" */
export type MessageInfos_Aggregate_Fields = {
  avg?: Maybe<MessageInfos_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MessageInfos_Max_Fields>;
  min?: Maybe<MessageInfos_Min_Fields>;
  stddev?: Maybe<MessageInfos_Stddev_Fields>;
  stddev_pop?: Maybe<MessageInfos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<MessageInfos_Stddev_Samp_Fields>;
  sum?: Maybe<MessageInfos_Sum_Fields>;
  var_pop?: Maybe<MessageInfos_Var_Pop_Fields>;
  var_samp?: Maybe<MessageInfos_Var_Samp_Fields>;
  variance?: Maybe<MessageInfos_Variance_Fields>;
};

/** aggregate fields of "MessageInfos" */
export type MessageInfos_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<MessageInfos_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "MessageInfos" */
export type MessageInfos_Aggregate_Order_By = {
  avg?: InputMaybe<MessageInfos_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<MessageInfos_Max_Order_By>;
  min?: InputMaybe<MessageInfos_Min_Order_By>;
  stddev?: InputMaybe<MessageInfos_Stddev_Order_By>;
  stddev_pop?: InputMaybe<MessageInfos_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<MessageInfos_Stddev_Samp_Order_By>;
  sum?: InputMaybe<MessageInfos_Sum_Order_By>;
  var_pop?: InputMaybe<MessageInfos_Var_Pop_Order_By>;
  var_samp?: InputMaybe<MessageInfos_Var_Samp_Order_By>;
  variance?: InputMaybe<MessageInfos_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "MessageInfos" */
export type MessageInfos_Arr_Rel_Insert_Input = {
  data: Array<MessageInfos_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<MessageInfos_On_Conflict>;
};

/** aggregate avg on columns */
export type MessageInfos_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "MessageInfos" */
export type MessageInfos_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "MessageInfos". All fields are combined with a logical 'AND'. */
export type MessageInfos_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  _and?: InputMaybe<Array<MessageInfos_Bool_Exp>>;
  _not?: InputMaybe<MessageInfos_Bool_Exp>;
  _or?: InputMaybe<Array<MessageInfos_Bool_Exp>>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  endDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  message?: InputMaybe<Json_Comparison_Exp>;
  priority?: InputMaybe<String_Comparison_Exp>;
  startDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  transactionId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "MessageInfos" */
export type MessageInfos_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  | 'MessageInfos_pkey'
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'MessageInfos_stationId_id_key';

/** input type for incrementing numeric columns in table "MessageInfos" */
export type MessageInfos_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "MessageInfos" */
export type MessageInfos_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  endDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['json']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  startDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type MessageInfos_Max_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  endDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  startDateTime?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "MessageInfos" */
export type MessageInfos_Max_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  endDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDateTime?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type MessageInfos_Min_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  endDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  startDateTime?: Maybe<Scalars['timestamptz']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "MessageInfos" */
export type MessageInfos_Min_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  endDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDateTime?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "MessageInfos" */
export type MessageInfos_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<MessageInfos>;
};

/** on_conflict condition type for table "MessageInfos" */
export type MessageInfos_On_Conflict = {
  constraint: MessageInfos_Constraint;
  update_columns?: Array<MessageInfos_Update_Column>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

/** Ordering options when selecting data from "MessageInfos". */
export type MessageInfos_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  active?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  endDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  priority?: InputMaybe<Order_By>;
  startDateTime?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: MessageInfos */
export type MessageInfos_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "MessageInfos" */
export type MessageInfos_Select_Column =
  /** column name */
  | 'active'
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'endDateTime'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'priority'
  /** column name */
  | 'startDateTime'
  /** column name */
  | 'state'
  /** column name */
  | 'stationId'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

/** select "MessageInfos_aggregate_bool_exp_bool_and_arguments_columns" columns of table "MessageInfos" */
export type MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'active';

/** select "MessageInfos_aggregate_bool_exp_bool_or_arguments_columns" columns of table "MessageInfos" */
export type MessageInfos_Select_Column_MessageInfos_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'active';

/** input type for updating data in table "MessageInfos" */
export type MessageInfos_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  endDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['json']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  startDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type MessageInfos_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "MessageInfos" */
export type MessageInfos_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type MessageInfos_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "MessageInfos" */
export type MessageInfos_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type MessageInfos_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "MessageInfos" */
export type MessageInfos_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "MessageInfos" */
export type MessageInfos_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: MessageInfos_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type MessageInfos_Stream_Cursor_Value_Input = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  endDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  message?: InputMaybe<Scalars['json']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  startDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type MessageInfos_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "MessageInfos" */
export type MessageInfos_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "MessageInfos" */
export type MessageInfos_Update_Column =
  /** column name */
  | 'active'
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'endDateTime'
  /** column name */
  | 'id'
  /** column name */
  | 'message'
  /** column name */
  | 'priority'
  /** column name */
  | 'startDateTime'
  /** column name */
  | 'state'
  /** column name */
  | 'stationId'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

export type MessageInfos_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<MessageInfos_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<MessageInfos_Set_Input>;
  /** filter the rows which have to be updated */
  where: MessageInfos_Bool_Exp;
};

/** aggregate var_pop on columns */
export type MessageInfos_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "MessageInfos" */
export type MessageInfos_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type MessageInfos_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "MessageInfos" */
export type MessageInfos_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type MessageInfos_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "MessageInfos" */
export type MessageInfos_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "MeterValues" */
export type MeterValues = {
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  /** An object relationship */
  TransactionEvent?: Maybe<TransactionEvents>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  sampledValue?: Maybe<Scalars['json']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "MeterValues" */
export type MeterValuesSampledValueArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "MeterValues" */
export type MeterValues_Aggregate = {
  aggregate?: Maybe<MeterValues_Aggregate_Fields>;
  nodes: Array<MeterValues>;
};

export type MeterValues_Aggregate_Bool_Exp = {
  count?: InputMaybe<MeterValues_Aggregate_Bool_Exp_Count>;
};

export type MeterValues_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<MeterValues_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<MeterValues_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "MeterValues" */
export type MeterValues_Aggregate_Fields = {
  avg?: Maybe<MeterValues_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<MeterValues_Max_Fields>;
  min?: Maybe<MeterValues_Min_Fields>;
  stddev?: Maybe<MeterValues_Stddev_Fields>;
  stddev_pop?: Maybe<MeterValues_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<MeterValues_Stddev_Samp_Fields>;
  sum?: Maybe<MeterValues_Sum_Fields>;
  var_pop?: Maybe<MeterValues_Var_Pop_Fields>;
  var_samp?: Maybe<MeterValues_Var_Samp_Fields>;
  variance?: Maybe<MeterValues_Variance_Fields>;
};

/** aggregate fields of "MeterValues" */
export type MeterValues_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<MeterValues_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "MeterValues" */
export type MeterValues_Aggregate_Order_By = {
  avg?: InputMaybe<MeterValues_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<MeterValues_Max_Order_By>;
  min?: InputMaybe<MeterValues_Min_Order_By>;
  stddev?: InputMaybe<MeterValues_Stddev_Order_By>;
  stddev_pop?: InputMaybe<MeterValues_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<MeterValues_Stddev_Samp_Order_By>;
  sum?: InputMaybe<MeterValues_Sum_Order_By>;
  var_pop?: InputMaybe<MeterValues_Var_Pop_Order_By>;
  var_samp?: InputMaybe<MeterValues_Var_Samp_Order_By>;
  variance?: InputMaybe<MeterValues_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "MeterValues" */
export type MeterValues_Arr_Rel_Insert_Input = {
  data: Array<MeterValues_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<MeterValues_On_Conflict>;
};

/** aggregate avg on columns */
export type MeterValues_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "MeterValues" */
export type MeterValues_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "MeterValues". All fields are combined with a logical 'AND'. */
export type MeterValues_Bool_Exp = {
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  TransactionEvent?: InputMaybe<TransactionEvents_Bool_Exp>;
  _and?: InputMaybe<Array<MeterValues_Bool_Exp>>;
  _not?: InputMaybe<MeterValues_Bool_Exp>;
  _or?: InputMaybe<Array<MeterValues_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  sampledValue?: InputMaybe<Json_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  transactionEventId?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "MeterValues" */
export type MeterValues_Constraint =
  /** unique or primary key constraint on columns "id" */
  'MeterValues_pkey';

/** input type for incrementing numeric columns in table "MeterValues" */
export type MeterValues_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "MeterValues" */
export type MeterValues_Insert_Input = {
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  TransactionEvent?: InputMaybe<TransactionEvents_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sampledValue?: InputMaybe<Scalars['json']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type MeterValues_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "MeterValues" */
export type MeterValues_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type MeterValues_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "MeterValues" */
export type MeterValues_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "MeterValues" */
export type MeterValues_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<MeterValues>;
};

/** on_conflict condition type for table "MeterValues" */
export type MeterValues_On_Conflict = {
  constraint: MeterValues_Constraint;
  update_columns?: Array<MeterValues_Update_Column>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** Ordering options when selecting data from "MeterValues". */
export type MeterValues_Order_By = {
  Transaction?: InputMaybe<Transactions_Order_By>;
  TransactionEvent?: InputMaybe<TransactionEvents_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sampledValue?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: MeterValues */
export type MeterValues_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "MeterValues" */
export type MeterValues_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'sampledValue'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionEventId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "MeterValues" */
export type MeterValues_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sampledValue?: InputMaybe<Scalars['json']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type MeterValues_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "MeterValues" */
export type MeterValues_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type MeterValues_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "MeterValues" */
export type MeterValues_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type MeterValues_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "MeterValues" */
export type MeterValues_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "MeterValues" */
export type MeterValues_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: MeterValues_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type MeterValues_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sampledValue?: InputMaybe<Scalars['json']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionEventId?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type MeterValues_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionEventId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "MeterValues" */
export type MeterValues_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** update columns of table "MeterValues" */
export type MeterValues_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'sampledValue'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionEventId'
  /** column name */
  | 'updatedAt';

export type MeterValues_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<MeterValues_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<MeterValues_Set_Input>;
  /** filter the rows which have to be updated */
  where: MeterValues_Bool_Exp;
};

/** aggregate var_pop on columns */
export type MeterValues_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "MeterValues" */
export type MeterValues_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type MeterValues_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "MeterValues" */
export type MeterValues_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type MeterValues_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
  transactionEventId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "MeterValues" */
export type MeterValues_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionEventId?: InputMaybe<Order_By>;
};

/** columns and relationships of "OcpiConnectors" */
export type OcpiConnectors = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "OcpiConnectors" */
export type OcpiConnectors_Aggregate = {
  aggregate?: Maybe<OcpiConnectors_Aggregate_Fields>;
  nodes: Array<OcpiConnectors>;
};

/** aggregate fields of "OcpiConnectors" */
export type OcpiConnectors_Aggregate_Fields = {
  avg?: Maybe<OcpiConnectors_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcpiConnectors_Max_Fields>;
  min?: Maybe<OcpiConnectors_Min_Fields>;
  stddev?: Maybe<OcpiConnectors_Stddev_Fields>;
  stddev_pop?: Maybe<OcpiConnectors_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcpiConnectors_Stddev_Samp_Fields>;
  sum?: Maybe<OcpiConnectors_Sum_Fields>;
  var_pop?: Maybe<OcpiConnectors_Var_Pop_Fields>;
  var_samp?: Maybe<OcpiConnectors_Var_Samp_Fields>;
  variance?: Maybe<OcpiConnectors_Variance_Fields>;
};

/** aggregate fields of "OcpiConnectors" */
export type OcpiConnectors_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcpiConnectors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type OcpiConnectors_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "OcpiConnectors". All fields are combined with a logical 'AND'. */
export type OcpiConnectors_Bool_Exp = {
  _and?: InputMaybe<Array<OcpiConnectors_Bool_Exp>>;
  _not?: InputMaybe<OcpiConnectors_Bool_Exp>;
  _or?: InputMaybe<Array<OcpiConnectors_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lastUpdated?: InputMaybe<Timestamptz_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OcpiConnectors" */
export type OcpiConnectors_Constraint =
  /** unique or primary key constraint on columns "stationId", "connectorId", "evseId" */
  | 'OcpiConnectors_connectorId_evseId_stationId_key'
  /** unique or primary key constraint on columns "id" */
  | 'OcpiConnectors_pkey';

/** input type for incrementing numeric columns in table "OcpiConnectors" */
export type OcpiConnectors_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OcpiConnectors" */
export type OcpiConnectors_Insert_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type OcpiConnectors_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type OcpiConnectors_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "OcpiConnectors" */
export type OcpiConnectors_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcpiConnectors>;
};

/** on_conflict condition type for table "OcpiConnectors" */
export type OcpiConnectors_On_Conflict = {
  constraint: OcpiConnectors_Constraint;
  update_columns?: Array<OcpiConnectors_Update_Column>;
  where?: InputMaybe<OcpiConnectors_Bool_Exp>;
};

/** Ordering options when selecting data from "OcpiConnectors". */
export type OcpiConnectors_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUpdated?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OcpiConnectors */
export type OcpiConnectors_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "OcpiConnectors" */
export type OcpiConnectors_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'lastUpdated'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "OcpiConnectors" */
export type OcpiConnectors_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type OcpiConnectors_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type OcpiConnectors_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type OcpiConnectors_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "OcpiConnectors" */
export type OcpiConnectors_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcpiConnectors_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcpiConnectors_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type OcpiConnectors_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "OcpiConnectors" */
export type OcpiConnectors_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'lastUpdated'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

export type OcpiConnectors_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcpiConnectors_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcpiConnectors_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcpiConnectors_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcpiConnectors_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type OcpiConnectors_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type OcpiConnectors_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "OcpiEvses" */
export type OcpiEvses = {
  createdAt: Scalars['timestamptz']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  physicalReference?: Maybe<Scalars['String']['output']>;
  removed?: Maybe<Scalars['Boolean']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "OcpiEvses" */
export type OcpiEvses_Aggregate = {
  aggregate?: Maybe<OcpiEvses_Aggregate_Fields>;
  nodes: Array<OcpiEvses>;
};

/** aggregate fields of "OcpiEvses" */
export type OcpiEvses_Aggregate_Fields = {
  avg?: Maybe<OcpiEvses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcpiEvses_Max_Fields>;
  min?: Maybe<OcpiEvses_Min_Fields>;
  stddev?: Maybe<OcpiEvses_Stddev_Fields>;
  stddev_pop?: Maybe<OcpiEvses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcpiEvses_Stddev_Samp_Fields>;
  sum?: Maybe<OcpiEvses_Sum_Fields>;
  var_pop?: Maybe<OcpiEvses_Var_Pop_Fields>;
  var_samp?: Maybe<OcpiEvses_Var_Samp_Fields>;
  variance?: Maybe<OcpiEvses_Variance_Fields>;
};

/** aggregate fields of "OcpiEvses" */
export type OcpiEvses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcpiEvses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type OcpiEvses_Avg_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "OcpiEvses". All fields are combined with a logical 'AND'. */
export type OcpiEvses_Bool_Exp = {
  _and?: InputMaybe<Array<OcpiEvses_Bool_Exp>>;
  _not?: InputMaybe<OcpiEvses_Bool_Exp>;
  _or?: InputMaybe<Array<OcpiEvses_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lastUpdated?: InputMaybe<Timestamptz_Comparison_Exp>;
  physicalReference?: InputMaybe<String_Comparison_Exp>;
  removed?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OcpiEvses" */
export type OcpiEvses_Constraint =
  /** unique or primary key constraint on columns "stationId", "evseId" */
  | 'OcpiEvses_evseId_stationId_key'
  /** unique or primary key constraint on columns "id" */
  | 'OcpiEvses_pkey';

/** input type for incrementing numeric columns in table "OcpiEvses" */
export type OcpiEvses_Inc_Input = {
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OcpiEvses" */
export type OcpiEvses_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  physicalReference?: InputMaybe<Scalars['String']['input']>;
  removed?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type OcpiEvses_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  physicalReference?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type OcpiEvses_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  physicalReference?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "OcpiEvses" */
export type OcpiEvses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcpiEvses>;
};

/** on_conflict condition type for table "OcpiEvses" */
export type OcpiEvses_On_Conflict = {
  constraint: OcpiEvses_Constraint;
  update_columns?: Array<OcpiEvses_Update_Column>;
  where?: InputMaybe<OcpiEvses_Bool_Exp>;
};

/** Ordering options when selecting data from "OcpiEvses". */
export type OcpiEvses_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUpdated?: InputMaybe<Order_By>;
  physicalReference?: InputMaybe<Order_By>;
  removed?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OcpiEvses */
export type OcpiEvses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "OcpiEvses" */
export type OcpiEvses_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'lastUpdated'
  /** column name */
  | 'physicalReference'
  /** column name */
  | 'removed'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "OcpiEvses" */
export type OcpiEvses_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  physicalReference?: InputMaybe<Scalars['String']['input']>;
  removed?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type OcpiEvses_Stddev_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type OcpiEvses_Stddev_Pop_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type OcpiEvses_Stddev_Samp_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "OcpiEvses" */
export type OcpiEvses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcpiEvses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcpiEvses_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  physicalReference?: InputMaybe<Scalars['String']['input']>;
  removed?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type OcpiEvses_Sum_Fields = {
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "OcpiEvses" */
export type OcpiEvses_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'lastUpdated'
  /** column name */
  | 'physicalReference'
  /** column name */
  | 'removed'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt';

export type OcpiEvses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcpiEvses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcpiEvses_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcpiEvses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcpiEvses_Var_Pop_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type OcpiEvses_Var_Samp_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type OcpiEvses_Variance_Fields = {
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "OcpiLocations" */
export type OcpiLocations = {
  /** An object relationship */
  Location?: Maybe<Locations>;
  /** An array relationship */
  OcpiReservations: Array<OcpiReservations>;
  /** An aggregate relationship */
  OcpiReservations_aggregate: OcpiReservations_Aggregate;
  coreLocationId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  publish?: Maybe<Scalars['Boolean']['output']>;
  timeZone?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "OcpiLocations" */
export type OcpiLocationsOcpiReservationsArgs = {
  distinct_on?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiReservations_Order_By>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

/** columns and relationships of "OcpiLocations" */
export type OcpiLocationsOcpiReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiReservations_Order_By>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

/** aggregated selection of "OcpiLocations" */
export type OcpiLocations_Aggregate = {
  aggregate?: Maybe<OcpiLocations_Aggregate_Fields>;
  nodes: Array<OcpiLocations>;
};

/** aggregate fields of "OcpiLocations" */
export type OcpiLocations_Aggregate_Fields = {
  avg?: Maybe<OcpiLocations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcpiLocations_Max_Fields>;
  min?: Maybe<OcpiLocations_Min_Fields>;
  stddev?: Maybe<OcpiLocations_Stddev_Fields>;
  stddev_pop?: Maybe<OcpiLocations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcpiLocations_Stddev_Samp_Fields>;
  sum?: Maybe<OcpiLocations_Sum_Fields>;
  var_pop?: Maybe<OcpiLocations_Var_Pop_Fields>;
  var_samp?: Maybe<OcpiLocations_Var_Samp_Fields>;
  variance?: Maybe<OcpiLocations_Variance_Fields>;
};

/** aggregate fields of "OcpiLocations" */
export type OcpiLocations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcpiLocations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type OcpiLocations_Avg_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "OcpiLocations". All fields are combined with a logical 'AND'. */
export type OcpiLocations_Bool_Exp = {
  Location?: InputMaybe<Locations_Bool_Exp>;
  OcpiReservations?: InputMaybe<OcpiReservations_Bool_Exp>;
  OcpiReservations_aggregate?: InputMaybe<OcpiReservations_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<OcpiLocations_Bool_Exp>>;
  _not?: InputMaybe<OcpiLocations_Bool_Exp>;
  _or?: InputMaybe<Array<OcpiLocations_Bool_Exp>>;
  coreLocationId?: InputMaybe<Int_Comparison_Exp>;
  countryCode?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  lastUpdated?: InputMaybe<Timestamptz_Comparison_Exp>;
  partyId?: InputMaybe<String_Comparison_Exp>;
  publish?: InputMaybe<Boolean_Comparison_Exp>;
  timeZone?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OcpiLocations" */
export type OcpiLocations_Constraint =
  /** unique or primary key constraint on columns "coreLocationId" */
  | 'OcpiLocations_coreLocationId_key'
  /** unique or primary key constraint on columns "id" */
  | 'OcpiLocations_pkey';

/** input type for incrementing numeric columns in table "OcpiLocations" */
export type OcpiLocations_Inc_Input = {
  coreLocationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OcpiLocations" */
export type OcpiLocations_Insert_Input = {
  Location?: InputMaybe<Locations_Obj_Rel_Insert_Input>;
  OcpiReservations?: InputMaybe<OcpiReservations_Arr_Rel_Insert_Input>;
  coreLocationId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  publish?: InputMaybe<Scalars['Boolean']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type OcpiLocations_Max_Fields = {
  coreLocationId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  timeZone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type OcpiLocations_Min_Fields = {
  coreLocationId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  lastUpdated?: Maybe<Scalars['timestamptz']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  timeZone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "OcpiLocations" */
export type OcpiLocations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcpiLocations>;
};

/** input type for inserting object relation for remote table "OcpiLocations" */
export type OcpiLocations_Obj_Rel_Insert_Input = {
  data: OcpiLocations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<OcpiLocations_On_Conflict>;
};

/** on_conflict condition type for table "OcpiLocations" */
export type OcpiLocations_On_Conflict = {
  constraint: OcpiLocations_Constraint;
  update_columns?: Array<OcpiLocations_Update_Column>;
  where?: InputMaybe<OcpiLocations_Bool_Exp>;
};

/** Ordering options when selecting data from "OcpiLocations". */
export type OcpiLocations_Order_By = {
  Location?: InputMaybe<Locations_Order_By>;
  OcpiReservations_aggregate?: InputMaybe<OcpiReservations_Aggregate_Order_By>;
  coreLocationId?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUpdated?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  publish?: InputMaybe<Order_By>;
  timeZone?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OcpiLocations */
export type OcpiLocations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "OcpiLocations" */
export type OcpiLocations_Select_Column =
  /** column name */
  | 'coreLocationId'
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'lastUpdated'
  /** column name */
  | 'partyId'
  /** column name */
  | 'publish'
  /** column name */
  | 'timeZone'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "OcpiLocations" */
export type OcpiLocations_Set_Input = {
  coreLocationId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  publish?: InputMaybe<Scalars['Boolean']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type OcpiLocations_Stddev_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type OcpiLocations_Stddev_Pop_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type OcpiLocations_Stddev_Samp_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "OcpiLocations" */
export type OcpiLocations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcpiLocations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcpiLocations_Stream_Cursor_Value_Input = {
  coreLocationId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  lastUpdated?: InputMaybe<Scalars['timestamptz']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  publish?: InputMaybe<Scalars['Boolean']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type OcpiLocations_Sum_Fields = {
  coreLocationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "OcpiLocations" */
export type OcpiLocations_Update_Column =
  /** column name */
  | 'coreLocationId'
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'lastUpdated'
  /** column name */
  | 'partyId'
  /** column name */
  | 'publish'
  /** column name */
  | 'timeZone'
  /** column name */
  | 'updatedAt';

export type OcpiLocations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcpiLocations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcpiLocations_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcpiLocations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcpiLocations_Var_Pop_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type OcpiLocations_Var_Samp_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type OcpiLocations_Variance_Fields = {
  coreLocationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "OcpiReservations" */
export type OcpiReservations = {
  /** An object relationship */
  OcpiLocation?: Maybe<OcpiLocations>;
  /** An object relationship */
  Reservation?: Maybe<Reservations>;
  authorizationReference?: Maybe<Scalars['String']['output']>;
  coreReservationId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['enum_OcpiReservations_countryCode']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  evseUid?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  locationId?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  reservationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "OcpiReservations" */
export type OcpiReservations_Aggregate = {
  aggregate?: Maybe<OcpiReservations_Aggregate_Fields>;
  nodes: Array<OcpiReservations>;
};

export type OcpiReservations_Aggregate_Bool_Exp = {
  count?: InputMaybe<OcpiReservations_Aggregate_Bool_Exp_Count>;
};

export type OcpiReservations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<OcpiReservations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "OcpiReservations" */
export type OcpiReservations_Aggregate_Fields = {
  avg?: Maybe<OcpiReservations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcpiReservations_Max_Fields>;
  min?: Maybe<OcpiReservations_Min_Fields>;
  stddev?: Maybe<OcpiReservations_Stddev_Fields>;
  stddev_pop?: Maybe<OcpiReservations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcpiReservations_Stddev_Samp_Fields>;
  sum?: Maybe<OcpiReservations_Sum_Fields>;
  var_pop?: Maybe<OcpiReservations_Var_Pop_Fields>;
  var_samp?: Maybe<OcpiReservations_Var_Samp_Fields>;
  variance?: Maybe<OcpiReservations_Variance_Fields>;
};

/** aggregate fields of "OcpiReservations" */
export type OcpiReservations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "OcpiReservations" */
export type OcpiReservations_Aggregate_Order_By = {
  avg?: InputMaybe<OcpiReservations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<OcpiReservations_Max_Order_By>;
  min?: InputMaybe<OcpiReservations_Min_Order_By>;
  stddev?: InputMaybe<OcpiReservations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<OcpiReservations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<OcpiReservations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<OcpiReservations_Sum_Order_By>;
  var_pop?: InputMaybe<OcpiReservations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<OcpiReservations_Var_Samp_Order_By>;
  variance?: InputMaybe<OcpiReservations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "OcpiReservations" */
export type OcpiReservations_Arr_Rel_Insert_Input = {
  data: Array<OcpiReservations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<OcpiReservations_On_Conflict>;
};

/** aggregate avg on columns */
export type OcpiReservations_Avg_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "OcpiReservations" */
export type OcpiReservations_Avg_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "OcpiReservations". All fields are combined with a logical 'AND'. */
export type OcpiReservations_Bool_Exp = {
  OcpiLocation?: InputMaybe<OcpiLocations_Bool_Exp>;
  Reservation?: InputMaybe<Reservations_Bool_Exp>;
  _and?: InputMaybe<Array<OcpiReservations_Bool_Exp>>;
  _not?: InputMaybe<OcpiReservations_Bool_Exp>;
  _or?: InputMaybe<Array<OcpiReservations_Bool_Exp>>;
  authorizationReference?: InputMaybe<String_Comparison_Exp>;
  coreReservationId?: InputMaybe<Int_Comparison_Exp>;
  countryCode?: InputMaybe<Enum_OcpiReservations_CountryCode_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseUid?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  locationId?: InputMaybe<Int_Comparison_Exp>;
  partyId?: InputMaybe<String_Comparison_Exp>;
  reservationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OcpiReservations" */
export type OcpiReservations_Constraint =
  /** unique or primary key constraint on columns "coreReservationId" */
  | 'OcpiReservations_coreReservationId_key'
  /** unique or primary key constraint on columns "id" */
  | 'OcpiReservations_pkey'
  /** unique or primary key constraint on columns "countryCode", "reservationId", "partyId" */
  | 'OcpiReservations_reservationId_countryCode_partyId_key';

/** input type for incrementing numeric columns in table "OcpiReservations" */
export type OcpiReservations_Inc_Input = {
  coreReservationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OcpiReservations" */
export type OcpiReservations_Insert_Input = {
  OcpiLocation?: InputMaybe<OcpiLocations_Obj_Rel_Insert_Input>;
  Reservation?: InputMaybe<Reservations_Obj_Rel_Insert_Input>;
  authorizationReference?: InputMaybe<Scalars['String']['input']>;
  coreReservationId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<
    Scalars['enum_OcpiReservations_countryCode']['input']
  >;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseUid?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  reservationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type OcpiReservations_Max_Fields = {
  authorizationReference?: Maybe<Scalars['String']['output']>;
  coreReservationId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['enum_OcpiReservations_countryCode']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseUid?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  reservationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "OcpiReservations" */
export type OcpiReservations_Max_Order_By = {
  authorizationReference?: InputMaybe<Order_By>;
  coreReservationId?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseUid?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type OcpiReservations_Min_Fields = {
  authorizationReference?: Maybe<Scalars['String']['output']>;
  coreReservationId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['enum_OcpiReservations_countryCode']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseUid?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  reservationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "OcpiReservations" */
export type OcpiReservations_Min_Order_By = {
  authorizationReference?: InputMaybe<Order_By>;
  coreReservationId?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseUid?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "OcpiReservations" */
export type OcpiReservations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcpiReservations>;
};

/** input type for inserting object relation for remote table "OcpiReservations" */
export type OcpiReservations_Obj_Rel_Insert_Input = {
  data: OcpiReservations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<OcpiReservations_On_Conflict>;
};

/** on_conflict condition type for table "OcpiReservations" */
export type OcpiReservations_On_Conflict = {
  constraint: OcpiReservations_Constraint;
  update_columns?: Array<OcpiReservations_Update_Column>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

/** Ordering options when selecting data from "OcpiReservations". */
export type OcpiReservations_Order_By = {
  OcpiLocation?: InputMaybe<OcpiLocations_Order_By>;
  Reservation?: InputMaybe<Reservations_Order_By>;
  authorizationReference?: InputMaybe<Order_By>;
  coreReservationId?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseUid?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OcpiReservations */
export type OcpiReservations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "OcpiReservations" */
export type OcpiReservations_Select_Column =
  /** column name */
  | 'authorizationReference'
  /** column name */
  | 'coreReservationId'
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseUid'
  /** column name */
  | 'id'
  /** column name */
  | 'locationId'
  /** column name */
  | 'partyId'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "OcpiReservations" */
export type OcpiReservations_Set_Input = {
  authorizationReference?: InputMaybe<Scalars['String']['input']>;
  coreReservationId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<
    Scalars['enum_OcpiReservations_countryCode']['input']
  >;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseUid?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  reservationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type OcpiReservations_Stddev_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "OcpiReservations" */
export type OcpiReservations_Stddev_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type OcpiReservations_Stddev_Pop_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "OcpiReservations" */
export type OcpiReservations_Stddev_Pop_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type OcpiReservations_Stddev_Samp_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "OcpiReservations" */
export type OcpiReservations_Stddev_Samp_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "OcpiReservations" */
export type OcpiReservations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcpiReservations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcpiReservations_Stream_Cursor_Value_Input = {
  authorizationReference?: InputMaybe<Scalars['String']['input']>;
  coreReservationId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<
    Scalars['enum_OcpiReservations_countryCode']['input']
  >;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseUid?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  locationId?: InputMaybe<Scalars['Int']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  reservationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type OcpiReservations_Sum_Fields = {
  coreReservationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  locationId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "OcpiReservations" */
export type OcpiReservations_Sum_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** update columns of table "OcpiReservations" */
export type OcpiReservations_Update_Column =
  /** column name */
  | 'authorizationReference'
  /** column name */
  | 'coreReservationId'
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseUid'
  /** column name */
  | 'id'
  /** column name */
  | 'locationId'
  /** column name */
  | 'partyId'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'updatedAt';

export type OcpiReservations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcpiReservations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcpiReservations_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcpiReservations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcpiReservations_Var_Pop_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "OcpiReservations" */
export type OcpiReservations_Var_Pop_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type OcpiReservations_Var_Samp_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "OcpiReservations" */
export type OcpiReservations_Var_Samp_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type OcpiReservations_Variance_Fields = {
  coreReservationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  locationId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "OcpiReservations" */
export type OcpiReservations_Variance_Order_By = {
  coreReservationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  locationId?: InputMaybe<Order_By>;
};

/** columns and relationships of "OcpiTariffs" */
export type OcpiTariffs = {
  coreTariffId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['bpchar']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  partyId?: Maybe<Scalars['String']['output']>;
  tariffAltText?: Maybe<Scalars['json']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "OcpiTariffs" */
export type OcpiTariffsTariffAltTextArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "OcpiTariffs" */
export type OcpiTariffs_Aggregate = {
  aggregate?: Maybe<OcpiTariffs_Aggregate_Fields>;
  nodes: Array<OcpiTariffs>;
};

/** aggregate fields of "OcpiTariffs" */
export type OcpiTariffs_Aggregate_Fields = {
  avg?: Maybe<OcpiTariffs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcpiTariffs_Max_Fields>;
  min?: Maybe<OcpiTariffs_Min_Fields>;
  stddev?: Maybe<OcpiTariffs_Stddev_Fields>;
  stddev_pop?: Maybe<OcpiTariffs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcpiTariffs_Stddev_Samp_Fields>;
  sum?: Maybe<OcpiTariffs_Sum_Fields>;
  var_pop?: Maybe<OcpiTariffs_Var_Pop_Fields>;
  var_samp?: Maybe<OcpiTariffs_Var_Samp_Fields>;
  variance?: Maybe<OcpiTariffs_Variance_Fields>;
};

/** aggregate fields of "OcpiTariffs" */
export type OcpiTariffs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcpiTariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type OcpiTariffs_Avg_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "OcpiTariffs". All fields are combined with a logical 'AND'. */
export type OcpiTariffs_Bool_Exp = {
  _and?: InputMaybe<Array<OcpiTariffs_Bool_Exp>>;
  _not?: InputMaybe<OcpiTariffs_Bool_Exp>;
  _or?: InputMaybe<Array<OcpiTariffs_Bool_Exp>>;
  coreTariffId?: InputMaybe<Int_Comparison_Exp>;
  countryCode?: InputMaybe<Bpchar_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  partyId?: InputMaybe<String_Comparison_Exp>;
  tariffAltText?: InputMaybe<Json_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OcpiTariffs" */
export type OcpiTariffs_Constraint =
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key1'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key2'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key3'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key4'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key5'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key6'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key7'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key8'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key9'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key10'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key11'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key12'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key13'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key14'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key15'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key16'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key17'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key18'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key19'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key20'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key21'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key22'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key23'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key24'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key25'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key26'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key27'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key28'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key29'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key30'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key31'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key32'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key33'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key34'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key35'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key36'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key37'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key38'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key39'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key40'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key41'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key42'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key43'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key44'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key45'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key46'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key47'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key48'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key49'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key50'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key51'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key52'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key53'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key54'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key55'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key56'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key57'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key58'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key59'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key60'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key61'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key62'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key63'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key64'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key65'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key66'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key67'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key68'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key69'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key70'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key71'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key72'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key73'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key74'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key75'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key76'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key77'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key78'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key79'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key80'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key81'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key82'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key83'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key84'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key85'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key86'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key87'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key88'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key89'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key90'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key91'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key92'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key93'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key94'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key95'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key96'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key97'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key98'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key99'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key100'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key101'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key102'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key103'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key104'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key105'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key106'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key107'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key108'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key109'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key110'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key111'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key112'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key113'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key114'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key115'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key116'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key117'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key118'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key119'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key120'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key121'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key122'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key123'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key124'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key125'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key126'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key127'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key128'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key129'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key130'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key131'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key132'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key133'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key134'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key135'
  /** unique or primary key constraint on columns "coreTariffId" */
  | 'OcpiTariffs_coreTariffId_key136'
  /** unique or primary key constraint on columns "id" */
  | 'OcpiTariffs_pkey';

/** input type for incrementing numeric columns in table "OcpiTariffs" */
export type OcpiTariffs_Inc_Input = {
  coreTariffId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OcpiTariffs" */
export type OcpiTariffs_Insert_Input = {
  coreTariffId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<Scalars['bpchar']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  tariffAltText?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type OcpiTariffs_Max_Fields = {
  coreTariffId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['bpchar']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type OcpiTariffs_Min_Fields = {
  coreTariffId?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['bpchar']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  partyId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "OcpiTariffs" */
export type OcpiTariffs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcpiTariffs>;
};

/** on_conflict condition type for table "OcpiTariffs" */
export type OcpiTariffs_On_Conflict = {
  constraint: OcpiTariffs_Constraint;
  update_columns?: Array<OcpiTariffs_Update_Column>;
  where?: InputMaybe<OcpiTariffs_Bool_Exp>;
};

/** Ordering options when selecting data from "OcpiTariffs". */
export type OcpiTariffs_Order_By = {
  coreTariffId?: InputMaybe<Order_By>;
  countryCode?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  partyId?: InputMaybe<Order_By>;
  tariffAltText?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OcpiTariffs */
export type OcpiTariffs_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "OcpiTariffs" */
export type OcpiTariffs_Select_Column =
  /** column name */
  | 'coreTariffId'
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'partyId'
  /** column name */
  | 'tariffAltText'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "OcpiTariffs" */
export type OcpiTariffs_Set_Input = {
  coreTariffId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<Scalars['bpchar']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  tariffAltText?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type OcpiTariffs_Stddev_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type OcpiTariffs_Stddev_Pop_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type OcpiTariffs_Stddev_Samp_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "OcpiTariffs" */
export type OcpiTariffs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcpiTariffs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcpiTariffs_Stream_Cursor_Value_Input = {
  coreTariffId?: InputMaybe<Scalars['Int']['input']>;
  countryCode?: InputMaybe<Scalars['bpchar']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  partyId?: InputMaybe<Scalars['String']['input']>;
  tariffAltText?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type OcpiTariffs_Sum_Fields = {
  coreTariffId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "OcpiTariffs" */
export type OcpiTariffs_Update_Column =
  /** column name */
  | 'coreTariffId'
  /** column name */
  | 'countryCode'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'partyId'
  /** column name */
  | 'tariffAltText'
  /** column name */
  | 'updatedAt';

export type OcpiTariffs_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcpiTariffs_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcpiTariffs_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcpiTariffs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcpiTariffs_Var_Pop_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type OcpiTariffs_Var_Samp_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type OcpiTariffs_Variance_Fields = {
  coreTariffId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "OcpiTokens" */
export type OcpiTokens = {
  /** An object relationship */
  Authorization?: Maybe<Authorizations>;
  authorization_id?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  default_profile_type?: Maybe<Scalars['String']['output']>;
  energy_contract?: Maybe<Scalars['json']['output']>;
  id: Scalars['Int']['output'];
  issuer?: Maybe<Scalars['String']['output']>;
  last_updated?: Maybe<Scalars['timestamptz']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  visual_number?: Maybe<Scalars['String']['output']>;
  whitelist?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "OcpiTokens" */
export type OcpiTokensEnergy_ContractArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "OcpiTokens" */
export type OcpiTokens_Aggregate = {
  aggregate?: Maybe<OcpiTokens_Aggregate_Fields>;
  nodes: Array<OcpiTokens>;
};

/** aggregate fields of "OcpiTokens" */
export type OcpiTokens_Aggregate_Fields = {
  avg?: Maybe<OcpiTokens_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OcpiTokens_Max_Fields>;
  min?: Maybe<OcpiTokens_Min_Fields>;
  stddev?: Maybe<OcpiTokens_Stddev_Fields>;
  stddev_pop?: Maybe<OcpiTokens_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OcpiTokens_Stddev_Samp_Fields>;
  sum?: Maybe<OcpiTokens_Sum_Fields>;
  var_pop?: Maybe<OcpiTokens_Var_Pop_Fields>;
  var_samp?: Maybe<OcpiTokens_Var_Samp_Fields>;
  variance?: Maybe<OcpiTokens_Variance_Fields>;
};

/** aggregate fields of "OcpiTokens" */
export type OcpiTokens_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OcpiTokens_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type OcpiTokens_Avg_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "OcpiTokens". All fields are combined with a logical 'AND'. */
export type OcpiTokens_Bool_Exp = {
  Authorization?: InputMaybe<Authorizations_Bool_Exp>;
  _and?: InputMaybe<Array<OcpiTokens_Bool_Exp>>;
  _not?: InputMaybe<OcpiTokens_Bool_Exp>;
  _or?: InputMaybe<Array<OcpiTokens_Bool_Exp>>;
  authorization_id?: InputMaybe<Int_Comparison_Exp>;
  country_code?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  default_profile_type?: InputMaybe<String_Comparison_Exp>;
  energy_contract?: InputMaybe<Json_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  issuer?: InputMaybe<String_Comparison_Exp>;
  last_updated?: InputMaybe<Timestamptz_Comparison_Exp>;
  party_id?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  visual_number?: InputMaybe<String_Comparison_Exp>;
  whitelist?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "OcpiTokens" */
export type OcpiTokens_Constraint =
  /** unique or primary key constraint on columns "authorization_id" */
  | 'OcpiTokens_authorization_id_key'
  /** unique or primary key constraint on columns "authorization_id" */
  | 'OcpiTokens_authorization_id_key1'
  /** unique or primary key constraint on columns "id" */
  | 'OcpiTokens_pkey';

/** input type for incrementing numeric columns in table "OcpiTokens" */
export type OcpiTokens_Inc_Input = {
  authorization_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "OcpiTokens" */
export type OcpiTokens_Insert_Input = {
  Authorization?: InputMaybe<Authorizations_Obj_Rel_Insert_Input>;
  authorization_id?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  default_profile_type?: InputMaybe<Scalars['String']['input']>;
  energy_contract?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  issuer?: InputMaybe<Scalars['String']['input']>;
  last_updated?: InputMaybe<Scalars['timestamptz']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  visual_number?: InputMaybe<Scalars['String']['input']>;
  whitelist?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type OcpiTokens_Max_Fields = {
  authorization_id?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  default_profile_type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuer?: Maybe<Scalars['String']['output']>;
  last_updated?: Maybe<Scalars['timestamptz']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  visual_number?: Maybe<Scalars['String']['output']>;
  whitelist?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type OcpiTokens_Min_Fields = {
  authorization_id?: Maybe<Scalars['Int']['output']>;
  country_code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  default_profile_type?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  issuer?: Maybe<Scalars['String']['output']>;
  last_updated?: Maybe<Scalars['timestamptz']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  visual_number?: Maybe<Scalars['String']['output']>;
  whitelist?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "OcpiTokens" */
export type OcpiTokens_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OcpiTokens>;
};

/** input type for inserting object relation for remote table "OcpiTokens" */
export type OcpiTokens_Obj_Rel_Insert_Input = {
  data: OcpiTokens_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<OcpiTokens_On_Conflict>;
};

/** on_conflict condition type for table "OcpiTokens" */
export type OcpiTokens_On_Conflict = {
  constraint: OcpiTokens_Constraint;
  update_columns?: Array<OcpiTokens_Update_Column>;
  where?: InputMaybe<OcpiTokens_Bool_Exp>;
};

/** Ordering options when selecting data from "OcpiTokens". */
export type OcpiTokens_Order_By = {
  Authorization?: InputMaybe<Authorizations_Order_By>;
  authorization_id?: InputMaybe<Order_By>;
  country_code?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  default_profile_type?: InputMaybe<Order_By>;
  energy_contract?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issuer?: InputMaybe<Order_By>;
  last_updated?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  visual_number?: InputMaybe<Order_By>;
  whitelist?: InputMaybe<Order_By>;
};

/** primary key columns input for table: OcpiTokens */
export type OcpiTokens_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "OcpiTokens" */
export type OcpiTokens_Select_Column =
  /** column name */
  | 'authorization_id'
  /** column name */
  | 'country_code'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'default_profile_type'
  /** column name */
  | 'energy_contract'
  /** column name */
  | 'id'
  /** column name */
  | 'issuer'
  /** column name */
  | 'last_updated'
  /** column name */
  | 'party_id'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'visual_number'
  /** column name */
  | 'whitelist';

/** input type for updating data in table "OcpiTokens" */
export type OcpiTokens_Set_Input = {
  authorization_id?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  default_profile_type?: InputMaybe<Scalars['String']['input']>;
  energy_contract?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  issuer?: InputMaybe<Scalars['String']['input']>;
  last_updated?: InputMaybe<Scalars['timestamptz']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  visual_number?: InputMaybe<Scalars['String']['input']>;
  whitelist?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type OcpiTokens_Stddev_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type OcpiTokens_Stddev_Pop_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type OcpiTokens_Stddev_Samp_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "OcpiTokens" */
export type OcpiTokens_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OcpiTokens_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OcpiTokens_Stream_Cursor_Value_Input = {
  authorization_id?: InputMaybe<Scalars['Int']['input']>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  default_profile_type?: InputMaybe<Scalars['String']['input']>;
  energy_contract?: InputMaybe<Scalars['json']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  issuer?: InputMaybe<Scalars['String']['input']>;
  last_updated?: InputMaybe<Scalars['timestamptz']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  visual_number?: InputMaybe<Scalars['String']['input']>;
  whitelist?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type OcpiTokens_Sum_Fields = {
  authorization_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "OcpiTokens" */
export type OcpiTokens_Update_Column =
  /** column name */
  | 'authorization_id'
  /** column name */
  | 'country_code'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'default_profile_type'
  /** column name */
  | 'energy_contract'
  /** column name */
  | 'id'
  /** column name */
  | 'issuer'
  /** column name */
  | 'last_updated'
  /** column name */
  | 'party_id'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'visual_number'
  /** column name */
  | 'whitelist';

export type OcpiTokens_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OcpiTokens_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OcpiTokens_Set_Input>;
  /** filter the rows which have to be updated */
  where: OcpiTokens_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OcpiTokens_Var_Pop_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type OcpiTokens_Var_Samp_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type OcpiTokens_Variance_Fields = {
  authorization_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "Reservations" */
export type Reservations = {
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An object relationship */
  OcpiReservation?: Maybe<OcpiReservations>;
  connectorType?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  expiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  groupIdToken?: Maybe<Scalars['jsonb']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idToken?: Maybe<Scalars['jsonb']['output']>;
  isActive?: Maybe<Scalars['Boolean']['output']>;
  reserveStatus?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  terminatedByTransaction?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Reservations" */
export type ReservationsGroupIdTokenArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Reservations" */
export type ReservationsIdTokenArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "Reservations" */
export type Reservations_Aggregate = {
  aggregate?: Maybe<Reservations_Aggregate_Fields>;
  nodes: Array<Reservations>;
};

export type Reservations_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Reservations_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Reservations_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Reservations_Aggregate_Bool_Exp_Count>;
};

export type Reservations_Aggregate_Bool_Exp_Bool_And = {
  arguments: Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reservations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Reservations_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reservations_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Reservations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Reservations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reservations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Reservations" */
export type Reservations_Aggregate_Fields = {
  avg?: Maybe<Reservations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Reservations_Max_Fields>;
  min?: Maybe<Reservations_Min_Fields>;
  stddev?: Maybe<Reservations_Stddev_Fields>;
  stddev_pop?: Maybe<Reservations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Reservations_Stddev_Samp_Fields>;
  sum?: Maybe<Reservations_Sum_Fields>;
  var_pop?: Maybe<Reservations_Var_Pop_Fields>;
  var_samp?: Maybe<Reservations_Var_Samp_Fields>;
  variance?: Maybe<Reservations_Variance_Fields>;
};

/** aggregate fields of "Reservations" */
export type Reservations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Reservations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Reservations" */
export type Reservations_Aggregate_Order_By = {
  avg?: InputMaybe<Reservations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Reservations_Max_Order_By>;
  min?: InputMaybe<Reservations_Min_Order_By>;
  stddev?: InputMaybe<Reservations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Reservations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Reservations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Reservations_Sum_Order_By>;
  var_pop?: InputMaybe<Reservations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Reservations_Var_Samp_Order_By>;
  variance?: InputMaybe<Reservations_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Reservations_Append_Input = {
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "Reservations" */
export type Reservations_Arr_Rel_Insert_Input = {
  data: Array<Reservations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** aggregate avg on columns */
export type Reservations_Avg_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Reservations" */
export type Reservations_Avg_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Reservations". All fields are combined with a logical 'AND'. */
export type Reservations_Bool_Exp = {
  Evse?: InputMaybe<Evses_Bool_Exp>;
  OcpiReservation?: InputMaybe<OcpiReservations_Bool_Exp>;
  _and?: InputMaybe<Array<Reservations_Bool_Exp>>;
  _not?: InputMaybe<Reservations_Bool_Exp>;
  _or?: InputMaybe<Array<Reservations_Bool_Exp>>;
  connectorType?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  expiryDateTime?: InputMaybe<Timestamptz_Comparison_Exp>;
  groupIdToken?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idToken?: InputMaybe<Jsonb_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  reserveStatus?: InputMaybe<String_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  terminatedByTransaction?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Reservations" */
export type Reservations_Constraint =
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'Reservations_id_stationId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'Reservations_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Reservations_Delete_At_Path_Input = {
  groupIdToken?: InputMaybe<Array<Scalars['String']['input']>>;
  idToken?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Reservations_Delete_Elem_Input = {
  groupIdToken?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Reservations_Delete_Key_Input = {
  groupIdToken?: InputMaybe<Scalars['String']['input']>;
  idToken?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "Reservations" */
export type Reservations_Inc_Input = {
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Reservations" */
export type Reservations_Insert_Input = {
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  OcpiReservation?: InputMaybe<OcpiReservations_Obj_Rel_Insert_Input>;
  connectorType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  expiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  reserveStatus?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  terminatedByTransaction?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Reservations_Max_Fields = {
  connectorType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  expiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reserveStatus?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  terminatedByTransaction?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Reservations" */
export type Reservations_Max_Order_By = {
  connectorType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  expiryDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reserveStatus?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  terminatedByTransaction?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Reservations_Min_Fields = {
  connectorType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  expiryDateTime?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  reserveStatus?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  terminatedByTransaction?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Reservations" */
export type Reservations_Min_Order_By = {
  connectorType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  expiryDateTime?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  reserveStatus?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  terminatedByTransaction?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Reservations" */
export type Reservations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Reservations>;
};

/** input type for inserting object relation for remote table "Reservations" */
export type Reservations_Obj_Rel_Insert_Input = {
  data: Reservations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** on_conflict condition type for table "Reservations" */
export type Reservations_On_Conflict = {
  constraint: Reservations_Constraint;
  update_columns?: Array<Reservations_Update_Column>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

/** Ordering options when selecting data from "Reservations". */
export type Reservations_Order_By = {
  Evse?: InputMaybe<Evses_Order_By>;
  OcpiReservation?: InputMaybe<OcpiReservations_Order_By>;
  connectorType?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  expiryDateTime?: InputMaybe<Order_By>;
  groupIdToken?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idToken?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  reserveStatus?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  terminatedByTransaction?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Reservations */
export type Reservations_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Reservations_Prepend_Input = {
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "Reservations" */
export type Reservations_Select_Column =
  /** column name */
  | 'connectorType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'expiryDateTime'
  /** column name */
  | 'groupIdToken'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'isActive'
  /** column name */
  | 'reserveStatus'
  /** column name */
  | 'stationId'
  /** column name */
  | 'terminatedByTransaction'
  /** column name */
  | 'updatedAt';

/** select "Reservations_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Reservations" */
export type Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isActive';

/** select "Reservations_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Reservations" */
export type Reservations_Select_Column_Reservations_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isActive';

/** input type for updating data in table "Reservations" */
export type Reservations_Set_Input = {
  connectorType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  expiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  reserveStatus?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  terminatedByTransaction?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Reservations_Stddev_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Reservations" */
export type Reservations_Stddev_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Reservations_Stddev_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Reservations" */
export type Reservations_Stddev_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Reservations_Stddev_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Reservations" */
export type Reservations_Stddev_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Reservations" */
export type Reservations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reservations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reservations_Stream_Cursor_Value_Input = {
  connectorType?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  expiryDateTime?: InputMaybe<Scalars['timestamptz']['input']>;
  groupIdToken?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idToken?: InputMaybe<Scalars['jsonb']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  reserveStatus?: InputMaybe<Scalars['String']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  terminatedByTransaction?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Reservations_Sum_Fields = {
  databaseId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "Reservations" */
export type Reservations_Sum_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "Reservations" */
export type Reservations_Update_Column =
  /** column name */
  | 'connectorType'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'evseId'
  /** column name */
  | 'expiryDateTime'
  /** column name */
  | 'groupIdToken'
  /** column name */
  | 'id'
  /** column name */
  | 'idToken'
  /** column name */
  | 'isActive'
  /** column name */
  | 'reserveStatus'
  /** column name */
  | 'stationId'
  /** column name */
  | 'terminatedByTransaction'
  /** column name */
  | 'updatedAt';

export type Reservations_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Reservations_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Reservations_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Reservations_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Reservations_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Reservations_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Reservations_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Reservations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Reservations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Reservations_Var_Pop_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Reservations" */
export type Reservations_Var_Pop_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Reservations_Var_Samp_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Reservations" */
export type Reservations_Var_Samp_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Reservations_Variance_Fields = {
  databaseId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Reservations" */
export type Reservations_Variance_Order_By = {
  databaseId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  params?: Maybe<Scalars['json']['output']>;
  responseUrl?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIdsParamsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Aggregate = {
  aggregate?: Maybe<ResponseUrlCorrelationIds_Aggregate_Fields>;
  nodes: Array<ResponseUrlCorrelationIds>;
};

/** aggregate fields of "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Aggregate_Fields = {
  avg?: Maybe<ResponseUrlCorrelationIds_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ResponseUrlCorrelationIds_Max_Fields>;
  min?: Maybe<ResponseUrlCorrelationIds_Min_Fields>;
  stddev?: Maybe<ResponseUrlCorrelationIds_Stddev_Fields>;
  stddev_pop?: Maybe<ResponseUrlCorrelationIds_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ResponseUrlCorrelationIds_Stddev_Samp_Fields>;
  sum?: Maybe<ResponseUrlCorrelationIds_Sum_Fields>;
  var_pop?: Maybe<ResponseUrlCorrelationIds_Var_Pop_Fields>;
  var_samp?: Maybe<ResponseUrlCorrelationIds_Var_Samp_Fields>;
  variance?: Maybe<ResponseUrlCorrelationIds_Variance_Fields>;
};

/** aggregate fields of "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ResponseUrlCorrelationIds_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ResponseUrlCorrelationIds_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "ResponseUrlCorrelationIds". All fields are combined with a logical 'AND'. */
export type ResponseUrlCorrelationIds_Bool_Exp = {
  _and?: InputMaybe<Array<ResponseUrlCorrelationIds_Bool_Exp>>;
  _not?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
  _or?: InputMaybe<Array<ResponseUrlCorrelationIds_Bool_Exp>>;
  correlationId?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  params?: InputMaybe<Json_Comparison_Exp>;
  responseUrl?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Constraint =
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key1'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key2'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key3'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key4'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key5'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key6'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key7'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key8'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key9'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key10'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key11'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key12'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key13'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key14'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key15'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key16'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key17'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key18'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key19'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key20'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key21'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key22'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key23'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key24'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key25'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key26'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key27'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key28'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key29'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key30'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key31'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key32'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key33'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key34'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key35'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key36'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key37'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key38'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key39'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key40'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key41'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key42'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key43'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key44'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key45'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key46'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key47'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key48'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key49'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key50'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key51'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key52'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key53'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key54'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key55'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key56'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key57'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key58'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key59'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key60'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key61'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key62'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key63'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key64'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key65'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key66'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key67'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key68'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key69'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key70'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key71'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key72'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key73'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key74'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key75'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key76'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key77'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key78'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key79'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key80'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key81'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key82'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key83'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key84'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key85'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key86'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key87'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key88'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key89'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key90'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key91'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key92'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key93'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key94'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key95'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key96'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key97'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key98'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key99'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key100'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key101'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key102'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key103'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key104'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key105'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key106'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key107'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key108'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key109'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key110'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key111'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key112'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key113'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key114'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key115'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key116'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key117'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key118'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key119'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key120'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key121'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key122'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key123'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key124'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key125'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key126'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key127'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key128'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key129'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key130'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key131'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key132'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key133'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key134'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key135'
  /** unique or primary key constraint on columns "correlationId" */
  | 'ResponseUrlCorrelationIds_correlationId_key136'
  /** unique or primary key constraint on columns "id" */
  | 'ResponseUrlCorrelationIds_pkey';

/** input type for incrementing numeric columns in table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Insert_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  params?: InputMaybe<Scalars['json']['input']>;
  responseUrl?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ResponseUrlCorrelationIds_Max_Fields = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  responseUrl?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type ResponseUrlCorrelationIds_Min_Fields = {
  correlationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  responseUrl?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ResponseUrlCorrelationIds>;
};

/** on_conflict condition type for table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_On_Conflict = {
  constraint: ResponseUrlCorrelationIds_Constraint;
  update_columns?: Array<ResponseUrlCorrelationIds_Update_Column>;
  where?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
};

/** Ordering options when selecting data from "ResponseUrlCorrelationIds". */
export type ResponseUrlCorrelationIds_Order_By = {
  correlationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  params?: InputMaybe<Order_By>;
  responseUrl?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ResponseUrlCorrelationIds */
export type ResponseUrlCorrelationIds_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Select_Column =
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'params'
  /** column name */
  | 'responseUrl'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Set_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  params?: InputMaybe<Scalars['json']['input']>;
  responseUrl?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ResponseUrlCorrelationIds_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ResponseUrlCorrelationIds_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ResponseUrlCorrelationIds_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ResponseUrlCorrelationIds_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ResponseUrlCorrelationIds_Stream_Cursor_Value_Input = {
  correlationId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  params?: InputMaybe<Scalars['json']['input']>;
  responseUrl?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ResponseUrlCorrelationIds_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "ResponseUrlCorrelationIds" */
export type ResponseUrlCorrelationIds_Update_Column =
  /** column name */
  | 'correlationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'params'
  /** column name */
  | 'responseUrl'
  /** column name */
  | 'updatedAt';

export type ResponseUrlCorrelationIds_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ResponseUrlCorrelationIds_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ResponseUrlCorrelationIds_Set_Input>;
  /** filter the rows which have to be updated */
  where: ResponseUrlCorrelationIds_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ResponseUrlCorrelationIds_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ResponseUrlCorrelationIds_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ResponseUrlCorrelationIds_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "SalesTariffs" */
export type SalesTariffs = {
  /** An object relationship */
  ChargingSchedule?: Maybe<ChargingSchedules>;
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  salesTariffDescription?: Maybe<Scalars['String']['output']>;
  salesTariffEntry?: Maybe<Scalars['jsonb']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "SalesTariffs" */
export type SalesTariffsSalesTariffEntryArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "SalesTariffs" */
export type SalesTariffs_Aggregate = {
  aggregate?: Maybe<SalesTariffs_Aggregate_Fields>;
  nodes: Array<SalesTariffs>;
};

export type SalesTariffs_Aggregate_Bool_Exp = {
  count?: InputMaybe<SalesTariffs_Aggregate_Bool_Exp_Count>;
};

export type SalesTariffs_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<SalesTariffs_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "SalesTariffs" */
export type SalesTariffs_Aggregate_Fields = {
  avg?: Maybe<SalesTariffs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SalesTariffs_Max_Fields>;
  min?: Maybe<SalesTariffs_Min_Fields>;
  stddev?: Maybe<SalesTariffs_Stddev_Fields>;
  stddev_pop?: Maybe<SalesTariffs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SalesTariffs_Stddev_Samp_Fields>;
  sum?: Maybe<SalesTariffs_Sum_Fields>;
  var_pop?: Maybe<SalesTariffs_Var_Pop_Fields>;
  var_samp?: Maybe<SalesTariffs_Var_Samp_Fields>;
  variance?: Maybe<SalesTariffs_Variance_Fields>;
};

/** aggregate fields of "SalesTariffs" */
export type SalesTariffs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "SalesTariffs" */
export type SalesTariffs_Aggregate_Order_By = {
  avg?: InputMaybe<SalesTariffs_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<SalesTariffs_Max_Order_By>;
  min?: InputMaybe<SalesTariffs_Min_Order_By>;
  stddev?: InputMaybe<SalesTariffs_Stddev_Order_By>;
  stddev_pop?: InputMaybe<SalesTariffs_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<SalesTariffs_Stddev_Samp_Order_By>;
  sum?: InputMaybe<SalesTariffs_Sum_Order_By>;
  var_pop?: InputMaybe<SalesTariffs_Var_Pop_Order_By>;
  var_samp?: InputMaybe<SalesTariffs_Var_Samp_Order_By>;
  variance?: InputMaybe<SalesTariffs_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SalesTariffs_Append_Input = {
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "SalesTariffs" */
export type SalesTariffs_Arr_Rel_Insert_Input = {
  data: Array<SalesTariffs_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<SalesTariffs_On_Conflict>;
};

/** aggregate avg on columns */
export type SalesTariffs_Avg_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "SalesTariffs" */
export type SalesTariffs_Avg_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "SalesTariffs". All fields are combined with a logical 'AND'. */
export type SalesTariffs_Bool_Exp = {
  ChargingSchedule?: InputMaybe<ChargingSchedules_Bool_Exp>;
  _and?: InputMaybe<Array<SalesTariffs_Bool_Exp>>;
  _not?: InputMaybe<SalesTariffs_Bool_Exp>;
  _or?: InputMaybe<Array<SalesTariffs_Bool_Exp>>;
  chargingScheduleDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  numEPriceLevels?: InputMaybe<Int_Comparison_Exp>;
  salesTariffDescription?: InputMaybe<String_Comparison_Exp>;
  salesTariffEntry?: InputMaybe<Jsonb_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SalesTariffs" */
export type SalesTariffs_Constraint =
  /** unique or primary key constraint on columns "id", "chargingScheduleDatabaseId" */
  | 'SalesTariffs_id_chargingScheduleDatabaseId_key'
  /** unique or primary key constraint on columns "databaseId" */
  | 'SalesTariffs_pkey';

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SalesTariffs_Delete_At_Path_Input = {
  salesTariffEntry?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SalesTariffs_Delete_Elem_Input = {
  salesTariffEntry?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SalesTariffs_Delete_Key_Input = {
  salesTariffEntry?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "SalesTariffs" */
export type SalesTariffs_Inc_Input = {
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SalesTariffs" */
export type SalesTariffs_Insert_Input = {
  ChargingSchedule?: InputMaybe<ChargingSchedules_Obj_Rel_Insert_Input>;
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  salesTariffDescription?: InputMaybe<Scalars['String']['input']>;
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SalesTariffs_Max_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  salesTariffDescription?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "SalesTariffs" */
export type SalesTariffs_Max_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  salesTariffDescription?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type SalesTariffs_Min_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
  salesTariffDescription?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "SalesTariffs" */
export type SalesTariffs_Min_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  salesTariffDescription?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "SalesTariffs" */
export type SalesTariffs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SalesTariffs>;
};

/** on_conflict condition type for table "SalesTariffs" */
export type SalesTariffs_On_Conflict = {
  constraint: SalesTariffs_Constraint;
  update_columns?: Array<SalesTariffs_Update_Column>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

/** Ordering options when selecting data from "SalesTariffs". */
export type SalesTariffs_Order_By = {
  ChargingSchedule?: InputMaybe<ChargingSchedules_Order_By>;
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
  salesTariffDescription?: InputMaybe<Order_By>;
  salesTariffEntry?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SalesTariffs */
export type SalesTariffs_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SalesTariffs_Prepend_Input = {
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "SalesTariffs" */
export type SalesTariffs_Select_Column =
  /** column name */
  | 'chargingScheduleDatabaseId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'numEPriceLevels'
  /** column name */
  | 'salesTariffDescription'
  /** column name */
  | 'salesTariffEntry'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "SalesTariffs" */
export type SalesTariffs_Set_Input = {
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  salesTariffDescription?: InputMaybe<Scalars['String']['input']>;
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SalesTariffs_Stddev_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "SalesTariffs" */
export type SalesTariffs_Stddev_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SalesTariffs_Stddev_Pop_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "SalesTariffs" */
export type SalesTariffs_Stddev_Pop_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SalesTariffs_Stddev_Samp_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "SalesTariffs" */
export type SalesTariffs_Stddev_Samp_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "SalesTariffs" */
export type SalesTariffs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SalesTariffs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SalesTariffs_Stream_Cursor_Value_Input = {
  chargingScheduleDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  numEPriceLevels?: InputMaybe<Scalars['Int']['input']>;
  salesTariffDescription?: InputMaybe<Scalars['String']['input']>;
  salesTariffEntry?: InputMaybe<Scalars['jsonb']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SalesTariffs_Sum_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  numEPriceLevels?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "SalesTariffs" */
export type SalesTariffs_Sum_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** update columns of table "SalesTariffs" */
export type SalesTariffs_Update_Column =
  /** column name */
  | 'chargingScheduleDatabaseId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'numEPriceLevels'
  /** column name */
  | 'salesTariffDescription'
  /** column name */
  | 'salesTariffEntry'
  /** column name */
  | 'updatedAt';

export type SalesTariffs_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<SalesTariffs_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<SalesTariffs_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<SalesTariffs_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<SalesTariffs_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SalesTariffs_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<SalesTariffs_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SalesTariffs_Set_Input>;
  /** filter the rows which have to be updated */
  where: SalesTariffs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SalesTariffs_Var_Pop_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "SalesTariffs" */
export type SalesTariffs_Var_Pop_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SalesTariffs_Var_Samp_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "SalesTariffs" */
export type SalesTariffs_Var_Samp_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type SalesTariffs_Variance_Fields = {
  chargingScheduleDatabaseId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  numEPriceLevels?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "SalesTariffs" */
export type SalesTariffs_Variance_Order_By = {
  chargingScheduleDatabaseId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  numEPriceLevels?: InputMaybe<Order_By>;
};

/** columns and relationships of "SecurityEvents" */
export type SecurityEvents = {
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "SecurityEvents" */
export type SecurityEvents_Aggregate = {
  aggregate?: Maybe<SecurityEvents_Aggregate_Fields>;
  nodes: Array<SecurityEvents>;
};

/** aggregate fields of "SecurityEvents" */
export type SecurityEvents_Aggregate_Fields = {
  avg?: Maybe<SecurityEvents_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SecurityEvents_Max_Fields>;
  min?: Maybe<SecurityEvents_Min_Fields>;
  stddev?: Maybe<SecurityEvents_Stddev_Fields>;
  stddev_pop?: Maybe<SecurityEvents_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SecurityEvents_Stddev_Samp_Fields>;
  sum?: Maybe<SecurityEvents_Sum_Fields>;
  var_pop?: Maybe<SecurityEvents_Var_Pop_Fields>;
  var_samp?: Maybe<SecurityEvents_Var_Samp_Fields>;
  variance?: Maybe<SecurityEvents_Variance_Fields>;
};

/** aggregate fields of "SecurityEvents" */
export type SecurityEvents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type SecurityEvents_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "SecurityEvents". All fields are combined with a logical 'AND'. */
export type SecurityEvents_Bool_Exp = {
  _and?: InputMaybe<Array<SecurityEvents_Bool_Exp>>;
  _not?: InputMaybe<SecurityEvents_Bool_Exp>;
  _or?: InputMaybe<Array<SecurityEvents_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  techInfo?: InputMaybe<String_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SecurityEvents" */
export type SecurityEvents_Constraint =
  /** unique or primary key constraint on columns "id" */
  'SecurityEvents_pkey';

/** input type for incrementing numeric columns in table "SecurityEvents" */
export type SecurityEvents_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SecurityEvents" */
export type SecurityEvents_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SecurityEvents_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type SecurityEvents_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  techInfo?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "SecurityEvents" */
export type SecurityEvents_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SecurityEvents>;
};

/** on_conflict condition type for table "SecurityEvents" */
export type SecurityEvents_On_Conflict = {
  constraint: SecurityEvents_Constraint;
  update_columns?: Array<SecurityEvents_Update_Column>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

/** Ordering options when selecting data from "SecurityEvents". */
export type SecurityEvents_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  techInfo?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SecurityEvents */
export type SecurityEvents_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "SecurityEvents" */
export type SecurityEvents_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'techInfo'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "SecurityEvents" */
export type SecurityEvents_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SecurityEvents_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type SecurityEvents_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type SecurityEvents_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "SecurityEvents" */
export type SecurityEvents_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SecurityEvents_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SecurityEvents_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  techInfo?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SecurityEvents_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "SecurityEvents" */
export type SecurityEvents_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'techInfo'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt';

export type SecurityEvents_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SecurityEvents_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SecurityEvents_Set_Input>;
  /** filter the rows which have to be updated */
  where: SecurityEvents_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SecurityEvents_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type SecurityEvents_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type SecurityEvents_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "ServerCredentialsRoles" */
export type ServerCredentialsRoles = {
  /** An array relationship */
  BusinessDetails: Array<BusinessDetails>;
  /** An aggregate relationship */
  BusinessDetails_aggregate: BusinessDetails_Aggregate;
  /** An object relationship */
  CpoTenant?: Maybe<CpoTenants>;
  country_code?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  party_id?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['enum_ServerCredentialsRoles_role']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "ServerCredentialsRoles" */
export type ServerCredentialsRolesBusinessDetailsArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

/** columns and relationships of "ServerCredentialsRoles" */
export type ServerCredentialsRolesBusinessDetails_AggregateArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

/** aggregated selection of "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Aggregate = {
  aggregate?: Maybe<ServerCredentialsRoles_Aggregate_Fields>;
  nodes: Array<ServerCredentialsRoles>;
};

export type ServerCredentialsRoles_Aggregate_Bool_Exp = {
  count?: InputMaybe<ServerCredentialsRoles_Aggregate_Bool_Exp_Count>;
};

export type ServerCredentialsRoles_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Aggregate_Fields = {
  avg?: Maybe<ServerCredentialsRoles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerCredentialsRoles_Max_Fields>;
  min?: Maybe<ServerCredentialsRoles_Min_Fields>;
  stddev?: Maybe<ServerCredentialsRoles_Stddev_Fields>;
  stddev_pop?: Maybe<ServerCredentialsRoles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerCredentialsRoles_Stddev_Samp_Fields>;
  sum?: Maybe<ServerCredentialsRoles_Sum_Fields>;
  var_pop?: Maybe<ServerCredentialsRoles_Var_Pop_Fields>;
  var_samp?: Maybe<ServerCredentialsRoles_Var_Samp_Fields>;
  variance?: Maybe<ServerCredentialsRoles_Variance_Fields>;
};

/** aggregate fields of "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Aggregate_Order_By = {
  avg?: InputMaybe<ServerCredentialsRoles_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ServerCredentialsRoles_Max_Order_By>;
  min?: InputMaybe<ServerCredentialsRoles_Min_Order_By>;
  stddev?: InputMaybe<ServerCredentialsRoles_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ServerCredentialsRoles_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ServerCredentialsRoles_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ServerCredentialsRoles_Sum_Order_By>;
  var_pop?: InputMaybe<ServerCredentialsRoles_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ServerCredentialsRoles_Var_Samp_Order_By>;
  variance?: InputMaybe<ServerCredentialsRoles_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Arr_Rel_Insert_Input = {
  data: Array<ServerCredentialsRoles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerCredentialsRoles_On_Conflict>;
};

/** aggregate avg on columns */
export type ServerCredentialsRoles_Avg_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Avg_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ServerCredentialsRoles". All fields are combined with a logical 'AND'. */
export type ServerCredentialsRoles_Bool_Exp = {
  BusinessDetails?: InputMaybe<BusinessDetails_Bool_Exp>;
  BusinessDetails_aggregate?: InputMaybe<BusinessDetails_Aggregate_Bool_Exp>;
  CpoTenant?: InputMaybe<CpoTenants_Bool_Exp>;
  _and?: InputMaybe<Array<ServerCredentialsRoles_Bool_Exp>>;
  _not?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
  _or?: InputMaybe<Array<ServerCredentialsRoles_Bool_Exp>>;
  country_code?: InputMaybe<String_Comparison_Exp>;
  cpoTenantId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  party_id?: InputMaybe<String_Comparison_Exp>;
  role?: InputMaybe<Enum_ServerCredentialsRoles_Role_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'ServerCredentialsRoles_pkey'
  /** unique or primary key constraint on columns "country_code", "party_id" */
  | 'server_credentials_roles_country_code_party_id';

/** input type for incrementing numeric columns in table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Inc_Input = {
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Insert_Input = {
  BusinessDetails?: InputMaybe<BusinessDetails_Arr_Rel_Insert_Input>;
  CpoTenant?: InputMaybe<CpoTenants_Obj_Rel_Insert_Input>;
  country_code?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type ServerCredentialsRoles_Max_Fields = {
  country_code?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['enum_ServerCredentialsRoles_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Max_Order_By = {
  country_code?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ServerCredentialsRoles_Min_Fields = {
  country_code?: Maybe<Scalars['String']['output']>;
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  party_id?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['enum_ServerCredentialsRoles_role']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Min_Order_By = {
  country_code?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerCredentialsRoles>;
};

/** input type for inserting object relation for remote table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Obj_Rel_Insert_Input = {
  data: ServerCredentialsRoles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerCredentialsRoles_On_Conflict>;
};

/** on_conflict condition type for table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_On_Conflict = {
  constraint: ServerCredentialsRoles_Constraint;
  update_columns?: Array<ServerCredentialsRoles_Update_Column>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

/** Ordering options when selecting data from "ServerCredentialsRoles". */
export type ServerCredentialsRoles_Order_By = {
  BusinessDetails_aggregate?: InputMaybe<BusinessDetails_Aggregate_Order_By>;
  CpoTenant?: InputMaybe<CpoTenants_Order_By>;
  country_code?: InputMaybe<Order_By>;
  cpoTenantId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  party_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ServerCredentialsRoles */
export type ServerCredentialsRoles_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Select_Column =
  /** column name */
  | 'country_code'
  /** column name */
  | 'cpoTenantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'party_id'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Set_Input = {
  country_code?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type ServerCredentialsRoles_Stddev_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Stddev_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ServerCredentialsRoles_Stddev_Pop_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Stddev_Pop_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ServerCredentialsRoles_Stddev_Samp_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Stddev_Samp_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerCredentialsRoles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerCredentialsRoles_Stream_Cursor_Value_Input = {
  country_code?: InputMaybe<Scalars['String']['input']>;
  cpoTenantId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  party_id?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type ServerCredentialsRoles_Sum_Fields = {
  cpoTenantId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Sum_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Update_Column =
  /** column name */
  | 'country_code'
  /** column name */
  | 'cpoTenantId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'party_id'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt';

export type ServerCredentialsRoles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerCredentialsRoles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerCredentialsRoles_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerCredentialsRoles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerCredentialsRoles_Var_Pop_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Var_Pop_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ServerCredentialsRoles_Var_Samp_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Var_Samp_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ServerCredentialsRoles_Variance_Fields = {
  cpoTenantId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ServerCredentialsRoles" */
export type ServerCredentialsRoles_Variance_Order_By = {
  cpoTenantId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "ServerVersions" */
export type ServerVersions = {
  /** An object relationship */
  ClientInformation?: Maybe<ClientInformations>;
  /** An array relationship */
  Endpoints: Array<Endpoints>;
  /** An aggregate relationship */
  Endpoints_aggregate: Endpoints_Aggregate;
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_ServerVersions_version']['output']>;
};

/** columns and relationships of "ServerVersions" */
export type ServerVersionsEndpointsArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

/** columns and relationships of "ServerVersions" */
export type ServerVersionsEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

/** aggregated selection of "ServerVersions" */
export type ServerVersions_Aggregate = {
  aggregate?: Maybe<ServerVersions_Aggregate_Fields>;
  nodes: Array<ServerVersions>;
};

export type ServerVersions_Aggregate_Bool_Exp = {
  count?: InputMaybe<ServerVersions_Aggregate_Bool_Exp_Count>;
};

export type ServerVersions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ServerVersions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerVersions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "ServerVersions" */
export type ServerVersions_Aggregate_Fields = {
  avg?: Maybe<ServerVersions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerVersions_Max_Fields>;
  min?: Maybe<ServerVersions_Min_Fields>;
  stddev?: Maybe<ServerVersions_Stddev_Fields>;
  stddev_pop?: Maybe<ServerVersions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerVersions_Stddev_Samp_Fields>;
  sum?: Maybe<ServerVersions_Sum_Fields>;
  var_pop?: Maybe<ServerVersions_Var_Pop_Fields>;
  var_samp?: Maybe<ServerVersions_Var_Samp_Fields>;
  variance?: Maybe<ServerVersions_Variance_Fields>;
};

/** aggregate fields of "ServerVersions" */
export type ServerVersions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerVersions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "ServerVersions" */
export type ServerVersions_Aggregate_Order_By = {
  avg?: InputMaybe<ServerVersions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ServerVersions_Max_Order_By>;
  min?: InputMaybe<ServerVersions_Min_Order_By>;
  stddev?: InputMaybe<ServerVersions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ServerVersions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ServerVersions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ServerVersions_Sum_Order_By>;
  var_pop?: InputMaybe<ServerVersions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ServerVersions_Var_Samp_Order_By>;
  variance?: InputMaybe<ServerVersions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ServerVersions" */
export type ServerVersions_Arr_Rel_Insert_Input = {
  data: Array<ServerVersions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerVersions_On_Conflict>;
};

/** aggregate avg on columns */
export type ServerVersions_Avg_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "ServerVersions" */
export type ServerVersions_Avg_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ServerVersions". All fields are combined with a logical 'AND'. */
export type ServerVersions_Bool_Exp = {
  ClientInformation?: InputMaybe<ClientInformations_Bool_Exp>;
  Endpoints?: InputMaybe<Endpoints_Bool_Exp>;
  Endpoints_aggregate?: InputMaybe<Endpoints_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<ServerVersions_Bool_Exp>>;
  _not?: InputMaybe<ServerVersions_Bool_Exp>;
  _or?: InputMaybe<Array<ServerVersions_Bool_Exp>>;
  clientInformationId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  version?: InputMaybe<Enum_ServerVersions_Version_Comparison_Exp>;
};

/** unique or primary key constraints on table "ServerVersions" */
export type ServerVersions_Constraint =
  /** unique or primary key constraint on columns "id" */
  'ServerVersions_pkey';

/** input type for incrementing numeric columns in table "ServerVersions" */
export type ServerVersions_Inc_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "ServerVersions" */
export type ServerVersions_Insert_Input = {
  ClientInformation?: InputMaybe<ClientInformations_Obj_Rel_Insert_Input>;
  Endpoints?: InputMaybe<Endpoints_Arr_Rel_Insert_Input>;
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
};

/** aggregate max on columns */
export type ServerVersions_Max_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_ServerVersions_version']['output']>;
};

/** order by max() on columns of table "ServerVersions" */
export type ServerVersions_Max_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ServerVersions_Min_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_ServerVersions_version']['output']>;
};

/** order by min() on columns of table "ServerVersions" */
export type ServerVersions_Min_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "ServerVersions" */
export type ServerVersions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerVersions>;
};

/** input type for inserting object relation for remote table "ServerVersions" */
export type ServerVersions_Obj_Rel_Insert_Input = {
  data: ServerVersions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerVersions_On_Conflict>;
};

/** on_conflict condition type for table "ServerVersions" */
export type ServerVersions_On_Conflict = {
  constraint: ServerVersions_Constraint;
  update_columns?: Array<ServerVersions_Update_Column>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

/** Ordering options when selecting data from "ServerVersions". */
export type ServerVersions_Order_By = {
  ClientInformation?: InputMaybe<ClientInformations_Order_By>;
  Endpoints_aggregate?: InputMaybe<Endpoints_Aggregate_Order_By>;
  clientInformationId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** primary key columns input for table: ServerVersions */
export type ServerVersions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "ServerVersions" */
export type ServerVersions_Select_Column =
  /** column name */
  | 'clientInformationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'version';

/** input type for updating data in table "ServerVersions" */
export type ServerVersions_Set_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
};

/** aggregate stddev on columns */
export type ServerVersions_Stddev_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "ServerVersions" */
export type ServerVersions_Stddev_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ServerVersions_Stddev_Pop_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "ServerVersions" */
export type ServerVersions_Stddev_Pop_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ServerVersions_Stddev_Samp_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "ServerVersions" */
export type ServerVersions_Stddev_Samp_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "ServerVersions" */
export type ServerVersions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerVersions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerVersions_Stream_Cursor_Value_Input = {
  clientInformationId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
};

/** aggregate sum on columns */
export type ServerVersions_Sum_Fields = {
  clientInformationId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "ServerVersions" */
export type ServerVersions_Sum_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "ServerVersions" */
export type ServerVersions_Update_Column =
  /** column name */
  | 'clientInformationId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'version';

export type ServerVersions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerVersions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerVersions_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerVersions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerVersions_Var_Pop_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "ServerVersions" */
export type ServerVersions_Var_Pop_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ServerVersions_Var_Samp_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "ServerVersions" */
export type ServerVersions_Var_Samp_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ServerVersions_Variance_Fields = {
  clientInformationId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "ServerVersions" */
export type ServerVersions_Variance_Order_By = {
  clientInformationId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "SessionChargingProfiles" */
export type SessionChargingProfiles = {
  chargingProfileId?: Maybe<Scalars['Int']['output']>;
  chargingScheduleId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  sessionId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "SessionChargingProfiles" */
export type SessionChargingProfiles_Aggregate = {
  aggregate?: Maybe<SessionChargingProfiles_Aggregate_Fields>;
  nodes: Array<SessionChargingProfiles>;
};

/** aggregate fields of "SessionChargingProfiles" */
export type SessionChargingProfiles_Aggregate_Fields = {
  avg?: Maybe<SessionChargingProfiles_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<SessionChargingProfiles_Max_Fields>;
  min?: Maybe<SessionChargingProfiles_Min_Fields>;
  stddev?: Maybe<SessionChargingProfiles_Stddev_Fields>;
  stddev_pop?: Maybe<SessionChargingProfiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SessionChargingProfiles_Stddev_Samp_Fields>;
  sum?: Maybe<SessionChargingProfiles_Sum_Fields>;
  var_pop?: Maybe<SessionChargingProfiles_Var_Pop_Fields>;
  var_samp?: Maybe<SessionChargingProfiles_Var_Samp_Fields>;
  variance?: Maybe<SessionChargingProfiles_Variance_Fields>;
};

/** aggregate fields of "SessionChargingProfiles" */
export type SessionChargingProfiles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<SessionChargingProfiles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type SessionChargingProfiles_Avg_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "SessionChargingProfiles". All fields are combined with a logical 'AND'. */
export type SessionChargingProfiles_Bool_Exp = {
  _and?: InputMaybe<Array<SessionChargingProfiles_Bool_Exp>>;
  _not?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
  _or?: InputMaybe<Array<SessionChargingProfiles_Bool_Exp>>;
  chargingProfileId?: InputMaybe<Int_Comparison_Exp>;
  chargingScheduleId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  sessionId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SessionChargingProfiles" */
export type SessionChargingProfiles_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'SessionChargingProfiles_pkey'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key1'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key2'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key3'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key4'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key5'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key6'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key7'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key8'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key9'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key10'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key11'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key12'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key13'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key14'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key15'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key16'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key17'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key18'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key19'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key20'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key21'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key22'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key23'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key24'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key25'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key26'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key27'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key28'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key29'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key30'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key31'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key32'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key33'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key34'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key35'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key36'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key37'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key38'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key39'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key40'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key41'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key42'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key43'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key44'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key45'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key46'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key47'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key48'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key49'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key50'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key51'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key52'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key53'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key54'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key55'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key56'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key57'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key58'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key59'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key60'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key61'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key62'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key63'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key64'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key65'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key66'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key67'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key68'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key69'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key70'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key71'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key72'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key73'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key74'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key75'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key76'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key77'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key78'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key79'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key80'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key81'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key82'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key83'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key84'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key85'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key86'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key87'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key88'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key89'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key90'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key91'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key92'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key93'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key94'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key95'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key96'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key97'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key98'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key99'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key100'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key101'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key102'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key103'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key104'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key105'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key106'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key107'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key108'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key109'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key110'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key111'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key112'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key113'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key114'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key115'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key116'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key117'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key118'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key119'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key120'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key121'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key122'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key123'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key124'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key125'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key126'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key127'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key128'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key129'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key130'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key131'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key132'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key133'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key134'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key135'
  /** unique or primary key constraint on columns "sessionId" */
  | 'SessionChargingProfiles_sessionId_key136';

/** input type for incrementing numeric columns in table "SessionChargingProfiles" */
export type SessionChargingProfiles_Inc_Input = {
  chargingProfileId?: InputMaybe<Scalars['Int']['input']>;
  chargingScheduleId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "SessionChargingProfiles" */
export type SessionChargingProfiles_Insert_Input = {
  chargingProfileId?: InputMaybe<Scalars['Int']['input']>;
  chargingScheduleId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type SessionChargingProfiles_Max_Fields = {
  chargingProfileId?: Maybe<Scalars['Int']['output']>;
  chargingScheduleId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type SessionChargingProfiles_Min_Fields = {
  chargingProfileId?: Maybe<Scalars['Int']['output']>;
  chargingScheduleId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "SessionChargingProfiles" */
export type SessionChargingProfiles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<SessionChargingProfiles>;
};

/** on_conflict condition type for table "SessionChargingProfiles" */
export type SessionChargingProfiles_On_Conflict = {
  constraint: SessionChargingProfiles_Constraint;
  update_columns?: Array<SessionChargingProfiles_Update_Column>;
  where?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
};

/** Ordering options when selecting data from "SessionChargingProfiles". */
export type SessionChargingProfiles_Order_By = {
  chargingProfileId?: InputMaybe<Order_By>;
  chargingScheduleId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  sessionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: SessionChargingProfiles */
export type SessionChargingProfiles_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "SessionChargingProfiles" */
export type SessionChargingProfiles_Select_Column =
  /** column name */
  | 'chargingProfileId'
  /** column name */
  | 'chargingScheduleId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'sessionId'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "SessionChargingProfiles" */
export type SessionChargingProfiles_Set_Input = {
  chargingProfileId?: InputMaybe<Scalars['Int']['input']>;
  chargingScheduleId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type SessionChargingProfiles_Stddev_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type SessionChargingProfiles_Stddev_Pop_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type SessionChargingProfiles_Stddev_Samp_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "SessionChargingProfiles" */
export type SessionChargingProfiles_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: SessionChargingProfiles_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type SessionChargingProfiles_Stream_Cursor_Value_Input = {
  chargingProfileId?: InputMaybe<Scalars['Int']['input']>;
  chargingScheduleId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type SessionChargingProfiles_Sum_Fields = {
  chargingProfileId?: Maybe<Scalars['Int']['output']>;
  chargingScheduleId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "SessionChargingProfiles" */
export type SessionChargingProfiles_Update_Column =
  /** column name */
  | 'chargingProfileId'
  /** column name */
  | 'chargingScheduleId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'sessionId'
  /** column name */
  | 'updatedAt';

export type SessionChargingProfiles_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<SessionChargingProfiles_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<SessionChargingProfiles_Set_Input>;
  /** filter the rows which have to be updated */
  where: SessionChargingProfiles_Bool_Exp;
};

/** aggregate var_pop on columns */
export type SessionChargingProfiles_Var_Pop_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type SessionChargingProfiles_Var_Samp_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type SessionChargingProfiles_Variance_Fields = {
  chargingProfileId?: Maybe<Scalars['Float']['output']>;
  chargingScheduleId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "StatusNotifications" */
export type StatusNotifications = {
  /** An object relationship */
  ChargingStation?: Maybe<ChargingStations>;
  connectorId?: Maybe<Scalars['Int']['output']>;
  connectorStatus?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  stationId?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "StatusNotifications" */
export type StatusNotifications_Aggregate = {
  aggregate?: Maybe<StatusNotifications_Aggregate_Fields>;
  nodes: Array<StatusNotifications>;
};

export type StatusNotifications_Aggregate_Bool_Exp = {
  count?: InputMaybe<StatusNotifications_Aggregate_Bool_Exp_Count>;
};

export type StatusNotifications_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<StatusNotifications_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "StatusNotifications" */
export type StatusNotifications_Aggregate_Fields = {
  avg?: Maybe<StatusNotifications_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<StatusNotifications_Max_Fields>;
  min?: Maybe<StatusNotifications_Min_Fields>;
  stddev?: Maybe<StatusNotifications_Stddev_Fields>;
  stddev_pop?: Maybe<StatusNotifications_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<StatusNotifications_Stddev_Samp_Fields>;
  sum?: Maybe<StatusNotifications_Sum_Fields>;
  var_pop?: Maybe<StatusNotifications_Var_Pop_Fields>;
  var_samp?: Maybe<StatusNotifications_Var_Samp_Fields>;
  variance?: Maybe<StatusNotifications_Variance_Fields>;
};

/** aggregate fields of "StatusNotifications" */
export type StatusNotifications_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "StatusNotifications" */
export type StatusNotifications_Aggregate_Order_By = {
  avg?: InputMaybe<StatusNotifications_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<StatusNotifications_Max_Order_By>;
  min?: InputMaybe<StatusNotifications_Min_Order_By>;
  stddev?: InputMaybe<StatusNotifications_Stddev_Order_By>;
  stddev_pop?: InputMaybe<StatusNotifications_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<StatusNotifications_Stddev_Samp_Order_By>;
  sum?: InputMaybe<StatusNotifications_Sum_Order_By>;
  var_pop?: InputMaybe<StatusNotifications_Var_Pop_Order_By>;
  var_samp?: InputMaybe<StatusNotifications_Var_Samp_Order_By>;
  variance?: InputMaybe<StatusNotifications_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "StatusNotifications" */
export type StatusNotifications_Arr_Rel_Insert_Input = {
  data: Array<StatusNotifications_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** aggregate avg on columns */
export type StatusNotifications_Avg_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "StatusNotifications" */
export type StatusNotifications_Avg_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "StatusNotifications". All fields are combined with a logical 'AND'. */
export type StatusNotifications_Bool_Exp = {
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  _and?: InputMaybe<Array<StatusNotifications_Bool_Exp>>;
  _not?: InputMaybe<StatusNotifications_Bool_Exp>;
  _or?: InputMaybe<Array<StatusNotifications_Bool_Exp>>;
  connectorId?: InputMaybe<Int_Comparison_Exp>;
  connectorStatus?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "StatusNotifications" */
export type StatusNotifications_Constraint =
  /** unique or primary key constraint on columns "id" */
  'StatusNotifications_pkey';

/** input type for incrementing numeric columns in table "StatusNotifications" */
export type StatusNotifications_Inc_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "StatusNotifications" */
export type StatusNotifications_Insert_Input = {
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  connectorStatus?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type StatusNotifications_Max_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  connectorStatus?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "StatusNotifications" */
export type StatusNotifications_Max_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  connectorStatus?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type StatusNotifications_Min_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  connectorStatus?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "StatusNotifications" */
export type StatusNotifications_Min_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  connectorStatus?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "StatusNotifications" */
export type StatusNotifications_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<StatusNotifications>;
};

/** on_conflict condition type for table "StatusNotifications" */
export type StatusNotifications_On_Conflict = {
  constraint: StatusNotifications_Constraint;
  update_columns?: Array<StatusNotifications_Update_Column>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

/** Ordering options when selecting data from "StatusNotifications". */
export type StatusNotifications_Order_By = {
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  connectorId?: InputMaybe<Order_By>;
  connectorStatus?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: StatusNotifications */
export type StatusNotifications_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "StatusNotifications" */
export type StatusNotifications_Select_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'connectorStatus'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "StatusNotifications" */
export type StatusNotifications_Set_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  connectorStatus?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type StatusNotifications_Stddev_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "StatusNotifications" */
export type StatusNotifications_Stddev_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type StatusNotifications_Stddev_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "StatusNotifications" */
export type StatusNotifications_Stddev_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type StatusNotifications_Stddev_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "StatusNotifications" */
export type StatusNotifications_Stddev_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "StatusNotifications" */
export type StatusNotifications_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: StatusNotifications_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type StatusNotifications_Stream_Cursor_Value_Input = {
  connectorId?: InputMaybe<Scalars['Int']['input']>;
  connectorStatus?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type StatusNotifications_Sum_Fields = {
  connectorId?: Maybe<Scalars['Int']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "StatusNotifications" */
export type StatusNotifications_Sum_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "StatusNotifications" */
export type StatusNotifications_Update_Column =
  /** column name */
  | 'connectorId'
  /** column name */
  | 'connectorStatus'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'stationId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'updatedAt';

export type StatusNotifications_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<StatusNotifications_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<StatusNotifications_Set_Input>;
  /** filter the rows which have to be updated */
  where: StatusNotifications_Bool_Exp;
};

/** aggregate var_pop on columns */
export type StatusNotifications_Var_Pop_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "StatusNotifications" */
export type StatusNotifications_Var_Pop_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type StatusNotifications_Var_Samp_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "StatusNotifications" */
export type StatusNotifications_Var_Samp_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type StatusNotifications_Variance_Fields = {
  connectorId?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "StatusNotifications" */
export type StatusNotifications_Variance_Order_By = {
  connectorId?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Array_Comparison_Exp = {
  /** is the array contained in the given array value */
  _contained_in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the array contain the given value */
  _contains?: InputMaybe<Array<Scalars['String']['input']>>;
  _eq?: InputMaybe<Array<Scalars['String']['input']>>;
  _gt?: InputMaybe<Array<Scalars['String']['input']>>;
  _gte?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Array<Scalars['String']['input']>>;
  _lte?: InputMaybe<Array<Scalars['String']['input']>>;
  _neq?: InputMaybe<Array<Scalars['String']['input']>>;
  _nin?: InputMaybe<Array<Array<Scalars['String']['input']>>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "Subscriptions" */
export type Subscriptions = {
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  messageRegexFilter?: Maybe<Scalars['String']['output']>;
  onClose?: Maybe<Scalars['Boolean']['output']>;
  onConnect?: Maybe<Scalars['Boolean']['output']>;
  onMessage?: Maybe<Scalars['Boolean']['output']>;
  sentMessage?: Maybe<Scalars['Boolean']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregated selection of "Subscriptions" */
export type Subscriptions_Aggregate = {
  aggregate?: Maybe<Subscriptions_Aggregate_Fields>;
  nodes: Array<Subscriptions>;
};

/** aggregate fields of "Subscriptions" */
export type Subscriptions_Aggregate_Fields = {
  avg?: Maybe<Subscriptions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Subscriptions_Max_Fields>;
  min?: Maybe<Subscriptions_Min_Fields>;
  stddev?: Maybe<Subscriptions_Stddev_Fields>;
  stddev_pop?: Maybe<Subscriptions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Subscriptions_Stddev_Samp_Fields>;
  sum?: Maybe<Subscriptions_Sum_Fields>;
  var_pop?: Maybe<Subscriptions_Var_Pop_Fields>;
  var_samp?: Maybe<Subscriptions_Var_Samp_Fields>;
  variance?: Maybe<Subscriptions_Variance_Fields>;
};

/** aggregate fields of "Subscriptions" */
export type Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Subscriptions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Subscriptions_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Subscriptions". All fields are combined with a logical 'AND'. */
export type Subscriptions_Bool_Exp = {
  _and?: InputMaybe<Array<Subscriptions_Bool_Exp>>;
  _not?: InputMaybe<Subscriptions_Bool_Exp>;
  _or?: InputMaybe<Array<Subscriptions_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  messageRegexFilter?: InputMaybe<String_Comparison_Exp>;
  onClose?: InputMaybe<Boolean_Comparison_Exp>;
  onConnect?: InputMaybe<Boolean_Comparison_Exp>;
  onMessage?: InputMaybe<Boolean_Comparison_Exp>;
  sentMessage?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Subscriptions" */
export type Subscriptions_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Subscriptions_pkey';

/** input type for incrementing numeric columns in table "Subscriptions" */
export type Subscriptions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Subscriptions" */
export type Subscriptions_Insert_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageRegexFilter?: InputMaybe<Scalars['String']['input']>;
  onClose?: InputMaybe<Scalars['Boolean']['input']>;
  onConnect?: InputMaybe<Scalars['Boolean']['input']>;
  onMessage?: InputMaybe<Scalars['Boolean']['input']>;
  sentMessage?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Subscriptions_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageRegexFilter?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Subscriptions_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  messageRegexFilter?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "Subscriptions" */
export type Subscriptions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Subscriptions>;
};

/** on_conflict condition type for table "Subscriptions" */
export type Subscriptions_On_Conflict = {
  constraint: Subscriptions_Constraint;
  update_columns?: Array<Subscriptions_Update_Column>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

/** Ordering options when selecting data from "Subscriptions". */
export type Subscriptions_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  messageRegexFilter?: InputMaybe<Order_By>;
  onClose?: InputMaybe<Order_By>;
  onConnect?: InputMaybe<Order_By>;
  onMessage?: InputMaybe<Order_By>;
  sentMessage?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Subscriptions */
export type Subscriptions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Subscriptions" */
export type Subscriptions_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'messageRegexFilter'
  /** column name */
  | 'onClose'
  /** column name */
  | 'onConnect'
  /** column name */
  | 'onMessage'
  /** column name */
  | 'sentMessage'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

/** input type for updating data in table "Subscriptions" */
export type Subscriptions_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageRegexFilter?: InputMaybe<Scalars['String']['input']>;
  onClose?: InputMaybe<Scalars['Boolean']['input']>;
  onConnect?: InputMaybe<Scalars['Boolean']['input']>;
  onMessage?: InputMaybe<Scalars['Boolean']['input']>;
  sentMessage?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Subscriptions_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Subscriptions_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Subscriptions_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Subscriptions" */
export type Subscriptions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Subscriptions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Subscriptions_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  messageRegexFilter?: InputMaybe<Scalars['String']['input']>;
  onClose?: InputMaybe<Scalars['Boolean']['input']>;
  onConnect?: InputMaybe<Scalars['Boolean']['input']>;
  onMessage?: InputMaybe<Scalars['Boolean']['input']>;
  sentMessage?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Subscriptions_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Subscriptions" */
export type Subscriptions_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'messageRegexFilter'
  /** column name */
  | 'onClose'
  /** column name */
  | 'onConnect'
  /** column name */
  | 'onMessage'
  /** column name */
  | 'sentMessage'
  /** column name */
  | 'stationId'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url';

export type Subscriptions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Subscriptions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Subscriptions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Subscriptions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Subscriptions_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Subscriptions_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Subscriptions_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "Tariffs" */
export type Tariffs = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  currency: Scalars['bpchar']['output'];
  id: Scalars['Int']['output'];
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh: Scalars['numeric']['output'];
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** aggregated selection of "Tariffs" */
export type Tariffs_Aggregate = {
  aggregate?: Maybe<Tariffs_Aggregate_Fields>;
  nodes: Array<Tariffs>;
};

/** aggregate fields of "Tariffs" */
export type Tariffs_Aggregate_Fields = {
  avg?: Maybe<Tariffs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Tariffs_Max_Fields>;
  min?: Maybe<Tariffs_Min_Fields>;
  stddev?: Maybe<Tariffs_Stddev_Fields>;
  stddev_pop?: Maybe<Tariffs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tariffs_Stddev_Samp_Fields>;
  sum?: Maybe<Tariffs_Sum_Fields>;
  var_pop?: Maybe<Tariffs_Var_Pop_Fields>;
  var_samp?: Maybe<Tariffs_Var_Samp_Fields>;
  variance?: Maybe<Tariffs_Variance_Fields>;
};

/** aggregate fields of "Tariffs" */
export type Tariffs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Tariffs_Avg_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Tariffs". All fields are combined with a logical 'AND'. */
export type Tariffs_Bool_Exp = {
  _and?: InputMaybe<Array<Tariffs_Bool_Exp>>;
  _not?: InputMaybe<Tariffs_Bool_Exp>;
  _or?: InputMaybe<Array<Tariffs_Bool_Exp>>;
  authorizationAmount?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<Bpchar_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  paymentFee?: InputMaybe<Numeric_Comparison_Exp>;
  pricePerKwh?: InputMaybe<Numeric_Comparison_Exp>;
  pricePerMin?: InputMaybe<Numeric_Comparison_Exp>;
  pricePerSession?: InputMaybe<Numeric_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  taxRate?: InputMaybe<Numeric_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Tariffs" */
export type Tariffs_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Tariffs_pkey'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key1'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key2'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key3'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key4'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key5'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key6'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key7'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key8'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key9'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key10'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key11'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key12'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key13'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key14'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key15'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key16'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key17'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key18'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key19'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key20'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key21'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key22'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key23'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key24'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key25'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key26'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key27'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key28'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key29'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key30'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key31'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key32'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key33'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key34'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key35'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key36'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key37'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key38'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key39'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key40'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key41'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key42'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key43'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key44'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key45'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key46'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key47'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key48'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key49'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key50'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key51'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key52'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key53'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key54'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key55'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key56'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key57'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key58'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key59'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key60'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key61'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key62'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key63'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key64'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key65'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key66'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key67'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key68'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key69'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key70'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key71'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key72'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key73'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key74'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key75'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key76'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key77'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key78'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key79'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key80'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key81'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key82'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key83'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key84'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key85'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key86'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key87'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key88'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key89'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key90'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key91'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key92'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key93'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key94'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key95'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key96'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key97'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key98'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key99'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key100'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key101'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key102'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key103'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key104'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key105'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key106'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key107'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key108'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key109'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key110'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key111'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key112'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key113'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key114'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key115'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key116'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key117'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key118'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key119'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key120'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key121'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key122'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key123'
  /** unique or primary key constraint on columns "stationId" */
  | 'Tariffs_stationId_key124';

/** input type for incrementing numeric columns in table "Tariffs" */
export type Tariffs_Inc_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "Tariffs" */
export type Tariffs_Insert_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['bpchar']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Tariffs_Max_Fields = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['bpchar']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh?: Maybe<Scalars['numeric']['output']>;
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Tariffs_Min_Fields = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  currency?: Maybe<Scalars['bpchar']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh?: Maybe<Scalars['numeric']['output']>;
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "Tariffs" */
export type Tariffs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Tariffs>;
};

/** on_conflict condition type for table "Tariffs" */
export type Tariffs_On_Conflict = {
  constraint: Tariffs_Constraint;
  update_columns?: Array<Tariffs_Update_Column>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

/** Ordering options when selecting data from "Tariffs". */
export type Tariffs_Order_By = {
  authorizationAmount?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  paymentFee?: InputMaybe<Order_By>;
  pricePerKwh?: InputMaybe<Order_By>;
  pricePerMin?: InputMaybe<Order_By>;
  pricePerSession?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  taxRate?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Tariffs */
export type Tariffs_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Tariffs" */
export type Tariffs_Select_Column =
  /** column name */
  | 'authorizationAmount'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'id'
  /** column name */
  | 'paymentFee'
  /** column name */
  | 'pricePerKwh'
  /** column name */
  | 'pricePerMin'
  /** column name */
  | 'pricePerSession'
  /** column name */
  | 'stationId'
  /** column name */
  | 'taxRate'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Tariffs" */
export type Tariffs_Set_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['bpchar']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Tariffs_Stddev_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Tariffs_Stddev_Pop_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Tariffs_Stddev_Samp_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Tariffs" */
export type Tariffs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tariffs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tariffs_Stream_Cursor_Value_Input = {
  authorizationAmount?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  currency?: InputMaybe<Scalars['bpchar']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  paymentFee?: InputMaybe<Scalars['numeric']['input']>;
  pricePerKwh?: InputMaybe<Scalars['numeric']['input']>;
  pricePerMin?: InputMaybe<Scalars['numeric']['input']>;
  pricePerSession?: InputMaybe<Scalars['numeric']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  taxRate?: InputMaybe<Scalars['numeric']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Tariffs_Sum_Fields = {
  authorizationAmount?: Maybe<Scalars['numeric']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  paymentFee?: Maybe<Scalars['numeric']['output']>;
  pricePerKwh?: Maybe<Scalars['numeric']['output']>;
  pricePerMin?: Maybe<Scalars['numeric']['output']>;
  pricePerSession?: Maybe<Scalars['numeric']['output']>;
  taxRate?: Maybe<Scalars['numeric']['output']>;
};

/** update columns of table "Tariffs" */
export type Tariffs_Update_Column =
  /** column name */
  | 'authorizationAmount'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'currency'
  /** column name */
  | 'id'
  /** column name */
  | 'paymentFee'
  /** column name */
  | 'pricePerKwh'
  /** column name */
  | 'pricePerMin'
  /** column name */
  | 'pricePerSession'
  /** column name */
  | 'stationId'
  /** column name */
  | 'taxRate'
  /** column name */
  | 'updatedAt';

export type Tariffs_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tariffs_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tariffs_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tariffs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tariffs_Var_Pop_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Tariffs_Var_Samp_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Tariffs_Variance_Fields = {
  authorizationAmount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  paymentFee?: Maybe<Scalars['Float']['output']>;
  pricePerKwh?: Maybe<Scalars['Float']['output']>;
  pricePerMin?: Maybe<Scalars['Float']['output']>;
  pricePerSession?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEvents = {
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An object relationship */
  IdToken?: Maybe<IdTokens>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An object relationship */
  Transaction?: Maybe<Transactions>;
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  eventType?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  idTokenId?: Maybe<Scalars['Int']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  offline?: Maybe<Scalars['Boolean']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  transactionInfo?: Maybe<Scalars['json']['output']>;
  triggerReason?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEventsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEventsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "TransactionEvents" */
export type TransactionEventsTransactionInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "TransactionEvents" */
export type TransactionEvents_Aggregate = {
  aggregate?: Maybe<TransactionEvents_Aggregate_Fields>;
  nodes: Array<TransactionEvents>;
};

export type TransactionEvents_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp_Count>;
};

export type TransactionEvents_Aggregate_Bool_Exp_Bool_And = {
  arguments: TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionEvents_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type TransactionEvents_Aggregate_Bool_Exp_Bool_Or = {
  arguments: TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionEvents_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type TransactionEvents_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TransactionEvents_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "TransactionEvents" */
export type TransactionEvents_Aggregate_Fields = {
  avg?: Maybe<TransactionEvents_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TransactionEvents_Max_Fields>;
  min?: Maybe<TransactionEvents_Min_Fields>;
  stddev?: Maybe<TransactionEvents_Stddev_Fields>;
  stddev_pop?: Maybe<TransactionEvents_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<TransactionEvents_Stddev_Samp_Fields>;
  sum?: Maybe<TransactionEvents_Sum_Fields>;
  var_pop?: Maybe<TransactionEvents_Var_Pop_Fields>;
  var_samp?: Maybe<TransactionEvents_Var_Samp_Fields>;
  variance?: Maybe<TransactionEvents_Variance_Fields>;
};

/** aggregate fields of "TransactionEvents" */
export type TransactionEvents_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "TransactionEvents" */
export type TransactionEvents_Aggregate_Order_By = {
  avg?: InputMaybe<TransactionEvents_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<TransactionEvents_Max_Order_By>;
  min?: InputMaybe<TransactionEvents_Min_Order_By>;
  stddev?: InputMaybe<TransactionEvents_Stddev_Order_By>;
  stddev_pop?: InputMaybe<TransactionEvents_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<TransactionEvents_Stddev_Samp_Order_By>;
  sum?: InputMaybe<TransactionEvents_Sum_Order_By>;
  var_pop?: InputMaybe<TransactionEvents_Var_Pop_Order_By>;
  var_samp?: InputMaybe<TransactionEvents_Var_Samp_Order_By>;
  variance?: InputMaybe<TransactionEvents_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "TransactionEvents" */
export type TransactionEvents_Arr_Rel_Insert_Input = {
  data: Array<TransactionEvents_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** aggregate avg on columns */
export type TransactionEvents_Avg_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "TransactionEvents" */
export type TransactionEvents_Avg_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "TransactionEvents". All fields are combined with a logical 'AND'. */
export type TransactionEvents_Bool_Exp = {
  Evse?: InputMaybe<Evses_Bool_Exp>;
  IdToken?: InputMaybe<IdTokens_Bool_Exp>;
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  Transaction?: InputMaybe<Transactions_Bool_Exp>;
  _and?: InputMaybe<Array<TransactionEvents_Bool_Exp>>;
  _not?: InputMaybe<TransactionEvents_Bool_Exp>;
  _or?: InputMaybe<Array<TransactionEvents_Bool_Exp>>;
  cableMaxCurrent?: InputMaybe<Numeric_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  eventType?: InputMaybe<String_Comparison_Exp>;
  evseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  idTokenId?: InputMaybe<Int_Comparison_Exp>;
  numberOfPhasesUsed?: InputMaybe<Int_Comparison_Exp>;
  offline?: InputMaybe<Boolean_Comparison_Exp>;
  reservationId?: InputMaybe<Int_Comparison_Exp>;
  seqNo?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  timestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  transactionDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  transactionInfo?: InputMaybe<Json_Comparison_Exp>;
  triggerReason?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "TransactionEvents" */
export type TransactionEvents_Constraint =
  /** unique or primary key constraint on columns "id" */
  'TransactionEvents_pkey';

/** input type for incrementing numeric columns in table "TransactionEvents" */
export type TransactionEvents_Inc_Input = {
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "TransactionEvents" */
export type TransactionEvents_Insert_Input = {
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  IdToken?: InputMaybe<IdTokens_Obj_Rel_Insert_Input>;
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  Transaction?: InputMaybe<Transactions_Obj_Rel_Insert_Input>;
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  offline?: InputMaybe<Scalars['Boolean']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionInfo?: InputMaybe<Scalars['json']['input']>;
  triggerReason?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type TransactionEvents_Max_Fields = {
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  triggerReason?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "TransactionEvents" */
export type TransactionEvents_Max_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventType?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  triggerReason?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type TransactionEvents_Min_Fields = {
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['timestamptz']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
  triggerReason?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "TransactionEvents" */
export type TransactionEvents_Min_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventType?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  triggerReason?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "TransactionEvents" */
export type TransactionEvents_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<TransactionEvents>;
};

/** input type for inserting object relation for remote table "TransactionEvents" */
export type TransactionEvents_Obj_Rel_Insert_Input = {
  data: TransactionEvents_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** on_conflict condition type for table "TransactionEvents" */
export type TransactionEvents_On_Conflict = {
  constraint: TransactionEvents_Constraint;
  update_columns?: Array<TransactionEvents_Update_Column>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** Ordering options when selecting data from "TransactionEvents". */
export type TransactionEvents_Order_By = {
  Evse?: InputMaybe<Evses_Order_By>;
  IdToken?: InputMaybe<IdTokens_Order_By>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  Transaction?: InputMaybe<Transactions_Order_By>;
  cableMaxCurrent?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  eventType?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  offline?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
  transactionInfo?: InputMaybe<Order_By>;
  triggerReason?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: TransactionEvents */
export type TransactionEvents_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "TransactionEvents" */
export type TransactionEvents_Select_Column =
  /** column name */
  | 'cableMaxCurrent'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventType'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenId'
  /** column name */
  | 'numberOfPhasesUsed'
  /** column name */
  | 'offline'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'seqNo'
  /** column name */
  | 'stationId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionInfo'
  /** column name */
  | 'triggerReason'
  /** column name */
  | 'updatedAt';

/** select "TransactionEvents_aggregate_bool_exp_bool_and_arguments_columns" columns of table "TransactionEvents" */
export type TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'offline';

/** select "TransactionEvents_aggregate_bool_exp_bool_or_arguments_columns" columns of table "TransactionEvents" */
export type TransactionEvents_Select_Column_TransactionEvents_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'offline';

/** input type for updating data in table "TransactionEvents" */
export type TransactionEvents_Set_Input = {
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  offline?: InputMaybe<Scalars['Boolean']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionInfo?: InputMaybe<Scalars['json']['input']>;
  triggerReason?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type TransactionEvents_Stddev_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "TransactionEvents" */
export type TransactionEvents_Stddev_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type TransactionEvents_Stddev_Pop_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "TransactionEvents" */
export type TransactionEvents_Stddev_Pop_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type TransactionEvents_Stddev_Samp_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "TransactionEvents" */
export type TransactionEvents_Stddev_Samp_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "TransactionEvents" */
export type TransactionEvents_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TransactionEvents_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TransactionEvents_Stream_Cursor_Value_Input = {
  cableMaxCurrent?: InputMaybe<Scalars['numeric']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  evseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  idTokenId?: InputMaybe<Scalars['Int']['input']>;
  numberOfPhasesUsed?: InputMaybe<Scalars['Int']['input']>;
  offline?: InputMaybe<Scalars['Boolean']['input']>;
  reservationId?: InputMaybe<Scalars['Int']['input']>;
  seqNo?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  transactionDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  transactionInfo?: InputMaybe<Scalars['json']['input']>;
  triggerReason?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type TransactionEvents_Sum_Fields = {
  cableMaxCurrent?: Maybe<Scalars['numeric']['output']>;
  evseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  idTokenId?: Maybe<Scalars['Int']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Int']['output']>;
  reservationId?: Maybe<Scalars['Int']['output']>;
  seqNo?: Maybe<Scalars['Int']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "TransactionEvents" */
export type TransactionEvents_Sum_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** update columns of table "TransactionEvents" */
export type TransactionEvents_Update_Column =
  /** column name */
  | 'cableMaxCurrent'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'eventType'
  /** column name */
  | 'evseId'
  /** column name */
  | 'id'
  /** column name */
  | 'idTokenId'
  /** column name */
  | 'numberOfPhasesUsed'
  /** column name */
  | 'offline'
  /** column name */
  | 'reservationId'
  /** column name */
  | 'seqNo'
  /** column name */
  | 'stationId'
  /** column name */
  | 'timestamp'
  /** column name */
  | 'transactionDatabaseId'
  /** column name */
  | 'transactionInfo'
  /** column name */
  | 'triggerReason'
  /** column name */
  | 'updatedAt';

export type TransactionEvents_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<TransactionEvents_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TransactionEvents_Set_Input>;
  /** filter the rows which have to be updated */
  where: TransactionEvents_Bool_Exp;
};

/** aggregate var_pop on columns */
export type TransactionEvents_Var_Pop_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "TransactionEvents" */
export type TransactionEvents_Var_Pop_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type TransactionEvents_Var_Samp_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "TransactionEvents" */
export type TransactionEvents_Var_Samp_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type TransactionEvents_Variance_Fields = {
  cableMaxCurrent?: Maybe<Scalars['Float']['output']>;
  evseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  idTokenId?: Maybe<Scalars['Float']['output']>;
  numberOfPhasesUsed?: Maybe<Scalars['Float']['output']>;
  reservationId?: Maybe<Scalars['Float']['output']>;
  seqNo?: Maybe<Scalars['Float']['output']>;
  transactionDatabaseId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "TransactionEvents" */
export type TransactionEvents_Variance_Order_By = {
  cableMaxCurrent?: InputMaybe<Order_By>;
  evseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  idTokenId?: InputMaybe<Order_By>;
  numberOfPhasesUsed?: InputMaybe<Order_By>;
  reservationId?: InputMaybe<Order_By>;
  seqNo?: InputMaybe<Order_By>;
  transactionDatabaseId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Transactions" */
export type Transactions = {
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** An object relationship */
  ChargingStation?: Maybe<ChargingStations>;
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  chargingState?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  isActive?: Maybe<Scalars['Boolean']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  stoppedReason?: Maybe<Scalars['String']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** columns and relationships of "Transactions" */
export type TransactionsTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

/** aggregated selection of "Transactions" */
export type Transactions_Aggregate = {
  aggregate?: Maybe<Transactions_Aggregate_Fields>;
  nodes: Array<Transactions>;
};

export type Transactions_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Transactions_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Transactions_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Transactions_Aggregate_Bool_Exp_Count>;
};

export type Transactions_Aggregate_Bool_Exp_Bool_And = {
  arguments: Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Transactions_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Transactions_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Transactions_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Transactions_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Transactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Transactions_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "Transactions" */
export type Transactions_Aggregate_Fields = {
  avg?: Maybe<Transactions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Transactions_Max_Fields>;
  min?: Maybe<Transactions_Min_Fields>;
  stddev?: Maybe<Transactions_Stddev_Fields>;
  stddev_pop?: Maybe<Transactions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Transactions_Stddev_Samp_Fields>;
  sum?: Maybe<Transactions_Sum_Fields>;
  var_pop?: Maybe<Transactions_Var_Pop_Fields>;
  var_samp?: Maybe<Transactions_Var_Samp_Fields>;
  variance?: Maybe<Transactions_Variance_Fields>;
};

/** aggregate fields of "Transactions" */
export type Transactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Transactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "Transactions" */
export type Transactions_Aggregate_Order_By = {
  avg?: InputMaybe<Transactions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Transactions_Max_Order_By>;
  min?: InputMaybe<Transactions_Min_Order_By>;
  stddev?: InputMaybe<Transactions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Transactions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Transactions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Transactions_Sum_Order_By>;
  var_pop?: InputMaybe<Transactions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Transactions_Var_Samp_Order_By>;
  variance?: InputMaybe<Transactions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Transactions" */
export type Transactions_Arr_Rel_Insert_Input = {
  data: Array<Transactions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** aggregate avg on columns */
export type Transactions_Avg_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "Transactions" */
export type Transactions_Avg_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Transactions". All fields are combined with a logical 'AND'. */
export type Transactions_Bool_Exp = {
  ChargingNeeds?: InputMaybe<ChargingNeeds_Bool_Exp>;
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Bool_Exp>;
  ChargingProfiles?: InputMaybe<ChargingProfiles_Bool_Exp>;
  ChargingProfiles_aggregate?: InputMaybe<ChargingProfiles_Aggregate_Bool_Exp>;
  ChargingStation?: InputMaybe<ChargingStations_Bool_Exp>;
  Evse?: InputMaybe<Evses_Bool_Exp>;
  MeterValues?: InputMaybe<MeterValues_Bool_Exp>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Bool_Exp>;
  TransactionEvents?: InputMaybe<TransactionEvents_Bool_Exp>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Transactions_Bool_Exp>>;
  _not?: InputMaybe<Transactions_Bool_Exp>;
  _or?: InputMaybe<Array<Transactions_Bool_Exp>>;
  chargingState?: InputMaybe<String_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  evseDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  remoteStartId?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  stoppedReason?: InputMaybe<String_Comparison_Exp>;
  timeSpentCharging?: InputMaybe<Bigint_Comparison_Exp>;
  totalKwh?: InputMaybe<Numeric_Comparison_Exp>;
  transactionId?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Transactions" */
export type Transactions_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'Transactions_pkey'
  /** unique or primary key constraint on columns "transactionId", "stationId" */
  | 'Transactions_stationId_transactionId_key';

/** input type for incrementing numeric columns in table "Transactions" */
export type Transactions_Inc_Input = {
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
};

/** input type for inserting data into table "Transactions" */
export type Transactions_Insert_Input = {
  ChargingNeeds?: InputMaybe<ChargingNeeds_Arr_Rel_Insert_Input>;
  ChargingProfiles?: InputMaybe<ChargingProfiles_Arr_Rel_Insert_Input>;
  ChargingStation?: InputMaybe<ChargingStations_Obj_Rel_Insert_Input>;
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  MeterValues?: InputMaybe<MeterValues_Arr_Rel_Insert_Input>;
  TransactionEvents?: InputMaybe<TransactionEvents_Arr_Rel_Insert_Input>;
  chargingState?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  stoppedReason?: InputMaybe<Scalars['String']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Transactions_Max_Fields = {
  chargingState?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  stoppedReason?: Maybe<Scalars['String']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "Transactions" */
export type Transactions_Max_Order_By = {
  chargingState?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  stoppedReason?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Transactions_Min_Fields = {
  chargingState?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  stoppedReason?: Maybe<Scalars['String']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
  transactionId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "Transactions" */
export type Transactions_Min_Order_By = {
  chargingState?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  stoppedReason?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Transactions" */
export type Transactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Transactions>;
};

/** input type for inserting object relation for remote table "Transactions" */
export type Transactions_Obj_Rel_Insert_Input = {
  data: Transactions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** on_conflict condition type for table "Transactions" */
export type Transactions_On_Conflict = {
  constraint: Transactions_Constraint;
  update_columns?: Array<Transactions_Update_Column>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

/** Ordering options when selecting data from "Transactions". */
export type Transactions_Order_By = {
  ChargingNeeds_aggregate?: InputMaybe<ChargingNeeds_Aggregate_Order_By>;
  ChargingProfiles_aggregate?: InputMaybe<ChargingProfiles_Aggregate_Order_By>;
  ChargingStation?: InputMaybe<ChargingStations_Order_By>;
  Evse?: InputMaybe<Evses_Order_By>;
  MeterValues_aggregate?: InputMaybe<MeterValues_Aggregate_Order_By>;
  TransactionEvents_aggregate?: InputMaybe<TransactionEvents_Aggregate_Order_By>;
  chargingState?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  stoppedReason?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
  transactionId?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Transactions */
export type Transactions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Transactions" */
export type Transactions_Select_Column =
  /** column name */
  | 'chargingState'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'remoteStartId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'stoppedReason'
  /** column name */
  | 'timeSpentCharging'
  /** column name */
  | 'totalKwh'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

/** select "Transactions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "Transactions" */
export type Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'isActive';

/** select "Transactions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "Transactions" */
export type Transactions_Select_Column_Transactions_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'isActive';

/** input type for updating data in table "Transactions" */
export type Transactions_Set_Input = {
  chargingState?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  stoppedReason?: InputMaybe<Scalars['String']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Transactions_Stddev_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "Transactions" */
export type Transactions_Stddev_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Transactions_Stddev_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "Transactions" */
export type Transactions_Stddev_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Transactions_Stddev_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "Transactions" */
export type Transactions_Stddev_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "Transactions" */
export type Transactions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Transactions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Transactions_Stream_Cursor_Value_Input = {
  chargingState?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  remoteStartId?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  stoppedReason?: InputMaybe<Scalars['String']['input']>;
  timeSpentCharging?: InputMaybe<Scalars['bigint']['input']>;
  totalKwh?: InputMaybe<Scalars['numeric']['input']>;
  transactionId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Transactions_Sum_Fields = {
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  remoteStartId?: Maybe<Scalars['Int']['output']>;
  timeSpentCharging?: Maybe<Scalars['bigint']['output']>;
  totalKwh?: Maybe<Scalars['numeric']['output']>;
};

/** order by sum() on columns of table "Transactions" */
export type Transactions_Sum_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** update columns of table "Transactions" */
export type Transactions_Update_Column =
  /** column name */
  | 'chargingState'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'isActive'
  /** column name */
  | 'remoteStartId'
  /** column name */
  | 'stationId'
  /** column name */
  | 'stoppedReason'
  /** column name */
  | 'timeSpentCharging'
  /** column name */
  | 'totalKwh'
  /** column name */
  | 'transactionId'
  /** column name */
  | 'updatedAt';

export type Transactions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Transactions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Transactions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Transactions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Transactions_Var_Pop_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "Transactions" */
export type Transactions_Var_Pop_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Transactions_Var_Samp_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "Transactions" */
export type Transactions_Var_Samp_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Transactions_Variance_Fields = {
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  remoteStartId?: Maybe<Scalars['Float']['output']>;
  timeSpentCharging?: Maybe<Scalars['Float']['output']>;
  totalKwh?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "Transactions" */
export type Transactions_Variance_Order_By = {
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  remoteStartId?: InputMaybe<Order_By>;
  timeSpentCharging?: InputMaybe<Order_By>;
  totalKwh?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableAttributes" */
export type VariableAttributes = {
  /** An object relationship */
  Boot?: Maybe<Boots>;
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  Evse?: Maybe<Evses>;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  bootConfigId?: Maybe<Scalars['String']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  constant?: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  dataType?: Maybe<Scalars['String']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  generatedAt?: Maybe<Scalars['timestamptz']['output']>;
  id: Scalars['Int']['output'];
  mutability?: Maybe<Scalars['String']['output']>;
  persistent?: Maybe<Scalars['Boolean']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableAttributes" */
export type VariableAttributesVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** columns and relationships of "VariableAttributes" */
export type VariableAttributesVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** aggregated selection of "VariableAttributes" */
export type VariableAttributes_Aggregate = {
  aggregate?: Maybe<VariableAttributes_Aggregate_Fields>;
  nodes: Array<VariableAttributes>;
};

export type VariableAttributes_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp_Count>;
};

export type VariableAttributes_Aggregate_Bool_Exp_Bool_And = {
  arguments: VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableAttributes_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableAttributes_Aggregate_Bool_Exp_Bool_Or = {
  arguments: VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableAttributes_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableAttributes_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableAttributes_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableAttributes" */
export type VariableAttributes_Aggregate_Fields = {
  avg?: Maybe<VariableAttributes_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableAttributes_Max_Fields>;
  min?: Maybe<VariableAttributes_Min_Fields>;
  stddev?: Maybe<VariableAttributes_Stddev_Fields>;
  stddev_pop?: Maybe<VariableAttributes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableAttributes_Stddev_Samp_Fields>;
  sum?: Maybe<VariableAttributes_Sum_Fields>;
  var_pop?: Maybe<VariableAttributes_Var_Pop_Fields>;
  var_samp?: Maybe<VariableAttributes_Var_Samp_Fields>;
  variance?: Maybe<VariableAttributes_Variance_Fields>;
};

/** aggregate fields of "VariableAttributes" */
export type VariableAttributes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableAttributes" */
export type VariableAttributes_Aggregate_Order_By = {
  avg?: InputMaybe<VariableAttributes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableAttributes_Max_Order_By>;
  min?: InputMaybe<VariableAttributes_Min_Order_By>;
  stddev?: InputMaybe<VariableAttributes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableAttributes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableAttributes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableAttributes_Sum_Order_By>;
  var_pop?: InputMaybe<VariableAttributes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableAttributes_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableAttributes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableAttributes" */
export type VariableAttributes_Arr_Rel_Insert_Input = {
  data: Array<VariableAttributes_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableAttributes_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableAttributes" */
export type VariableAttributes_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableAttributes". All fields are combined with a logical 'AND'. */
export type VariableAttributes_Bool_Exp = {
  Boot?: InputMaybe<Boots_Bool_Exp>;
  Component?: InputMaybe<Components_Bool_Exp>;
  Evse?: InputMaybe<Evses_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  VariableStatuses?: InputMaybe<VariableStatuses_Bool_Exp>;
  VariableStatuses_aggregate?: InputMaybe<VariableStatuses_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<VariableAttributes_Bool_Exp>>;
  _not?: InputMaybe<VariableAttributes_Bool_Exp>;
  _or?: InputMaybe<Array<VariableAttributes_Bool_Exp>>;
  bootConfigId?: InputMaybe<String_Comparison_Exp>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  constant?: InputMaybe<Boolean_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dataType?: InputMaybe<String_Comparison_Exp>;
  evseDatabaseId?: InputMaybe<Int_Comparison_Exp>;
  generatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  mutability?: InputMaybe<String_Comparison_Exp>;
  persistent?: InputMaybe<Boolean_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableAttributes" */
export type VariableAttributes_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'VariableAttributes_pkey'
  /** unique or primary key constraint on columns "stationId", "componentId", "type", "variableId" */
  | 'VariableAttributes_stationId_type_variableId_componentId_key';

/** input type for incrementing numeric columns in table "VariableAttributes" */
export type VariableAttributes_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableAttributes" */
export type VariableAttributes_Insert_Input = {
  Boot?: InputMaybe<Boots_Obj_Rel_Insert_Input>;
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Evse?: InputMaybe<Evses_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  VariableStatuses?: InputMaybe<VariableStatuses_Arr_Rel_Insert_Input>;
  bootConfigId?: InputMaybe<Scalars['String']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  constant?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  generatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  mutability?: InputMaybe<Scalars['String']['input']>;
  persistent?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableAttributes_Max_Fields = {
  bootConfigId?: Maybe<Scalars['String']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  generatedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  mutability?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableAttributes" */
export type VariableAttributes_Max_Order_By = {
  bootConfigId?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  generatedAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  mutability?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableAttributes_Min_Fields = {
  bootConfigId?: Maybe<Scalars['String']['output']>;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  generatedAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  mutability?: Maybe<Scalars['String']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableAttributes" */
export type VariableAttributes_Min_Order_By = {
  bootConfigId?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  generatedAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  mutability?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableAttributes" */
export type VariableAttributes_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableAttributes>;
};

/** input type for inserting object relation for remote table "VariableAttributes" */
export type VariableAttributes_Obj_Rel_Insert_Input = {
  data: VariableAttributes_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** on_conflict condition type for table "VariableAttributes" */
export type VariableAttributes_On_Conflict = {
  constraint: VariableAttributes_Constraint;
  update_columns?: Array<VariableAttributes_Update_Column>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableAttributes". */
export type VariableAttributes_Order_By = {
  Boot?: InputMaybe<Boots_Order_By>;
  Component?: InputMaybe<Components_Order_By>;
  Evse?: InputMaybe<Evses_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  VariableStatuses_aggregate?: InputMaybe<VariableStatuses_Aggregate_Order_By>;
  bootConfigId?: InputMaybe<Order_By>;
  componentId?: InputMaybe<Order_By>;
  constant?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  generatedAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  mutability?: InputMaybe<Order_By>;
  persistent?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableAttributes */
export type VariableAttributes_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableAttributes" */
export type VariableAttributes_Select_Column =
  /** column name */
  | 'bootConfigId'
  /** column name */
  | 'componentId'
  /** column name */
  | 'constant'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'generatedAt'
  /** column name */
  | 'id'
  /** column name */
  | 'mutability'
  /** column name */
  | 'persistent'
  /** column name */
  | 'stationId'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

/** select "VariableAttributes_aggregate_bool_exp_bool_and_arguments_columns" columns of table "VariableAttributes" */
export type VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  | 'constant'
  /** column name */
  | 'persistent';

/** select "VariableAttributes_aggregate_bool_exp_bool_or_arguments_columns" columns of table "VariableAttributes" */
export type VariableAttributes_Select_Column_VariableAttributes_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  | 'constant'
  /** column name */
  | 'persistent';

/** input type for updating data in table "VariableAttributes" */
export type VariableAttributes_Set_Input = {
  bootConfigId?: InputMaybe<Scalars['String']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  constant?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  generatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  mutability?: InputMaybe<Scalars['String']['input']>;
  persistent?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableAttributes_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableAttributes" */
export type VariableAttributes_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableAttributes_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableAttributes" */
export type VariableAttributes_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableAttributes_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableAttributes" */
export type VariableAttributes_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableAttributes" */
export type VariableAttributes_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableAttributes_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableAttributes_Stream_Cursor_Value_Input = {
  bootConfigId?: InputMaybe<Scalars['String']['input']>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  constant?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  evseDatabaseId?: InputMaybe<Scalars['Int']['input']>;
  generatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  mutability?: InputMaybe<Scalars['String']['input']>;
  persistent?: InputMaybe<Scalars['Boolean']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableAttributes_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  evseDatabaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableAttributes" */
export type VariableAttributes_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableAttributes" */
export type VariableAttributes_Update_Column =
  /** column name */
  | 'bootConfigId'
  /** column name */
  | 'componentId'
  /** column name */
  | 'constant'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'evseDatabaseId'
  /** column name */
  | 'generatedAt'
  /** column name */
  | 'id'
  /** column name */
  | 'mutability'
  /** column name */
  | 'persistent'
  /** column name */
  | 'stationId'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

export type VariableAttributes_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableAttributes_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableAttributes_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableAttributes_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableAttributes_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableAttributes" */
export type VariableAttributes_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableAttributes_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableAttributes" */
export type VariableAttributes_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableAttributes_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  evseDatabaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableAttributes" */
export type VariableAttributes_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  evseDatabaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableCharacteristics" */
export type VariableCharacteristics = {
  /** An object relationship */
  Variable?: Maybe<Variables>;
  createdAt: Scalars['timestamptz']['output'];
  dataType?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  supportsMonitoring?: Maybe<Scalars['Boolean']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  valuesList?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate = {
  aggregate?: Maybe<VariableCharacteristics_Aggregate_Fields>;
  nodes: Array<VariableCharacteristics>;
};

/** aggregate fields of "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate_Fields = {
  avg?: Maybe<VariableCharacteristics_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableCharacteristics_Max_Fields>;
  min?: Maybe<VariableCharacteristics_Min_Fields>;
  stddev?: Maybe<VariableCharacteristics_Stddev_Fields>;
  stddev_pop?: Maybe<VariableCharacteristics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableCharacteristics_Stddev_Samp_Fields>;
  sum?: Maybe<VariableCharacteristics_Sum_Fields>;
  var_pop?: Maybe<VariableCharacteristics_Var_Pop_Fields>;
  var_samp?: Maybe<VariableCharacteristics_Var_Samp_Fields>;
  variance?: Maybe<VariableCharacteristics_Variance_Fields>;
};

/** aggregate fields of "VariableCharacteristics" */
export type VariableCharacteristics_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type VariableCharacteristics_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "VariableCharacteristics". All fields are combined with a logical 'AND'. */
export type VariableCharacteristics_Bool_Exp = {
  Variable?: InputMaybe<Variables_Bool_Exp>;
  _and?: InputMaybe<Array<VariableCharacteristics_Bool_Exp>>;
  _not?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  _or?: InputMaybe<Array<VariableCharacteristics_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  dataType?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  maxLimit?: InputMaybe<Numeric_Comparison_Exp>;
  minLimit?: InputMaybe<Numeric_Comparison_Exp>;
  supportsMonitoring?: InputMaybe<Boolean_Comparison_Exp>;
  unit?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  valuesList?: InputMaybe<String_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableCharacteristics" */
export type VariableCharacteristics_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'VariableCharacteristics_pkey'
  /** unique or primary key constraint on columns "variableId" */
  | 'VariableCharacteristics_variableId_key';

/** input type for incrementing numeric columns in table "VariableCharacteristics" */
export type VariableCharacteristics_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableCharacteristics" */
export type VariableCharacteristics_Insert_Input = {
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  supportsMonitoring?: InputMaybe<Scalars['Boolean']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  valuesList?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableCharacteristics_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  valuesList?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type VariableCharacteristics_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  dataType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  valuesList?: Maybe<Scalars['String']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "VariableCharacteristics" */
export type VariableCharacteristics_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableCharacteristics>;
};

/** input type for inserting object relation for remote table "VariableCharacteristics" */
export type VariableCharacteristics_Obj_Rel_Insert_Input = {
  data: VariableCharacteristics_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** on_conflict condition type for table "VariableCharacteristics" */
export type VariableCharacteristics_On_Conflict = {
  constraint: VariableCharacteristics_Constraint;
  update_columns?: Array<VariableCharacteristics_Update_Column>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableCharacteristics". */
export type VariableCharacteristics_Order_By = {
  Variable?: InputMaybe<Variables_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  dataType?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  maxLimit?: InputMaybe<Order_By>;
  minLimit?: InputMaybe<Order_By>;
  supportsMonitoring?: InputMaybe<Order_By>;
  unit?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  valuesList?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableCharacteristics */
export type VariableCharacteristics_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'id'
  /** column name */
  | 'maxLimit'
  /** column name */
  | 'minLimit'
  /** column name */
  | 'supportsMonitoring'
  /** column name */
  | 'unit'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'valuesList'
  /** column name */
  | 'variableId';

/** input type for updating data in table "VariableCharacteristics" */
export type VariableCharacteristics_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  supportsMonitoring?: InputMaybe<Scalars['Boolean']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  valuesList?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableCharacteristics_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type VariableCharacteristics_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type VariableCharacteristics_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "VariableCharacteristics" */
export type VariableCharacteristics_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableCharacteristics_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableCharacteristics_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  dataType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  maxLimit?: InputMaybe<Scalars['numeric']['input']>;
  minLimit?: InputMaybe<Scalars['numeric']['input']>;
  supportsMonitoring?: InputMaybe<Scalars['Boolean']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  valuesList?: InputMaybe<Scalars['String']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableCharacteristics_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  maxLimit?: Maybe<Scalars['numeric']['output']>;
  minLimit?: Maybe<Scalars['numeric']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "VariableCharacteristics" */
export type VariableCharacteristics_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'dataType'
  /** column name */
  | 'id'
  /** column name */
  | 'maxLimit'
  /** column name */
  | 'minLimit'
  /** column name */
  | 'supportsMonitoring'
  /** column name */
  | 'unit'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'valuesList'
  /** column name */
  | 'variableId';

export type VariableCharacteristics_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableCharacteristics_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableCharacteristics_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableCharacteristics_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableCharacteristics_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type VariableCharacteristics_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type VariableCharacteristics_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  maxLimit?: Maybe<Scalars['Float']['output']>;
  minLimit?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses = {
  /** An object relationship */
  VariableMonitoring?: Maybe<VariableMonitorings>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  status?: Maybe<Scalars['String']['output']>;
  statusInfo?: Maybe<Scalars['json']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableMonitoringStatuses" */
export type VariableMonitoringStatusesStatusInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate = {
  aggregate?: Maybe<VariableMonitoringStatuses_Aggregate_Fields>;
  nodes: Array<VariableMonitoringStatuses>;
};

export type VariableMonitoringStatuses_Aggregate_Bool_Exp = {
  count?: InputMaybe<VariableMonitoringStatuses_Aggregate_Bool_Exp_Count>;
};

export type VariableMonitoringStatuses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate_Fields = {
  avg?: Maybe<VariableMonitoringStatuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableMonitoringStatuses_Max_Fields>;
  min?: Maybe<VariableMonitoringStatuses_Min_Fields>;
  stddev?: Maybe<VariableMonitoringStatuses_Stddev_Fields>;
  stddev_pop?: Maybe<VariableMonitoringStatuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableMonitoringStatuses_Stddev_Samp_Fields>;
  sum?: Maybe<VariableMonitoringStatuses_Sum_Fields>;
  var_pop?: Maybe<VariableMonitoringStatuses_Var_Pop_Fields>;
  var_samp?: Maybe<VariableMonitoringStatuses_Var_Samp_Fields>;
  variance?: Maybe<VariableMonitoringStatuses_Variance_Fields>;
};

/** aggregate fields of "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Aggregate_Order_By = {
  avg?: InputMaybe<VariableMonitoringStatuses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableMonitoringStatuses_Max_Order_By>;
  min?: InputMaybe<VariableMonitoringStatuses_Min_Order_By>;
  stddev?: InputMaybe<VariableMonitoringStatuses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableMonitoringStatuses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableMonitoringStatuses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableMonitoringStatuses_Sum_Order_By>;
  var_pop?: InputMaybe<VariableMonitoringStatuses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableMonitoringStatuses_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableMonitoringStatuses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Arr_Rel_Insert_Input = {
  data: Array<VariableMonitoringStatuses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableMonitoringStatuses_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableMonitoringStatuses_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableMonitoringStatuses". All fields are combined with a logical 'AND'. */
export type VariableMonitoringStatuses_Bool_Exp = {
  VariableMonitoring?: InputMaybe<VariableMonitorings_Bool_Exp>;
  _and?: InputMaybe<Array<VariableMonitoringStatuses_Bool_Exp>>;
  _not?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<VariableMonitoringStatuses_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  statusInfo?: InputMaybe<Json_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  variableMonitoringId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Constraint =
  /** unique or primary key constraint on columns "id" */
  'VariableMonitoringStatuses_pkey';

/** input type for incrementing numeric columns in table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Insert_Input = {
  VariableMonitoring?: InputMaybe<VariableMonitorings_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableMonitoringStatuses_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableMonitoringStatuses_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableMonitoringStatuses>;
};

/** on_conflict condition type for table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_On_Conflict = {
  constraint: VariableMonitoringStatuses_Constraint;
  update_columns?: Array<VariableMonitoringStatuses_Update_Column>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableMonitoringStatuses". */
export type VariableMonitoringStatuses_Order_By = {
  VariableMonitoring?: InputMaybe<VariableMonitorings_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  statusInfo?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableMonitoringStatuses */
export type VariableMonitoringStatuses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableMonitoringId';

/** input type for updating data in table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableMonitoringStatuses_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableMonitoringStatuses_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableMonitoringStatuses_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableMonitoringStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableMonitoringStatuses_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  variableMonitoringId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableMonitoringStatuses_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  variableMonitoringId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'variableMonitoringId';

export type VariableMonitoringStatuses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableMonitoringStatuses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableMonitoringStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableMonitoringStatuses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableMonitoringStatuses_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableMonitoringStatuses_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableMonitoringStatuses_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableMonitoringId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableMonitoringStatuses" */
export type VariableMonitoringStatuses_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  variableMonitoringId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableMonitorings" */
export type VariableMonitorings = {
  /** An object relationship */
  Component?: Maybe<Components>;
  /** An object relationship */
  Variable?: Maybe<Variables>;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  databaseId: Scalars['Int']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  transaction?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableMonitorings" */
export type VariableMonitoringsVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** columns and relationships of "VariableMonitorings" */
export type VariableMonitoringsVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

/** aggregated selection of "VariableMonitorings" */
export type VariableMonitorings_Aggregate = {
  aggregate?: Maybe<VariableMonitorings_Aggregate_Fields>;
  nodes: Array<VariableMonitorings>;
};

export type VariableMonitorings_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp_Count>;
};

export type VariableMonitorings_Aggregate_Bool_Exp_Bool_And = {
  arguments: VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitorings_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableMonitorings_Aggregate_Bool_Exp_Bool_Or = {
  arguments: VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitorings_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type VariableMonitorings_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableMonitorings_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableMonitorings" */
export type VariableMonitorings_Aggregate_Fields = {
  avg?: Maybe<VariableMonitorings_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableMonitorings_Max_Fields>;
  min?: Maybe<VariableMonitorings_Min_Fields>;
  stddev?: Maybe<VariableMonitorings_Stddev_Fields>;
  stddev_pop?: Maybe<VariableMonitorings_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableMonitorings_Stddev_Samp_Fields>;
  sum?: Maybe<VariableMonitorings_Sum_Fields>;
  var_pop?: Maybe<VariableMonitorings_Var_Pop_Fields>;
  var_samp?: Maybe<VariableMonitorings_Var_Samp_Fields>;
  variance?: Maybe<VariableMonitorings_Variance_Fields>;
};

/** aggregate fields of "VariableMonitorings" */
export type VariableMonitorings_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableMonitorings" */
export type VariableMonitorings_Aggregate_Order_By = {
  avg?: InputMaybe<VariableMonitorings_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableMonitorings_Max_Order_By>;
  min?: InputMaybe<VariableMonitorings_Min_Order_By>;
  stddev?: InputMaybe<VariableMonitorings_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableMonitorings_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableMonitorings_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableMonitorings_Sum_Order_By>;
  var_pop?: InputMaybe<VariableMonitorings_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableMonitorings_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableMonitorings_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableMonitorings" */
export type VariableMonitorings_Arr_Rel_Insert_Input = {
  data: Array<VariableMonitorings_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableMonitorings_Avg_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Avg_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableMonitorings". All fields are combined with a logical 'AND'. */
export type VariableMonitorings_Bool_Exp = {
  Component?: InputMaybe<Components_Bool_Exp>;
  Variable?: InputMaybe<Variables_Bool_Exp>;
  VariableMonitoringStatuses?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
  VariableMonitoringStatuses_aggregate?: InputMaybe<VariableMonitoringStatuses_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<VariableMonitorings_Bool_Exp>>;
  _not?: InputMaybe<VariableMonitorings_Bool_Exp>;
  _or?: InputMaybe<Array<VariableMonitorings_Bool_Exp>>;
  componentId?: InputMaybe<Int_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  databaseId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  severity?: InputMaybe<Int_Comparison_Exp>;
  stationId?: InputMaybe<String_Comparison_Exp>;
  transaction?: InputMaybe<Boolean_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<Int_Comparison_Exp>;
  variableId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableMonitorings" */
export type VariableMonitorings_Constraint =
  /** unique or primary key constraint on columns "databaseId" */
  | 'VariableMonitorings_pkey'
  /** unique or primary key constraint on columns "id", "stationId" */
  | 'VariableMonitorings_stationId_id_key';

/** input type for incrementing numeric columns in table "VariableMonitorings" */
export type VariableMonitorings_Inc_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableMonitorings" */
export type VariableMonitorings_Insert_Input = {
  Component?: InputMaybe<Components_Obj_Rel_Insert_Input>;
  Variable?: InputMaybe<Variables_Obj_Rel_Insert_Input>;
  VariableMonitoringStatuses?: InputMaybe<VariableMonitoringStatuses_Arr_Rel_Insert_Input>;
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transaction?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableMonitorings_Max_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Max_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableMonitorings_Min_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  stationId?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Min_Order_By = {
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableMonitorings" */
export type VariableMonitorings_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableMonitorings>;
};

/** input type for inserting object relation for remote table "VariableMonitorings" */
export type VariableMonitorings_Obj_Rel_Insert_Input = {
  data: VariableMonitorings_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** on_conflict condition type for table "VariableMonitorings" */
export type VariableMonitorings_On_Conflict = {
  constraint: VariableMonitorings_Constraint;
  update_columns?: Array<VariableMonitorings_Update_Column>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableMonitorings". */
export type VariableMonitorings_Order_By = {
  Component?: InputMaybe<Components_Order_By>;
  Variable?: InputMaybe<Variables_Order_By>;
  VariableMonitoringStatuses_aggregate?: InputMaybe<VariableMonitoringStatuses_Aggregate_Order_By>;
  componentId?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  stationId?: InputMaybe<Order_By>;
  transaction?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableMonitorings */
export type VariableMonitorings_Pk_Columns_Input = {
  databaseId: Scalars['Int']['input'];
};

/** select columns of table "VariableMonitorings" */
export type VariableMonitorings_Select_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'severity'
  /** column name */
  | 'stationId'
  /** column name */
  | 'transaction'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

/** select "VariableMonitorings_aggregate_bool_exp_bool_and_arguments_columns" columns of table "VariableMonitorings" */
export type VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_And_Arguments_Columns =
  /** column name */
  'transaction';

/** select "VariableMonitorings_aggregate_bool_exp_bool_or_arguments_columns" columns of table "VariableMonitorings" */
export type VariableMonitorings_Select_Column_VariableMonitorings_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns =
  /** column name */
  'transaction';

/** input type for updating data in table "VariableMonitorings" */
export type VariableMonitorings_Set_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transaction?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableMonitorings_Stddev_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Stddev_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableMonitorings_Stddev_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Stddev_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableMonitorings_Stddev_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Stddev_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableMonitorings" */
export type VariableMonitorings_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableMonitorings_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableMonitorings_Stream_Cursor_Value_Input = {
  componentId?: InputMaybe<Scalars['Int']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  databaseId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  severity?: InputMaybe<Scalars['Int']['input']>;
  stationId?: InputMaybe<Scalars['String']['input']>;
  transaction?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
  variableId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableMonitorings_Sum_Fields = {
  componentId?: Maybe<Scalars['Int']['output']>;
  databaseId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  severity?: Maybe<Scalars['Int']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
  variableId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Sum_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableMonitorings" */
export type VariableMonitorings_Update_Column =
  /** column name */
  | 'componentId'
  /** column name */
  | 'createdAt'
  /** column name */
  | 'databaseId'
  /** column name */
  | 'id'
  /** column name */
  | 'severity'
  /** column name */
  | 'stationId'
  /** column name */
  | 'transaction'
  /** column name */
  | 'type'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableId';

export type VariableMonitorings_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableMonitorings_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableMonitorings_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableMonitorings_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableMonitorings_Var_Pop_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Var_Pop_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableMonitorings_Var_Samp_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Var_Samp_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableMonitorings_Variance_Fields = {
  componentId?: Maybe<Scalars['Float']['output']>;
  databaseId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severity?: Maybe<Scalars['Float']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
  variableId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableMonitorings" */
export type VariableMonitorings_Variance_Order_By = {
  componentId?: InputMaybe<Order_By>;
  databaseId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severity?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableId?: InputMaybe<Order_By>;
};

/** columns and relationships of "VariableStatuses" */
export type VariableStatuses = {
  /** An object relationship */
  VariableAttribute?: Maybe<VariableAttributes>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  status?: Maybe<Scalars['String']['output']>;
  statusInfo?: Maybe<Scalars['json']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  value?: Maybe<Scalars['String']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "VariableStatuses" */
export type VariableStatusesStatusInfoArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "VariableStatuses" */
export type VariableStatuses_Aggregate = {
  aggregate?: Maybe<VariableStatuses_Aggregate_Fields>;
  nodes: Array<VariableStatuses>;
};

export type VariableStatuses_Aggregate_Bool_Exp = {
  count?: InputMaybe<VariableStatuses_Aggregate_Bool_Exp_Count>;
};

export type VariableStatuses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VariableStatuses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VariableStatuses" */
export type VariableStatuses_Aggregate_Fields = {
  avg?: Maybe<VariableStatuses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VariableStatuses_Max_Fields>;
  min?: Maybe<VariableStatuses_Min_Fields>;
  stddev?: Maybe<VariableStatuses_Stddev_Fields>;
  stddev_pop?: Maybe<VariableStatuses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VariableStatuses_Stddev_Samp_Fields>;
  sum?: Maybe<VariableStatuses_Sum_Fields>;
  var_pop?: Maybe<VariableStatuses_Var_Pop_Fields>;
  var_samp?: Maybe<VariableStatuses_Var_Samp_Fields>;
  variance?: Maybe<VariableStatuses_Variance_Fields>;
};

/** aggregate fields of "VariableStatuses" */
export type VariableStatuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VariableStatuses" */
export type VariableStatuses_Aggregate_Order_By = {
  avg?: InputMaybe<VariableStatuses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VariableStatuses_Max_Order_By>;
  min?: InputMaybe<VariableStatuses_Min_Order_By>;
  stddev?: InputMaybe<VariableStatuses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VariableStatuses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VariableStatuses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VariableStatuses_Sum_Order_By>;
  var_pop?: InputMaybe<VariableStatuses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VariableStatuses_Var_Samp_Order_By>;
  variance?: InputMaybe<VariableStatuses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VariableStatuses" */
export type VariableStatuses_Arr_Rel_Insert_Input = {
  data: Array<VariableStatuses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VariableStatuses_On_Conflict>;
};

/** aggregate avg on columns */
export type VariableStatuses_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VariableStatuses" */
export type VariableStatuses_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VariableStatuses". All fields are combined with a logical 'AND'. */
export type VariableStatuses_Bool_Exp = {
  VariableAttribute?: InputMaybe<VariableAttributes_Bool_Exp>;
  _and?: InputMaybe<Array<VariableStatuses_Bool_Exp>>;
  _not?: InputMaybe<VariableStatuses_Bool_Exp>;
  _or?: InputMaybe<Array<VariableStatuses_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  statusInfo?: InputMaybe<Json_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
  variableAttributeId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VariableStatuses" */
export type VariableStatuses_Constraint =
  /** unique or primary key constraint on columns "id" */
  'VariableStatuses_pkey';

/** input type for incrementing numeric columns in table "VariableStatuses" */
export type VariableStatuses_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VariableStatuses" */
export type VariableStatuses_Insert_Input = {
  VariableAttribute?: InputMaybe<VariableAttributes_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VariableStatuses_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VariableStatuses" */
export type VariableStatuses_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VariableStatuses_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  value?: Maybe<Scalars['String']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VariableStatuses" */
export type VariableStatuses_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VariableStatuses" */
export type VariableStatuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VariableStatuses>;
};

/** on_conflict condition type for table "VariableStatuses" */
export type VariableStatuses_On_Conflict = {
  constraint: VariableStatuses_Constraint;
  update_columns?: Array<VariableStatuses_Update_Column>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

/** Ordering options when selecting data from "VariableStatuses". */
export type VariableStatuses_Order_By = {
  VariableAttribute?: InputMaybe<VariableAttributes_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  statusInfo?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VariableStatuses */
export type VariableStatuses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VariableStatuses" */
export type VariableStatuses_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableAttributeId';

/** input type for updating data in table "VariableStatuses" */
export type VariableStatuses_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VariableStatuses_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VariableStatuses" */
export type VariableStatuses_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VariableStatuses_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VariableStatuses" */
export type VariableStatuses_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VariableStatuses_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VariableStatuses" */
export type VariableStatuses_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VariableStatuses" */
export type VariableStatuses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VariableStatuses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VariableStatuses_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  statusInfo?: InputMaybe<Scalars['json']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
  variableAttributeId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VariableStatuses_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  variableAttributeId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VariableStatuses" */
export type VariableStatuses_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** update columns of table "VariableStatuses" */
export type VariableStatuses_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'status'
  /** column name */
  | 'statusInfo'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'value'
  /** column name */
  | 'variableAttributeId';

export type VariableStatuses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VariableStatuses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VariableStatuses_Set_Input>;
  /** filter the rows which have to be updated */
  where: VariableStatuses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VariableStatuses_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VariableStatuses" */
export type VariableStatuses_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VariableStatuses_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VariableStatuses" */
export type VariableStatuses_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VariableStatuses_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  variableAttributeId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VariableStatuses" */
export type VariableStatuses_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  variableAttributeId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Variables" */
export type Variables = {
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** An object relationship */
  VariableCharacteristic?: Maybe<VariableCharacteristics>;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
};

/** columns and relationships of "Variables" */
export type VariablesComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** columns and relationships of "Variables" */
export type VariablesVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

/** aggregated selection of "Variables" */
export type Variables_Aggregate = {
  aggregate?: Maybe<Variables_Aggregate_Fields>;
  nodes: Array<Variables>;
};

/** aggregate fields of "Variables" */
export type Variables_Aggregate_Fields = {
  avg?: Maybe<Variables_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Variables_Max_Fields>;
  min?: Maybe<Variables_Min_Fields>;
  stddev?: Maybe<Variables_Stddev_Fields>;
  stddev_pop?: Maybe<Variables_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Variables_Stddev_Samp_Fields>;
  sum?: Maybe<Variables_Sum_Fields>;
  var_pop?: Maybe<Variables_Var_Pop_Fields>;
  var_samp?: Maybe<Variables_Var_Samp_Fields>;
  variance?: Maybe<Variables_Variance_Fields>;
};

/** aggregate fields of "Variables" */
export type Variables_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Variables_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Variables_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Variables". All fields are combined with a logical 'AND'. */
export type Variables_Bool_Exp = {
  ComponentVariables?: InputMaybe<ComponentVariables_Bool_Exp>;
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Bool_Exp>;
  EventData?: InputMaybe<EventData_Bool_Exp>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Bool_Exp>;
  VariableAttributes?: InputMaybe<VariableAttributes_Bool_Exp>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Bool_Exp>;
  VariableCharacteristic?: InputMaybe<VariableCharacteristics_Bool_Exp>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Bool_Exp>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Variables_Bool_Exp>>;
  _not?: InputMaybe<Variables_Bool_Exp>;
  _or?: InputMaybe<Array<Variables_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  instance?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Variables" */
export type Variables_Constraint =
  /** unique or primary key constraint on columns "instance", "name" */
  | 'Variables_name_instance_key'
  /** unique or primary key constraint on columns "id" */
  | 'Variables_pkey';

/** input type for incrementing numeric columns in table "Variables" */
export type Variables_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Variables" */
export type Variables_Insert_Input = {
  ComponentVariables?: InputMaybe<ComponentVariables_Arr_Rel_Insert_Input>;
  EventData?: InputMaybe<EventData_Arr_Rel_Insert_Input>;
  VariableAttributes?: InputMaybe<VariableAttributes_Arr_Rel_Insert_Input>;
  VariableCharacteristic?: InputMaybe<VariableCharacteristics_Obj_Rel_Insert_Input>;
  VariableMonitorings?: InputMaybe<VariableMonitorings_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Variables_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Variables_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  instance?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "Variables" */
export type Variables_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Variables>;
};

/** input type for inserting object relation for remote table "Variables" */
export type Variables_Obj_Rel_Insert_Input = {
  data: Variables_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** on_conflict condition type for table "Variables" */
export type Variables_On_Conflict = {
  constraint: Variables_Constraint;
  update_columns?: Array<Variables_Update_Column>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

/** Ordering options when selecting data from "Variables". */
export type Variables_Order_By = {
  ComponentVariables_aggregate?: InputMaybe<ComponentVariables_Aggregate_Order_By>;
  EventData_aggregate?: InputMaybe<EventData_Aggregate_Order_By>;
  VariableAttributes_aggregate?: InputMaybe<VariableAttributes_Aggregate_Order_By>;
  VariableCharacteristic?: InputMaybe<VariableCharacteristics_Order_By>;
  VariableMonitorings_aggregate?: InputMaybe<VariableMonitorings_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  instance?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Variables */
export type Variables_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Variables" */
export type Variables_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt';

/** input type for updating data in table "Variables" */
export type Variables_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Variables_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Variables_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Variables_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Variables" */
export type Variables_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Variables_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Variables_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  instance?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Variables_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Variables" */
export type Variables_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'instance'
  /** column name */
  | 'name'
  /** column name */
  | 'updatedAt';

export type Variables_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Variables_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Variables_Set_Input>;
  /** filter the rows which have to be updated */
  where: Variables_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Variables_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Variables_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Variables_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "VersionEndpoints" */
export type VersionEndpoints = {
  /** An object relationship */
  Version?: Maybe<Versions>;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  identifier?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
  versionId?: Maybe<Scalars['Int']['output']>;
};

/** aggregated selection of "VersionEndpoints" */
export type VersionEndpoints_Aggregate = {
  aggregate?: Maybe<VersionEndpoints_Aggregate_Fields>;
  nodes: Array<VersionEndpoints>;
};

export type VersionEndpoints_Aggregate_Bool_Exp = {
  count?: InputMaybe<VersionEndpoints_Aggregate_Bool_Exp_Count>;
};

export type VersionEndpoints_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<VersionEndpoints_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "VersionEndpoints" */
export type VersionEndpoints_Aggregate_Fields = {
  avg?: Maybe<VersionEndpoints_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<VersionEndpoints_Max_Fields>;
  min?: Maybe<VersionEndpoints_Min_Fields>;
  stddev?: Maybe<VersionEndpoints_Stddev_Fields>;
  stddev_pop?: Maybe<VersionEndpoints_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VersionEndpoints_Stddev_Samp_Fields>;
  sum?: Maybe<VersionEndpoints_Sum_Fields>;
  var_pop?: Maybe<VersionEndpoints_Var_Pop_Fields>;
  var_samp?: Maybe<VersionEndpoints_Var_Samp_Fields>;
  variance?: Maybe<VersionEndpoints_Variance_Fields>;
};

/** aggregate fields of "VersionEndpoints" */
export type VersionEndpoints_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "VersionEndpoints" */
export type VersionEndpoints_Aggregate_Order_By = {
  avg?: InputMaybe<VersionEndpoints_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<VersionEndpoints_Max_Order_By>;
  min?: InputMaybe<VersionEndpoints_Min_Order_By>;
  stddev?: InputMaybe<VersionEndpoints_Stddev_Order_By>;
  stddev_pop?: InputMaybe<VersionEndpoints_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<VersionEndpoints_Stddev_Samp_Order_By>;
  sum?: InputMaybe<VersionEndpoints_Sum_Order_By>;
  var_pop?: InputMaybe<VersionEndpoints_Var_Pop_Order_By>;
  var_samp?: InputMaybe<VersionEndpoints_Var_Samp_Order_By>;
  variance?: InputMaybe<VersionEndpoints_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "VersionEndpoints" */
export type VersionEndpoints_Arr_Rel_Insert_Input = {
  data: Array<VersionEndpoints_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<VersionEndpoints_On_Conflict>;
};

/** aggregate avg on columns */
export type VersionEndpoints_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VersionEndpoints". All fields are combined with a logical 'AND'. */
export type VersionEndpoints_Bool_Exp = {
  Version?: InputMaybe<Versions_Bool_Exp>;
  _and?: InputMaybe<Array<VersionEndpoints_Bool_Exp>>;
  _not?: InputMaybe<VersionEndpoints_Bool_Exp>;
  _or?: InputMaybe<Array<VersionEndpoints_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  identifier?: InputMaybe<String_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  versionId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "VersionEndpoints" */
export type VersionEndpoints_Constraint =
  /** unique or primary key constraint on columns "id" */
  'VersionEndpoints_pkey';

/** input type for incrementing numeric columns in table "VersionEndpoints" */
export type VersionEndpoints_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  versionId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "VersionEndpoints" */
export type VersionEndpoints_Insert_Input = {
  Version?: InputMaybe<Versions_Obj_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  versionId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type VersionEndpoints_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  versionId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Max_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifier?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type VersionEndpoints_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  versionId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Min_Order_By = {
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifier?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "VersionEndpoints" */
export type VersionEndpoints_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<VersionEndpoints>;
};

/** on_conflict condition type for table "VersionEndpoints" */
export type VersionEndpoints_On_Conflict = {
  constraint: VersionEndpoints_Constraint;
  update_columns?: Array<VersionEndpoints_Update_Column>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

/** Ordering options when selecting data from "VersionEndpoints". */
export type VersionEndpoints_Order_By = {
  Version?: InputMaybe<Versions_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  identifier?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: VersionEndpoints */
export type VersionEndpoints_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "VersionEndpoints" */
export type VersionEndpoints_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'identifier'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'versionId';

/** input type for updating data in table "VersionEndpoints" */
export type VersionEndpoints_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  versionId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type VersionEndpoints_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VersionEndpoints_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VersionEndpoints_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "VersionEndpoints" */
export type VersionEndpoints_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: VersionEndpoints_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type VersionEndpoints_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  identifier?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  versionId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type VersionEndpoints_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  versionId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** update columns of table "VersionEndpoints" */
export type VersionEndpoints_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'identifier'
  /** column name */
  | 'role'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'versionId';

export type VersionEndpoints_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<VersionEndpoints_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<VersionEndpoints_Set_Input>;
  /** filter the rows which have to be updated */
  where: VersionEndpoints_Bool_Exp;
};

/** aggregate var_pop on columns */
export type VersionEndpoints_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VersionEndpoints_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type VersionEndpoints_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  versionId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "VersionEndpoints" */
export type VersionEndpoints_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  versionId?: InputMaybe<Order_By>;
};

/** columns and relationships of "Versions" */
export type Versions = {
  /** An array relationship */
  VersionEndpoints: Array<VersionEndpoints>;
  /** An aggregate relationship */
  VersionEndpoints_aggregate: VersionEndpoints_Aggregate;
  createdAt: Scalars['timestamptz']['output'];
  id: Scalars['Int']['output'];
  updatedAt: Scalars['timestamptz']['output'];
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_Versions_version']['output']>;
};

/** columns and relationships of "Versions" */
export type VersionsVersionEndpointsArgs = {
  distinct_on?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VersionEndpoints_Order_By>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

/** columns and relationships of "Versions" */
export type VersionsVersionEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VersionEndpoints_Order_By>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

/** aggregated selection of "Versions" */
export type Versions_Aggregate = {
  aggregate?: Maybe<Versions_Aggregate_Fields>;
  nodes: Array<Versions>;
};

/** aggregate fields of "Versions" */
export type Versions_Aggregate_Fields = {
  avg?: Maybe<Versions_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Versions_Max_Fields>;
  min?: Maybe<Versions_Min_Fields>;
  stddev?: Maybe<Versions_Stddev_Fields>;
  stddev_pop?: Maybe<Versions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Versions_Stddev_Samp_Fields>;
  sum?: Maybe<Versions_Sum_Fields>;
  var_pop?: Maybe<Versions_Var_Pop_Fields>;
  var_samp?: Maybe<Versions_Var_Samp_Fields>;
  variance?: Maybe<Versions_Variance_Fields>;
};

/** aggregate fields of "Versions" */
export type Versions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Versions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Versions_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "Versions". All fields are combined with a logical 'AND'. */
export type Versions_Bool_Exp = {
  VersionEndpoints?: InputMaybe<VersionEndpoints_Bool_Exp>;
  VersionEndpoints_aggregate?: InputMaybe<VersionEndpoints_Aggregate_Bool_Exp>;
  _and?: InputMaybe<Array<Versions_Bool_Exp>>;
  _not?: InputMaybe<Versions_Bool_Exp>;
  _or?: InputMaybe<Array<Versions_Bool_Exp>>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  url?: InputMaybe<String_Comparison_Exp>;
  version?: InputMaybe<Enum_Versions_Version_Comparison_Exp>;
};

/** unique or primary key constraints on table "Versions" */
export type Versions_Constraint =
  /** unique or primary key constraint on columns "id" */
  'Versions_pkey';

/** input type for incrementing numeric columns in table "Versions" */
export type Versions_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "Versions" */
export type Versions_Insert_Input = {
  VersionEndpoints?: InputMaybe<VersionEndpoints_Arr_Rel_Insert_Input>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_Versions_version']['input']>;
};

/** aggregate max on columns */
export type Versions_Max_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_Versions_version']['output']>;
};

/** aggregate min on columns */
export type Versions_Min_Fields = {
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['timestamptz']['output']>;
  url?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['enum_Versions_version']['output']>;
};

/** response of any mutation on the table "Versions" */
export type Versions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Versions>;
};

/** input type for inserting object relation for remote table "Versions" */
export type Versions_Obj_Rel_Insert_Input = {
  data: Versions_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Versions_On_Conflict>;
};

/** on_conflict condition type for table "Versions" */
export type Versions_On_Conflict = {
  constraint: Versions_Constraint;
  update_columns?: Array<Versions_Update_Column>;
  where?: InputMaybe<Versions_Bool_Exp>;
};

/** Ordering options when selecting data from "Versions". */
export type Versions_Order_By = {
  VersionEndpoints_aggregate?: InputMaybe<VersionEndpoints_Aggregate_Order_By>;
  createdAt?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updatedAt?: InputMaybe<Order_By>;
  url?: InputMaybe<Order_By>;
  version?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Versions */
export type Versions_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "Versions" */
export type Versions_Select_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'version';

/** input type for updating data in table "Versions" */
export type Versions_Set_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_Versions_version']['input']>;
};

/** aggregate stddev on columns */
export type Versions_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Versions_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Versions_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "Versions" */
export type Versions_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Versions_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Versions_Stream_Cursor_Value_Input = {
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['timestamptz']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['enum_Versions_version']['input']>;
};

/** aggregate sum on columns */
export type Versions_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "Versions" */
export type Versions_Update_Column =
  /** column name */
  | 'createdAt'
  /** column name */
  | 'id'
  /** column name */
  | 'updatedAt'
  /** column name */
  | 'url'
  /** column name */
  | 'version';

export type Versions_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Versions_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Versions_Set_Input>;
  /** filter the rows which have to be updated */
  where: Versions_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Versions_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Versions_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Versions_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

/** Boolean expression to compare columns of type "bpchar". All fields are combined with logical 'AND'. */
export type Bpchar_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bpchar']['input']>;
  _gt?: InputMaybe<Scalars['bpchar']['input']>;
  _gte?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['bpchar']['input']>;
  _in?: InputMaybe<Array<Scalars['bpchar']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['bpchar']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['bpchar']['input']>;
  _lt?: InputMaybe<Scalars['bpchar']['input']>;
  _lte?: InputMaybe<Scalars['bpchar']['input']>;
  _neq?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['bpchar']['input']>;
  _nin?: InputMaybe<Array<Scalars['bpchar']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['bpchar']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['bpchar']['input']>;
};

/** ordering argument of a cursor */
export type Cursor_Ordering =
  /** ascending ordering of the cursor */
  | 'ASC'
  /** descending ordering of the cursor */
  | 'DESC';

/** Boolean expression to compare columns of type "enum_AsyncJobStatuses_jobName". All fields are combined with logical 'AND'. */
export type Enum_AsyncJobStatuses_JobName_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  _gt?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  _gte?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_AsyncJobStatuses_jobName']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  _lte?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  _neq?: InputMaybe<Scalars['enum_AsyncJobStatuses_jobName']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_AsyncJobStatuses_jobName']['input']>>;
};

/** Boolean expression to compare columns of type "enum_ClientCredentialsRoles_role". All fields are combined with logical 'AND'. */
export type Enum_ClientCredentialsRoles_Role_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  _gt?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  _gte?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_ClientCredentialsRoles_role']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  _lte?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  _neq?: InputMaybe<Scalars['enum_ClientCredentialsRoles_role']['input']>;
  _nin?: InputMaybe<
    Array<Scalars['enum_ClientCredentialsRoles_role']['input']>
  >;
};

/** Boolean expression to compare columns of type "enum_ClientVersions_version". All fields are combined with logical 'AND'. */
export type Enum_ClientVersions_Version_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
  _gt?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
  _gte?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_ClientVersions_version']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
  _lte?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
  _neq?: InputMaybe<Scalars['enum_ClientVersions_version']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_ClientVersions_version']['input']>>;
};

/** Boolean expression to compare columns of type "enum_Images_category". All fields are combined with logical 'AND'. */
export type Enum_Images_Category_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_Images_category']['input']>;
  _gt?: InputMaybe<Scalars['enum_Images_category']['input']>;
  _gte?: InputMaybe<Scalars['enum_Images_category']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_Images_category']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_Images_category']['input']>;
  _lte?: InputMaybe<Scalars['enum_Images_category']['input']>;
  _neq?: InputMaybe<Scalars['enum_Images_category']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_Images_category']['input']>>;
};

/** Boolean expression to compare columns of type "enum_Images_type". All fields are combined with logical 'AND'. */
export type Enum_Images_Type_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_Images_type']['input']>;
  _gt?: InputMaybe<Scalars['enum_Images_type']['input']>;
  _gte?: InputMaybe<Scalars['enum_Images_type']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_Images_type']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_Images_type']['input']>;
  _lte?: InputMaybe<Scalars['enum_Images_type']['input']>;
  _neq?: InputMaybe<Scalars['enum_Images_type']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_Images_type']['input']>>;
};

/** Boolean expression to compare columns of type "enum_OcpiReservations_countryCode". All fields are combined with logical 'AND'. */
export type Enum_OcpiReservations_CountryCode_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_OcpiReservations_countryCode']['input']>;
  _gt?: InputMaybe<Scalars['enum_OcpiReservations_countryCode']['input']>;
  _gte?: InputMaybe<Scalars['enum_OcpiReservations_countryCode']['input']>;
  _in?: InputMaybe<
    Array<Scalars['enum_OcpiReservations_countryCode']['input']>
  >;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_OcpiReservations_countryCode']['input']>;
  _lte?: InputMaybe<Scalars['enum_OcpiReservations_countryCode']['input']>;
  _neq?: InputMaybe<Scalars['enum_OcpiReservations_countryCode']['input']>;
  _nin?: InputMaybe<
    Array<Scalars['enum_OcpiReservations_countryCode']['input']>
  >;
};

/** Boolean expression to compare columns of type "enum_ServerCredentialsRoles_role". All fields are combined with logical 'AND'. */
export type Enum_ServerCredentialsRoles_Role_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  _gt?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  _gte?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_ServerCredentialsRoles_role']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  _lte?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  _neq?: InputMaybe<Scalars['enum_ServerCredentialsRoles_role']['input']>;
  _nin?: InputMaybe<
    Array<Scalars['enum_ServerCredentialsRoles_role']['input']>
  >;
};

/** Boolean expression to compare columns of type "enum_ServerVersions_version". All fields are combined with logical 'AND'. */
export type Enum_ServerVersions_Version_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
  _gt?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
  _gte?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_ServerVersions_version']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
  _lte?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
  _neq?: InputMaybe<Scalars['enum_ServerVersions_version']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_ServerVersions_version']['input']>>;
};

/** Boolean expression to compare columns of type "enum_Versions_version". All fields are combined with logical 'AND'. */
export type Enum_Versions_Version_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['enum_Versions_version']['input']>;
  _gt?: InputMaybe<Scalars['enum_Versions_version']['input']>;
  _gte?: InputMaybe<Scalars['enum_Versions_version']['input']>;
  _in?: InputMaybe<Array<Scalars['enum_Versions_version']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['enum_Versions_version']['input']>;
  _lte?: InputMaybe<Scalars['enum_Versions_version']['input']>;
  _neq?: InputMaybe<Scalars['enum_Versions_version']['input']>;
  _nin?: InputMaybe<Array<Scalars['enum_Versions_version']['input']>>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['float8']['input']>;
  _gt?: InputMaybe<Scalars['float8']['input']>;
  _gte?: InputMaybe<Scalars['float8']['input']>;
  _in?: InputMaybe<Array<Scalars['float8']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['float8']['input']>;
  _lte?: InputMaybe<Scalars['float8']['input']>;
  _neq?: InputMaybe<Scalars['float8']['input']>;
  _nin?: InputMaybe<Array<Scalars['float8']['input']>>;
};

export type Geography_Cast_Exp = {
  geometry?: InputMaybe<Geometry_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
export type Geography_Comparison_Exp = {
  _cast?: InputMaybe<Geography_Cast_Exp>;
  _eq?: InputMaybe<Scalars['geography']['input']>;
  _gt?: InputMaybe<Scalars['geography']['input']>;
  _gte?: InputMaybe<Scalars['geography']['input']>;
  _in?: InputMaybe<Array<Scalars['geography']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['geography']['input']>;
  _lte?: InputMaybe<Scalars['geography']['input']>;
  _neq?: InputMaybe<Scalars['geography']['input']>;
  _nin?: InputMaybe<Array<Scalars['geography']['input']>>;
  /** is the column within a given distance from the given geography value */
  _st_d_within?: InputMaybe<St_D_Within_Geography_Input>;
  /** does the column spatially intersect the given geography value */
  _st_intersects?: InputMaybe<Scalars['geography']['input']>;
};

export type Geometry_Cast_Exp = {
  geography?: InputMaybe<Geography_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
export type Geometry_Comparison_Exp = {
  _cast?: InputMaybe<Geometry_Cast_Exp>;
  _eq?: InputMaybe<Scalars['geometry']['input']>;
  _gt?: InputMaybe<Scalars['geometry']['input']>;
  _gte?: InputMaybe<Scalars['geometry']['input']>;
  _in?: InputMaybe<Array<Scalars['geometry']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['geometry']['input']>;
  _lte?: InputMaybe<Scalars['geometry']['input']>;
  _neq?: InputMaybe<Scalars['geometry']['input']>;
  _nin?: InputMaybe<Array<Scalars['geometry']['input']>>;
  /** is the column within a given 3D distance from the given geometry value */
  _st_3d_d_within?: InputMaybe<St_D_Within_Input>;
  /** does the column spatially intersect the given geometry value in 3D */
  _st_3d_intersects?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column contain the given geometry value */
  _st_contains?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column cross the given geometry value */
  _st_crosses?: InputMaybe<Scalars['geometry']['input']>;
  /** is the column within a given distance from the given geometry value */
  _st_d_within?: InputMaybe<St_D_Within_Input>;
  /** is the column equal to given geometry value (directionality is ignored) */
  _st_equals?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column spatially intersect the given geometry value */
  _st_intersects?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
  _st_overlaps?: InputMaybe<Scalars['geometry']['input']>;
  /** does the column have atleast one point in common with the given geometry value */
  _st_touches?: InputMaybe<Scalars['geometry']['input']>;
  /** is the column contained in the given geometry value */
  _st_within?: InputMaybe<Scalars['geometry']['input']>;
};

/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['json']['input']>;
  _gt?: InputMaybe<Scalars['json']['input']>;
  _gte?: InputMaybe<Scalars['json']['input']>;
  _in?: InputMaybe<Array<Scalars['json']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['json']['input']>;
  _lte?: InputMaybe<Scalars['json']['input']>;
  _neq?: InputMaybe<Scalars['json']['input']>;
  _nin?: InputMaybe<Array<Scalars['json']['input']>>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** mutation root */
export type Mutation_Root = {
  /** delete data from the table: "AdditionalInfos" */
  delete_AdditionalInfos?: Maybe<AdditionalInfos_Mutation_Response>;
  /** delete single row from the table: "AdditionalInfos" */
  delete_AdditionalInfos_by_pk?: Maybe<AdditionalInfos>;
  /** delete data from the table: "AsyncJobStatuses" */
  delete_AsyncJobStatuses?: Maybe<AsyncJobStatuses_Mutation_Response>;
  /** delete single row from the table: "AsyncJobStatuses" */
  delete_AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** delete data from the table: "Authorizations" */
  delete_Authorizations?: Maybe<Authorizations_Mutation_Response>;
  /** delete single row from the table: "Authorizations" */
  delete_Authorizations_by_pk?: Maybe<Authorizations>;
  /** delete data from the table: "Boots" */
  delete_Boots?: Maybe<Boots_Mutation_Response>;
  /** delete single row from the table: "Boots" */
  delete_Boots_by_pk?: Maybe<Boots>;
  /** delete data from the table: "BusinessDetails" */
  delete_BusinessDetails?: Maybe<BusinessDetails_Mutation_Response>;
  /** delete single row from the table: "BusinessDetails" */
  delete_BusinessDetails_by_pk?: Maybe<BusinessDetails>;
  /** delete data from the table: "CallMessages" */
  delete_CallMessages?: Maybe<CallMessages_Mutation_Response>;
  /** delete single row from the table: "CallMessages" */
  delete_CallMessages_by_pk?: Maybe<CallMessages>;
  /** delete data from the table: "Certificates" */
  delete_Certificates?: Maybe<Certificates_Mutation_Response>;
  /** delete single row from the table: "Certificates" */
  delete_Certificates_by_pk?: Maybe<Certificates>;
  /** delete data from the table: "ChargingNeeds" */
  delete_ChargingNeeds?: Maybe<ChargingNeeds_Mutation_Response>;
  /** delete single row from the table: "ChargingNeeds" */
  delete_ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** delete data from the table: "ChargingProfiles" */
  delete_ChargingProfiles?: Maybe<ChargingProfiles_Mutation_Response>;
  /** delete single row from the table: "ChargingProfiles" */
  delete_ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** delete data from the table: "ChargingSchedules" */
  delete_ChargingSchedules?: Maybe<ChargingSchedules_Mutation_Response>;
  /** delete single row from the table: "ChargingSchedules" */
  delete_ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** delete data from the table: "ChargingStationSecurityInfos" */
  delete_ChargingStationSecurityInfos?: Maybe<ChargingStationSecurityInfos_Mutation_Response>;
  /** delete single row from the table: "ChargingStationSecurityInfos" */
  delete_ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** delete data from the table: "ChargingStations" */
  delete_ChargingStations?: Maybe<ChargingStations_Mutation_Response>;
  /** delete single row from the table: "ChargingStations" */
  delete_ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** delete data from the table: "ClientCredentialsRoles" */
  delete_ClientCredentialsRoles?: Maybe<ClientCredentialsRoles_Mutation_Response>;
  /** delete single row from the table: "ClientCredentialsRoles" */
  delete_ClientCredentialsRoles_by_pk?: Maybe<ClientCredentialsRoles>;
  /** delete data from the table: "ClientInformations" */
  delete_ClientInformations?: Maybe<ClientInformations_Mutation_Response>;
  /** delete single row from the table: "ClientInformations" */
  delete_ClientInformations_by_pk?: Maybe<ClientInformations>;
  /** delete data from the table: "ClientVersions" */
  delete_ClientVersions?: Maybe<ClientVersions_Mutation_Response>;
  /** delete single row from the table: "ClientVersions" */
  delete_ClientVersions_by_pk?: Maybe<ClientVersions>;
  /** delete data from the table: "ComponentVariables" */
  delete_ComponentVariables?: Maybe<ComponentVariables_Mutation_Response>;
  /** delete single row from the table: "ComponentVariables" */
  delete_ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** delete data from the table: "Components" */
  delete_Components?: Maybe<Components_Mutation_Response>;
  /** delete single row from the table: "Components" */
  delete_Components_by_pk?: Maybe<Components>;
  /** delete data from the table: "CompositeSchedules" */
  delete_CompositeSchedules?: Maybe<CompositeSchedules_Mutation_Response>;
  /** delete single row from the table: "CompositeSchedules" */
  delete_CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** delete data from the table: "CpoTenants" */
  delete_CpoTenants?: Maybe<CpoTenants_Mutation_Response>;
  /** delete single row from the table: "CpoTenants" */
  delete_CpoTenants_by_pk?: Maybe<CpoTenants>;
  /** delete data from the table: "Endpoints" */
  delete_Endpoints?: Maybe<Endpoints_Mutation_Response>;
  /** delete single row from the table: "Endpoints" */
  delete_Endpoints_by_pk?: Maybe<Endpoints>;
  /** delete data from the table: "EventData" */
  delete_EventData?: Maybe<EventData_Mutation_Response>;
  /** delete single row from the table: "EventData" */
  delete_EventData_by_pk?: Maybe<EventData>;
  /** delete data from the table: "Evses" */
  delete_Evses?: Maybe<Evses_Mutation_Response>;
  /** delete single row from the table: "Evses" */
  delete_Evses_by_pk?: Maybe<Evses>;
  /** delete data from the table: "IdTokenAdditionalInfos" */
  delete_IdTokenAdditionalInfos?: Maybe<IdTokenAdditionalInfos_Mutation_Response>;
  /** delete single row from the table: "IdTokenAdditionalInfos" */
  delete_IdTokenAdditionalInfos_by_pk?: Maybe<IdTokenAdditionalInfos>;
  /** delete data from the table: "IdTokenInfos" */
  delete_IdTokenInfos?: Maybe<IdTokenInfos_Mutation_Response>;
  /** delete single row from the table: "IdTokenInfos" */
  delete_IdTokenInfos_by_pk?: Maybe<IdTokenInfos>;
  /** delete data from the table: "IdTokens" */
  delete_IdTokens?: Maybe<IdTokens_Mutation_Response>;
  /** delete single row from the table: "IdTokens" */
  delete_IdTokens_by_pk?: Maybe<IdTokens>;
  /** delete data from the table: "Images" */
  delete_Images?: Maybe<Images_Mutation_Response>;
  /** delete single row from the table: "Images" */
  delete_Images_by_pk?: Maybe<Images>;
  /** delete data from the table: "Locations" */
  delete_Locations?: Maybe<Locations_Mutation_Response>;
  /** delete single row from the table: "Locations" */
  delete_Locations_by_pk?: Maybe<Locations>;
  /** delete data from the table: "MessageInfos" */
  delete_MessageInfos?: Maybe<MessageInfos_Mutation_Response>;
  /** delete single row from the table: "MessageInfos" */
  delete_MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** delete data from the table: "MeterValues" */
  delete_MeterValues?: Maybe<MeterValues_Mutation_Response>;
  /** delete single row from the table: "MeterValues" */
  delete_MeterValues_by_pk?: Maybe<MeterValues>;
  /** delete data from the table: "OcpiConnectors" */
  delete_OcpiConnectors?: Maybe<OcpiConnectors_Mutation_Response>;
  /** delete single row from the table: "OcpiConnectors" */
  delete_OcpiConnectors_by_pk?: Maybe<OcpiConnectors>;
  /** delete data from the table: "OcpiEvses" */
  delete_OcpiEvses?: Maybe<OcpiEvses_Mutation_Response>;
  /** delete single row from the table: "OcpiEvses" */
  delete_OcpiEvses_by_pk?: Maybe<OcpiEvses>;
  /** delete data from the table: "OcpiLocations" */
  delete_OcpiLocations?: Maybe<OcpiLocations_Mutation_Response>;
  /** delete single row from the table: "OcpiLocations" */
  delete_OcpiLocations_by_pk?: Maybe<OcpiLocations>;
  /** delete data from the table: "OcpiReservations" */
  delete_OcpiReservations?: Maybe<OcpiReservations_Mutation_Response>;
  /** delete single row from the table: "OcpiReservations" */
  delete_OcpiReservations_by_pk?: Maybe<OcpiReservations>;
  /** delete data from the table: "OcpiTariffs" */
  delete_OcpiTariffs?: Maybe<OcpiTariffs_Mutation_Response>;
  /** delete single row from the table: "OcpiTariffs" */
  delete_OcpiTariffs_by_pk?: Maybe<OcpiTariffs>;
  /** delete data from the table: "OcpiTokens" */
  delete_OcpiTokens?: Maybe<OcpiTokens_Mutation_Response>;
  /** delete single row from the table: "OcpiTokens" */
  delete_OcpiTokens_by_pk?: Maybe<OcpiTokens>;
  /** delete data from the table: "Reservations" */
  delete_Reservations?: Maybe<Reservations_Mutation_Response>;
  /** delete single row from the table: "Reservations" */
  delete_Reservations_by_pk?: Maybe<Reservations>;
  /** delete data from the table: "ResponseUrlCorrelationIds" */
  delete_ResponseUrlCorrelationIds?: Maybe<ResponseUrlCorrelationIds_Mutation_Response>;
  /** delete single row from the table: "ResponseUrlCorrelationIds" */
  delete_ResponseUrlCorrelationIds_by_pk?: Maybe<ResponseUrlCorrelationIds>;
  /** delete data from the table: "SalesTariffs" */
  delete_SalesTariffs?: Maybe<SalesTariffs_Mutation_Response>;
  /** delete single row from the table: "SalesTariffs" */
  delete_SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** delete data from the table: "SecurityEvents" */
  delete_SecurityEvents?: Maybe<SecurityEvents_Mutation_Response>;
  /** delete single row from the table: "SecurityEvents" */
  delete_SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** delete data from the table: "ServerCredentialsRoles" */
  delete_ServerCredentialsRoles?: Maybe<ServerCredentialsRoles_Mutation_Response>;
  /** delete single row from the table: "ServerCredentialsRoles" */
  delete_ServerCredentialsRoles_by_pk?: Maybe<ServerCredentialsRoles>;
  /** delete data from the table: "ServerVersions" */
  delete_ServerVersions?: Maybe<ServerVersions_Mutation_Response>;
  /** delete single row from the table: "ServerVersions" */
  delete_ServerVersions_by_pk?: Maybe<ServerVersions>;
  /** delete data from the table: "SessionChargingProfiles" */
  delete_SessionChargingProfiles?: Maybe<SessionChargingProfiles_Mutation_Response>;
  /** delete single row from the table: "SessionChargingProfiles" */
  delete_SessionChargingProfiles_by_pk?: Maybe<SessionChargingProfiles>;
  /** delete data from the table: "StatusNotifications" */
  delete_StatusNotifications?: Maybe<StatusNotifications_Mutation_Response>;
  /** delete single row from the table: "StatusNotifications" */
  delete_StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** delete data from the table: "Subscriptions" */
  delete_Subscriptions?: Maybe<Subscriptions_Mutation_Response>;
  /** delete single row from the table: "Subscriptions" */
  delete_Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** delete data from the table: "Tariffs" */
  delete_Tariffs?: Maybe<Tariffs_Mutation_Response>;
  /** delete single row from the table: "Tariffs" */
  delete_Tariffs_by_pk?: Maybe<Tariffs>;
  /** delete data from the table: "TransactionEvents" */
  delete_TransactionEvents?: Maybe<TransactionEvents_Mutation_Response>;
  /** delete single row from the table: "TransactionEvents" */
  delete_TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** delete data from the table: "Transactions" */
  delete_Transactions?: Maybe<Transactions_Mutation_Response>;
  /** delete single row from the table: "Transactions" */
  delete_Transactions_by_pk?: Maybe<Transactions>;
  /** delete data from the table: "VariableAttributes" */
  delete_VariableAttributes?: Maybe<VariableAttributes_Mutation_Response>;
  /** delete single row from the table: "VariableAttributes" */
  delete_VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** delete data from the table: "VariableCharacteristics" */
  delete_VariableCharacteristics?: Maybe<VariableCharacteristics_Mutation_Response>;
  /** delete single row from the table: "VariableCharacteristics" */
  delete_VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** delete data from the table: "VariableMonitoringStatuses" */
  delete_VariableMonitoringStatuses?: Maybe<VariableMonitoringStatuses_Mutation_Response>;
  /** delete single row from the table: "VariableMonitoringStatuses" */
  delete_VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** delete data from the table: "VariableMonitorings" */
  delete_VariableMonitorings?: Maybe<VariableMonitorings_Mutation_Response>;
  /** delete single row from the table: "VariableMonitorings" */
  delete_VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** delete data from the table: "VariableStatuses" */
  delete_VariableStatuses?: Maybe<VariableStatuses_Mutation_Response>;
  /** delete single row from the table: "VariableStatuses" */
  delete_VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** delete data from the table: "Variables" */
  delete_Variables?: Maybe<Variables_Mutation_Response>;
  /** delete single row from the table: "Variables" */
  delete_Variables_by_pk?: Maybe<Variables>;
  /** delete data from the table: "VersionEndpoints" */
  delete_VersionEndpoints?: Maybe<VersionEndpoints_Mutation_Response>;
  /** delete single row from the table: "VersionEndpoints" */
  delete_VersionEndpoints_by_pk?: Maybe<VersionEndpoints>;
  /** delete data from the table: "Versions" */
  delete_Versions?: Maybe<Versions_Mutation_Response>;
  /** delete single row from the table: "Versions" */
  delete_Versions_by_pk?: Maybe<Versions>;
  /** delete data from the table: "payment_checkouts" */
  delete_payment_checkouts?: Maybe<Payment_Checkouts_Mutation_Response>;
  /** delete single row from the table: "payment_checkouts" */
  delete_payment_checkouts_by_pk?: Maybe<Payment_Checkouts>;
  /** delete data from the table: "payment_connectors" */
  delete_payment_connectors?: Maybe<Payment_Connectors_Mutation_Response>;
  /** delete single row from the table: "payment_connectors" */
  delete_payment_connectors_by_pk?: Maybe<Payment_Connectors>;
  /** delete data from the table: "payment_evses" */
  delete_payment_evses?: Maybe<Payment_Evses_Mutation_Response>;
  /** delete single row from the table: "payment_evses" */
  delete_payment_evses_by_pk?: Maybe<Payment_Evses>;
  /** delete data from the table: "payment_locations" */
  delete_payment_locations?: Maybe<Payment_Locations_Mutation_Response>;
  /** delete single row from the table: "payment_locations" */
  delete_payment_locations_by_pk?: Maybe<Payment_Locations>;
  /** delete data from the table: "payment_operators" */
  delete_payment_operators?: Maybe<Payment_Operators_Mutation_Response>;
  /** delete single row from the table: "payment_operators" */
  delete_payment_operators_by_pk?: Maybe<Payment_Operators>;
  /** delete data from the table: "payment_tariffs" */
  delete_payment_tariffs?: Maybe<Payment_Tariffs_Mutation_Response>;
  /** delete single row from the table: "payment_tariffs" */
  delete_payment_tariffs_by_pk?: Maybe<Payment_Tariffs>;
  /** insert data into the table: "AdditionalInfos" */
  insert_AdditionalInfos?: Maybe<AdditionalInfos_Mutation_Response>;
  /** insert a single row into the table: "AdditionalInfos" */
  insert_AdditionalInfos_one?: Maybe<AdditionalInfos>;
  /** insert data into the table: "AsyncJobStatuses" */
  insert_AsyncJobStatuses?: Maybe<AsyncJobStatuses_Mutation_Response>;
  /** insert a single row into the table: "AsyncJobStatuses" */
  insert_AsyncJobStatuses_one?: Maybe<AsyncJobStatuses>;
  /** insert data into the table: "Authorizations" */
  insert_Authorizations?: Maybe<Authorizations_Mutation_Response>;
  /** insert a single row into the table: "Authorizations" */
  insert_Authorizations_one?: Maybe<Authorizations>;
  /** insert data into the table: "Boots" */
  insert_Boots?: Maybe<Boots_Mutation_Response>;
  /** insert a single row into the table: "Boots" */
  insert_Boots_one?: Maybe<Boots>;
  /** insert data into the table: "BusinessDetails" */
  insert_BusinessDetails?: Maybe<BusinessDetails_Mutation_Response>;
  /** insert a single row into the table: "BusinessDetails" */
  insert_BusinessDetails_one?: Maybe<BusinessDetails>;
  /** insert data into the table: "CallMessages" */
  insert_CallMessages?: Maybe<CallMessages_Mutation_Response>;
  /** insert a single row into the table: "CallMessages" */
  insert_CallMessages_one?: Maybe<CallMessages>;
  /** insert data into the table: "Certificates" */
  insert_Certificates?: Maybe<Certificates_Mutation_Response>;
  /** insert a single row into the table: "Certificates" */
  insert_Certificates_one?: Maybe<Certificates>;
  /** insert data into the table: "ChargingNeeds" */
  insert_ChargingNeeds?: Maybe<ChargingNeeds_Mutation_Response>;
  /** insert a single row into the table: "ChargingNeeds" */
  insert_ChargingNeeds_one?: Maybe<ChargingNeeds>;
  /** insert data into the table: "ChargingProfiles" */
  insert_ChargingProfiles?: Maybe<ChargingProfiles_Mutation_Response>;
  /** insert a single row into the table: "ChargingProfiles" */
  insert_ChargingProfiles_one?: Maybe<ChargingProfiles>;
  /** insert data into the table: "ChargingSchedules" */
  insert_ChargingSchedules?: Maybe<ChargingSchedules_Mutation_Response>;
  /** insert a single row into the table: "ChargingSchedules" */
  insert_ChargingSchedules_one?: Maybe<ChargingSchedules>;
  /** insert data into the table: "ChargingStationSecurityInfos" */
  insert_ChargingStationSecurityInfos?: Maybe<ChargingStationSecurityInfos_Mutation_Response>;
  /** insert a single row into the table: "ChargingStationSecurityInfos" */
  insert_ChargingStationSecurityInfos_one?: Maybe<ChargingStationSecurityInfos>;
  /** insert data into the table: "ChargingStations" */
  insert_ChargingStations?: Maybe<ChargingStations_Mutation_Response>;
  /** insert a single row into the table: "ChargingStations" */
  insert_ChargingStations_one?: Maybe<ChargingStations>;
  /** insert data into the table: "ClientCredentialsRoles" */
  insert_ClientCredentialsRoles?: Maybe<ClientCredentialsRoles_Mutation_Response>;
  /** insert a single row into the table: "ClientCredentialsRoles" */
  insert_ClientCredentialsRoles_one?: Maybe<ClientCredentialsRoles>;
  /** insert data into the table: "ClientInformations" */
  insert_ClientInformations?: Maybe<ClientInformations_Mutation_Response>;
  /** insert a single row into the table: "ClientInformations" */
  insert_ClientInformations_one?: Maybe<ClientInformations>;
  /** insert data into the table: "ClientVersions" */
  insert_ClientVersions?: Maybe<ClientVersions_Mutation_Response>;
  /** insert a single row into the table: "ClientVersions" */
  insert_ClientVersions_one?: Maybe<ClientVersions>;
  /** insert data into the table: "ComponentVariables" */
  insert_ComponentVariables?: Maybe<ComponentVariables_Mutation_Response>;
  /** insert a single row into the table: "ComponentVariables" */
  insert_ComponentVariables_one?: Maybe<ComponentVariables>;
  /** insert data into the table: "Components" */
  insert_Components?: Maybe<Components_Mutation_Response>;
  /** insert a single row into the table: "Components" */
  insert_Components_one?: Maybe<Components>;
  /** insert data into the table: "CompositeSchedules" */
  insert_CompositeSchedules?: Maybe<CompositeSchedules_Mutation_Response>;
  /** insert a single row into the table: "CompositeSchedules" */
  insert_CompositeSchedules_one?: Maybe<CompositeSchedules>;
  /** insert data into the table: "CpoTenants" */
  insert_CpoTenants?: Maybe<CpoTenants_Mutation_Response>;
  /** insert a single row into the table: "CpoTenants" */
  insert_CpoTenants_one?: Maybe<CpoTenants>;
  /** insert data into the table: "Endpoints" */
  insert_Endpoints?: Maybe<Endpoints_Mutation_Response>;
  /** insert a single row into the table: "Endpoints" */
  insert_Endpoints_one?: Maybe<Endpoints>;
  /** insert data into the table: "EventData" */
  insert_EventData?: Maybe<EventData_Mutation_Response>;
  /** insert a single row into the table: "EventData" */
  insert_EventData_one?: Maybe<EventData>;
  /** insert data into the table: "Evses" */
  insert_Evses?: Maybe<Evses_Mutation_Response>;
  /** insert a single row into the table: "Evses" */
  insert_Evses_one?: Maybe<Evses>;
  /** insert data into the table: "IdTokenAdditionalInfos" */
  insert_IdTokenAdditionalInfos?: Maybe<IdTokenAdditionalInfos_Mutation_Response>;
  /** insert a single row into the table: "IdTokenAdditionalInfos" */
  insert_IdTokenAdditionalInfos_one?: Maybe<IdTokenAdditionalInfos>;
  /** insert data into the table: "IdTokenInfos" */
  insert_IdTokenInfos?: Maybe<IdTokenInfos_Mutation_Response>;
  /** insert a single row into the table: "IdTokenInfos" */
  insert_IdTokenInfos_one?: Maybe<IdTokenInfos>;
  /** insert data into the table: "IdTokens" */
  insert_IdTokens?: Maybe<IdTokens_Mutation_Response>;
  /** insert a single row into the table: "IdTokens" */
  insert_IdTokens_one?: Maybe<IdTokens>;
  /** insert data into the table: "Images" */
  insert_Images?: Maybe<Images_Mutation_Response>;
  /** insert a single row into the table: "Images" */
  insert_Images_one?: Maybe<Images>;
  /** insert data into the table: "Locations" */
  insert_Locations?: Maybe<Locations_Mutation_Response>;
  /** insert a single row into the table: "Locations" */
  insert_Locations_one?: Maybe<Locations>;
  /** insert data into the table: "MessageInfos" */
  insert_MessageInfos?: Maybe<MessageInfos_Mutation_Response>;
  /** insert a single row into the table: "MessageInfos" */
  insert_MessageInfos_one?: Maybe<MessageInfos>;
  /** insert data into the table: "MeterValues" */
  insert_MeterValues?: Maybe<MeterValues_Mutation_Response>;
  /** insert a single row into the table: "MeterValues" */
  insert_MeterValues_one?: Maybe<MeterValues>;
  /** insert data into the table: "OcpiConnectors" */
  insert_OcpiConnectors?: Maybe<OcpiConnectors_Mutation_Response>;
  /** insert a single row into the table: "OcpiConnectors" */
  insert_OcpiConnectors_one?: Maybe<OcpiConnectors>;
  /** insert data into the table: "OcpiEvses" */
  insert_OcpiEvses?: Maybe<OcpiEvses_Mutation_Response>;
  /** insert a single row into the table: "OcpiEvses" */
  insert_OcpiEvses_one?: Maybe<OcpiEvses>;
  /** insert data into the table: "OcpiLocations" */
  insert_OcpiLocations?: Maybe<OcpiLocations_Mutation_Response>;
  /** insert a single row into the table: "OcpiLocations" */
  insert_OcpiLocations_one?: Maybe<OcpiLocations>;
  /** insert data into the table: "OcpiReservations" */
  insert_OcpiReservations?: Maybe<OcpiReservations_Mutation_Response>;
  /** insert a single row into the table: "OcpiReservations" */
  insert_OcpiReservations_one?: Maybe<OcpiReservations>;
  /** insert data into the table: "OcpiTariffs" */
  insert_OcpiTariffs?: Maybe<OcpiTariffs_Mutation_Response>;
  /** insert a single row into the table: "OcpiTariffs" */
  insert_OcpiTariffs_one?: Maybe<OcpiTariffs>;
  /** insert data into the table: "OcpiTokens" */
  insert_OcpiTokens?: Maybe<OcpiTokens_Mutation_Response>;
  /** insert a single row into the table: "OcpiTokens" */
  insert_OcpiTokens_one?: Maybe<OcpiTokens>;
  /** insert data into the table: "Reservations" */
  insert_Reservations?: Maybe<Reservations_Mutation_Response>;
  /** insert a single row into the table: "Reservations" */
  insert_Reservations_one?: Maybe<Reservations>;
  /** insert data into the table: "ResponseUrlCorrelationIds" */
  insert_ResponseUrlCorrelationIds?: Maybe<ResponseUrlCorrelationIds_Mutation_Response>;
  /** insert a single row into the table: "ResponseUrlCorrelationIds" */
  insert_ResponseUrlCorrelationIds_one?: Maybe<ResponseUrlCorrelationIds>;
  /** insert data into the table: "SalesTariffs" */
  insert_SalesTariffs?: Maybe<SalesTariffs_Mutation_Response>;
  /** insert a single row into the table: "SalesTariffs" */
  insert_SalesTariffs_one?: Maybe<SalesTariffs>;
  /** insert data into the table: "SecurityEvents" */
  insert_SecurityEvents?: Maybe<SecurityEvents_Mutation_Response>;
  /** insert a single row into the table: "SecurityEvents" */
  insert_SecurityEvents_one?: Maybe<SecurityEvents>;
  /** insert data into the table: "ServerCredentialsRoles" */
  insert_ServerCredentialsRoles?: Maybe<ServerCredentialsRoles_Mutation_Response>;
  /** insert a single row into the table: "ServerCredentialsRoles" */
  insert_ServerCredentialsRoles_one?: Maybe<ServerCredentialsRoles>;
  /** insert data into the table: "ServerVersions" */
  insert_ServerVersions?: Maybe<ServerVersions_Mutation_Response>;
  /** insert a single row into the table: "ServerVersions" */
  insert_ServerVersions_one?: Maybe<ServerVersions>;
  /** insert data into the table: "SessionChargingProfiles" */
  insert_SessionChargingProfiles?: Maybe<SessionChargingProfiles_Mutation_Response>;
  /** insert a single row into the table: "SessionChargingProfiles" */
  insert_SessionChargingProfiles_one?: Maybe<SessionChargingProfiles>;
  /** insert data into the table: "StatusNotifications" */
  insert_StatusNotifications?: Maybe<StatusNotifications_Mutation_Response>;
  /** insert a single row into the table: "StatusNotifications" */
  insert_StatusNotifications_one?: Maybe<StatusNotifications>;
  /** insert data into the table: "Subscriptions" */
  insert_Subscriptions?: Maybe<Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "Subscriptions" */
  insert_Subscriptions_one?: Maybe<Subscriptions>;
  /** insert data into the table: "Tariffs" */
  insert_Tariffs?: Maybe<Tariffs_Mutation_Response>;
  /** insert a single row into the table: "Tariffs" */
  insert_Tariffs_one?: Maybe<Tariffs>;
  /** insert data into the table: "TransactionEvents" */
  insert_TransactionEvents?: Maybe<TransactionEvents_Mutation_Response>;
  /** insert a single row into the table: "TransactionEvents" */
  insert_TransactionEvents_one?: Maybe<TransactionEvents>;
  /** insert data into the table: "Transactions" */
  insert_Transactions?: Maybe<Transactions_Mutation_Response>;
  /** insert a single row into the table: "Transactions" */
  insert_Transactions_one?: Maybe<Transactions>;
  /** insert data into the table: "VariableAttributes" */
  insert_VariableAttributes?: Maybe<VariableAttributes_Mutation_Response>;
  /** insert a single row into the table: "VariableAttributes" */
  insert_VariableAttributes_one?: Maybe<VariableAttributes>;
  /** insert data into the table: "VariableCharacteristics" */
  insert_VariableCharacteristics?: Maybe<VariableCharacteristics_Mutation_Response>;
  /** insert a single row into the table: "VariableCharacteristics" */
  insert_VariableCharacteristics_one?: Maybe<VariableCharacteristics>;
  /** insert data into the table: "VariableMonitoringStatuses" */
  insert_VariableMonitoringStatuses?: Maybe<VariableMonitoringStatuses_Mutation_Response>;
  /** insert a single row into the table: "VariableMonitoringStatuses" */
  insert_VariableMonitoringStatuses_one?: Maybe<VariableMonitoringStatuses>;
  /** insert data into the table: "VariableMonitorings" */
  insert_VariableMonitorings?: Maybe<VariableMonitorings_Mutation_Response>;
  /** insert a single row into the table: "VariableMonitorings" */
  insert_VariableMonitorings_one?: Maybe<VariableMonitorings>;
  /** insert data into the table: "VariableStatuses" */
  insert_VariableStatuses?: Maybe<VariableStatuses_Mutation_Response>;
  /** insert a single row into the table: "VariableStatuses" */
  insert_VariableStatuses_one?: Maybe<VariableStatuses>;
  /** insert data into the table: "Variables" */
  insert_Variables?: Maybe<Variables_Mutation_Response>;
  /** insert a single row into the table: "Variables" */
  insert_Variables_one?: Maybe<Variables>;
  /** insert data into the table: "VersionEndpoints" */
  insert_VersionEndpoints?: Maybe<VersionEndpoints_Mutation_Response>;
  /** insert a single row into the table: "VersionEndpoints" */
  insert_VersionEndpoints_one?: Maybe<VersionEndpoints>;
  /** insert data into the table: "Versions" */
  insert_Versions?: Maybe<Versions_Mutation_Response>;
  /** insert a single row into the table: "Versions" */
  insert_Versions_one?: Maybe<Versions>;
  /** insert data into the table: "payment_checkouts" */
  insert_payment_checkouts?: Maybe<Payment_Checkouts_Mutation_Response>;
  /** insert a single row into the table: "payment_checkouts" */
  insert_payment_checkouts_one?: Maybe<Payment_Checkouts>;
  /** insert data into the table: "payment_connectors" */
  insert_payment_connectors?: Maybe<Payment_Connectors_Mutation_Response>;
  /** insert a single row into the table: "payment_connectors" */
  insert_payment_connectors_one?: Maybe<Payment_Connectors>;
  /** insert data into the table: "payment_evses" */
  insert_payment_evses?: Maybe<Payment_Evses_Mutation_Response>;
  /** insert a single row into the table: "payment_evses" */
  insert_payment_evses_one?: Maybe<Payment_Evses>;
  /** insert data into the table: "payment_locations" */
  insert_payment_locations?: Maybe<Payment_Locations_Mutation_Response>;
  /** insert a single row into the table: "payment_locations" */
  insert_payment_locations_one?: Maybe<Payment_Locations>;
  /** insert data into the table: "payment_operators" */
  insert_payment_operators?: Maybe<Payment_Operators_Mutation_Response>;
  /** insert a single row into the table: "payment_operators" */
  insert_payment_operators_one?: Maybe<Payment_Operators>;
  /** insert data into the table: "payment_tariffs" */
  insert_payment_tariffs?: Maybe<Payment_Tariffs_Mutation_Response>;
  /** insert a single row into the table: "payment_tariffs" */
  insert_payment_tariffs_one?: Maybe<Payment_Tariffs>;
  /** update data of the table: "AdditionalInfos" */
  update_AdditionalInfos?: Maybe<AdditionalInfos_Mutation_Response>;
  /** update single row of the table: "AdditionalInfos" */
  update_AdditionalInfos_by_pk?: Maybe<AdditionalInfos>;
  /** update multiples rows of table: "AdditionalInfos" */
  update_AdditionalInfos_many?: Maybe<
    Array<Maybe<AdditionalInfos_Mutation_Response>>
  >;
  /** update data of the table: "AsyncJobStatuses" */
  update_AsyncJobStatuses?: Maybe<AsyncJobStatuses_Mutation_Response>;
  /** update single row of the table: "AsyncJobStatuses" */
  update_AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** update multiples rows of table: "AsyncJobStatuses" */
  update_AsyncJobStatuses_many?: Maybe<
    Array<Maybe<AsyncJobStatuses_Mutation_Response>>
  >;
  /** update data of the table: "Authorizations" */
  update_Authorizations?: Maybe<Authorizations_Mutation_Response>;
  /** update single row of the table: "Authorizations" */
  update_Authorizations_by_pk?: Maybe<Authorizations>;
  /** update multiples rows of table: "Authorizations" */
  update_Authorizations_many?: Maybe<
    Array<Maybe<Authorizations_Mutation_Response>>
  >;
  /** update data of the table: "Boots" */
  update_Boots?: Maybe<Boots_Mutation_Response>;
  /** update single row of the table: "Boots" */
  update_Boots_by_pk?: Maybe<Boots>;
  /** update multiples rows of table: "Boots" */
  update_Boots_many?: Maybe<Array<Maybe<Boots_Mutation_Response>>>;
  /** update data of the table: "BusinessDetails" */
  update_BusinessDetails?: Maybe<BusinessDetails_Mutation_Response>;
  /** update single row of the table: "BusinessDetails" */
  update_BusinessDetails_by_pk?: Maybe<BusinessDetails>;
  /** update multiples rows of table: "BusinessDetails" */
  update_BusinessDetails_many?: Maybe<
    Array<Maybe<BusinessDetails_Mutation_Response>>
  >;
  /** update data of the table: "CallMessages" */
  update_CallMessages?: Maybe<CallMessages_Mutation_Response>;
  /** update single row of the table: "CallMessages" */
  update_CallMessages_by_pk?: Maybe<CallMessages>;
  /** update multiples rows of table: "CallMessages" */
  update_CallMessages_many?: Maybe<
    Array<Maybe<CallMessages_Mutation_Response>>
  >;
  /** update data of the table: "Certificates" */
  update_Certificates?: Maybe<Certificates_Mutation_Response>;
  /** update single row of the table: "Certificates" */
  update_Certificates_by_pk?: Maybe<Certificates>;
  /** update multiples rows of table: "Certificates" */
  update_Certificates_many?: Maybe<
    Array<Maybe<Certificates_Mutation_Response>>
  >;
  /** update data of the table: "ChargingNeeds" */
  update_ChargingNeeds?: Maybe<ChargingNeeds_Mutation_Response>;
  /** update single row of the table: "ChargingNeeds" */
  update_ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** update multiples rows of table: "ChargingNeeds" */
  update_ChargingNeeds_many?: Maybe<
    Array<Maybe<ChargingNeeds_Mutation_Response>>
  >;
  /** update data of the table: "ChargingProfiles" */
  update_ChargingProfiles?: Maybe<ChargingProfiles_Mutation_Response>;
  /** update single row of the table: "ChargingProfiles" */
  update_ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** update multiples rows of table: "ChargingProfiles" */
  update_ChargingProfiles_many?: Maybe<
    Array<Maybe<ChargingProfiles_Mutation_Response>>
  >;
  /** update data of the table: "ChargingSchedules" */
  update_ChargingSchedules?: Maybe<ChargingSchedules_Mutation_Response>;
  /** update single row of the table: "ChargingSchedules" */
  update_ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** update multiples rows of table: "ChargingSchedules" */
  update_ChargingSchedules_many?: Maybe<
    Array<Maybe<ChargingSchedules_Mutation_Response>>
  >;
  /** update data of the table: "ChargingStationSecurityInfos" */
  update_ChargingStationSecurityInfos?: Maybe<ChargingStationSecurityInfos_Mutation_Response>;
  /** update single row of the table: "ChargingStationSecurityInfos" */
  update_ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** update multiples rows of table: "ChargingStationSecurityInfos" */
  update_ChargingStationSecurityInfos_many?: Maybe<
    Array<Maybe<ChargingStationSecurityInfos_Mutation_Response>>
  >;
  /** update data of the table: "ChargingStations" */
  update_ChargingStations?: Maybe<ChargingStations_Mutation_Response>;
  /** update single row of the table: "ChargingStations" */
  update_ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** update multiples rows of table: "ChargingStations" */
  update_ChargingStations_many?: Maybe<
    Array<Maybe<ChargingStations_Mutation_Response>>
  >;
  /** update data of the table: "ClientCredentialsRoles" */
  update_ClientCredentialsRoles?: Maybe<ClientCredentialsRoles_Mutation_Response>;
  /** update single row of the table: "ClientCredentialsRoles" */
  update_ClientCredentialsRoles_by_pk?: Maybe<ClientCredentialsRoles>;
  /** update multiples rows of table: "ClientCredentialsRoles" */
  update_ClientCredentialsRoles_many?: Maybe<
    Array<Maybe<ClientCredentialsRoles_Mutation_Response>>
  >;
  /** update data of the table: "ClientInformations" */
  update_ClientInformations?: Maybe<ClientInformations_Mutation_Response>;
  /** update single row of the table: "ClientInformations" */
  update_ClientInformations_by_pk?: Maybe<ClientInformations>;
  /** update multiples rows of table: "ClientInformations" */
  update_ClientInformations_many?: Maybe<
    Array<Maybe<ClientInformations_Mutation_Response>>
  >;
  /** update data of the table: "ClientVersions" */
  update_ClientVersions?: Maybe<ClientVersions_Mutation_Response>;
  /** update single row of the table: "ClientVersions" */
  update_ClientVersions_by_pk?: Maybe<ClientVersions>;
  /** update multiples rows of table: "ClientVersions" */
  update_ClientVersions_many?: Maybe<
    Array<Maybe<ClientVersions_Mutation_Response>>
  >;
  /** update data of the table: "ComponentVariables" */
  update_ComponentVariables?: Maybe<ComponentVariables_Mutation_Response>;
  /** update single row of the table: "ComponentVariables" */
  update_ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** update multiples rows of table: "ComponentVariables" */
  update_ComponentVariables_many?: Maybe<
    Array<Maybe<ComponentVariables_Mutation_Response>>
  >;
  /** update data of the table: "Components" */
  update_Components?: Maybe<Components_Mutation_Response>;
  /** update single row of the table: "Components" */
  update_Components_by_pk?: Maybe<Components>;
  /** update multiples rows of table: "Components" */
  update_Components_many?: Maybe<Array<Maybe<Components_Mutation_Response>>>;
  /** update data of the table: "CompositeSchedules" */
  update_CompositeSchedules?: Maybe<CompositeSchedules_Mutation_Response>;
  /** update single row of the table: "CompositeSchedules" */
  update_CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** update multiples rows of table: "CompositeSchedules" */
  update_CompositeSchedules_many?: Maybe<
    Array<Maybe<CompositeSchedules_Mutation_Response>>
  >;
  /** update data of the table: "CpoTenants" */
  update_CpoTenants?: Maybe<CpoTenants_Mutation_Response>;
  /** update single row of the table: "CpoTenants" */
  update_CpoTenants_by_pk?: Maybe<CpoTenants>;
  /** update multiples rows of table: "CpoTenants" */
  update_CpoTenants_many?: Maybe<Array<Maybe<CpoTenants_Mutation_Response>>>;
  /** update data of the table: "Endpoints" */
  update_Endpoints?: Maybe<Endpoints_Mutation_Response>;
  /** update single row of the table: "Endpoints" */
  update_Endpoints_by_pk?: Maybe<Endpoints>;
  /** update multiples rows of table: "Endpoints" */
  update_Endpoints_many?: Maybe<Array<Maybe<Endpoints_Mutation_Response>>>;
  /** update data of the table: "EventData" */
  update_EventData?: Maybe<EventData_Mutation_Response>;
  /** update single row of the table: "EventData" */
  update_EventData_by_pk?: Maybe<EventData>;
  /** update multiples rows of table: "EventData" */
  update_EventData_many?: Maybe<Array<Maybe<EventData_Mutation_Response>>>;
  /** update data of the table: "Evses" */
  update_Evses?: Maybe<Evses_Mutation_Response>;
  /** update single row of the table: "Evses" */
  update_Evses_by_pk?: Maybe<Evses>;
  /** update multiples rows of table: "Evses" */
  update_Evses_many?: Maybe<Array<Maybe<Evses_Mutation_Response>>>;
  /** update data of the table: "IdTokenAdditionalInfos" */
  update_IdTokenAdditionalInfos?: Maybe<IdTokenAdditionalInfos_Mutation_Response>;
  /** update single row of the table: "IdTokenAdditionalInfos" */
  update_IdTokenAdditionalInfos_by_pk?: Maybe<IdTokenAdditionalInfos>;
  /** update multiples rows of table: "IdTokenAdditionalInfos" */
  update_IdTokenAdditionalInfos_many?: Maybe<
    Array<Maybe<IdTokenAdditionalInfos_Mutation_Response>>
  >;
  /** update data of the table: "IdTokenInfos" */
  update_IdTokenInfos?: Maybe<IdTokenInfos_Mutation_Response>;
  /** update single row of the table: "IdTokenInfos" */
  update_IdTokenInfos_by_pk?: Maybe<IdTokenInfos>;
  /** update multiples rows of table: "IdTokenInfos" */
  update_IdTokenInfos_many?: Maybe<
    Array<Maybe<IdTokenInfos_Mutation_Response>>
  >;
  /** update data of the table: "IdTokens" */
  update_IdTokens?: Maybe<IdTokens_Mutation_Response>;
  /** update single row of the table: "IdTokens" */
  update_IdTokens_by_pk?: Maybe<IdTokens>;
  /** update multiples rows of table: "IdTokens" */
  update_IdTokens_many?: Maybe<Array<Maybe<IdTokens_Mutation_Response>>>;
  /** update data of the table: "Images" */
  update_Images?: Maybe<Images_Mutation_Response>;
  /** update single row of the table: "Images" */
  update_Images_by_pk?: Maybe<Images>;
  /** update multiples rows of table: "Images" */
  update_Images_many?: Maybe<Array<Maybe<Images_Mutation_Response>>>;
  /** update data of the table: "Locations" */
  update_Locations?: Maybe<Locations_Mutation_Response>;
  /** update single row of the table: "Locations" */
  update_Locations_by_pk?: Maybe<Locations>;
  /** update multiples rows of table: "Locations" */
  update_Locations_many?: Maybe<Array<Maybe<Locations_Mutation_Response>>>;
  /** update data of the table: "MessageInfos" */
  update_MessageInfos?: Maybe<MessageInfos_Mutation_Response>;
  /** update single row of the table: "MessageInfos" */
  update_MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** update multiples rows of table: "MessageInfos" */
  update_MessageInfos_many?: Maybe<
    Array<Maybe<MessageInfos_Mutation_Response>>
  >;
  /** update data of the table: "MeterValues" */
  update_MeterValues?: Maybe<MeterValues_Mutation_Response>;
  /** update single row of the table: "MeterValues" */
  update_MeterValues_by_pk?: Maybe<MeterValues>;
  /** update multiples rows of table: "MeterValues" */
  update_MeterValues_many?: Maybe<Array<Maybe<MeterValues_Mutation_Response>>>;
  /** update data of the table: "OcpiConnectors" */
  update_OcpiConnectors?: Maybe<OcpiConnectors_Mutation_Response>;
  /** update single row of the table: "OcpiConnectors" */
  update_OcpiConnectors_by_pk?: Maybe<OcpiConnectors>;
  /** update multiples rows of table: "OcpiConnectors" */
  update_OcpiConnectors_many?: Maybe<
    Array<Maybe<OcpiConnectors_Mutation_Response>>
  >;
  /** update data of the table: "OcpiEvses" */
  update_OcpiEvses?: Maybe<OcpiEvses_Mutation_Response>;
  /** update single row of the table: "OcpiEvses" */
  update_OcpiEvses_by_pk?: Maybe<OcpiEvses>;
  /** update multiples rows of table: "OcpiEvses" */
  update_OcpiEvses_many?: Maybe<Array<Maybe<OcpiEvses_Mutation_Response>>>;
  /** update data of the table: "OcpiLocations" */
  update_OcpiLocations?: Maybe<OcpiLocations_Mutation_Response>;
  /** update single row of the table: "OcpiLocations" */
  update_OcpiLocations_by_pk?: Maybe<OcpiLocations>;
  /** update multiples rows of table: "OcpiLocations" */
  update_OcpiLocations_many?: Maybe<
    Array<Maybe<OcpiLocations_Mutation_Response>>
  >;
  /** update data of the table: "OcpiReservations" */
  update_OcpiReservations?: Maybe<OcpiReservations_Mutation_Response>;
  /** update single row of the table: "OcpiReservations" */
  update_OcpiReservations_by_pk?: Maybe<OcpiReservations>;
  /** update multiples rows of table: "OcpiReservations" */
  update_OcpiReservations_many?: Maybe<
    Array<Maybe<OcpiReservations_Mutation_Response>>
  >;
  /** update data of the table: "OcpiTariffs" */
  update_OcpiTariffs?: Maybe<OcpiTariffs_Mutation_Response>;
  /** update single row of the table: "OcpiTariffs" */
  update_OcpiTariffs_by_pk?: Maybe<OcpiTariffs>;
  /** update multiples rows of table: "OcpiTariffs" */
  update_OcpiTariffs_many?: Maybe<Array<Maybe<OcpiTariffs_Mutation_Response>>>;
  /** update data of the table: "OcpiTokens" */
  update_OcpiTokens?: Maybe<OcpiTokens_Mutation_Response>;
  /** update single row of the table: "OcpiTokens" */
  update_OcpiTokens_by_pk?: Maybe<OcpiTokens>;
  /** update multiples rows of table: "OcpiTokens" */
  update_OcpiTokens_many?: Maybe<Array<Maybe<OcpiTokens_Mutation_Response>>>;
  /** update data of the table: "Reservations" */
  update_Reservations?: Maybe<Reservations_Mutation_Response>;
  /** update single row of the table: "Reservations" */
  update_Reservations_by_pk?: Maybe<Reservations>;
  /** update multiples rows of table: "Reservations" */
  update_Reservations_many?: Maybe<
    Array<Maybe<Reservations_Mutation_Response>>
  >;
  /** update data of the table: "ResponseUrlCorrelationIds" */
  update_ResponseUrlCorrelationIds?: Maybe<ResponseUrlCorrelationIds_Mutation_Response>;
  /** update single row of the table: "ResponseUrlCorrelationIds" */
  update_ResponseUrlCorrelationIds_by_pk?: Maybe<ResponseUrlCorrelationIds>;
  /** update multiples rows of table: "ResponseUrlCorrelationIds" */
  update_ResponseUrlCorrelationIds_many?: Maybe<
    Array<Maybe<ResponseUrlCorrelationIds_Mutation_Response>>
  >;
  /** update data of the table: "SalesTariffs" */
  update_SalesTariffs?: Maybe<SalesTariffs_Mutation_Response>;
  /** update single row of the table: "SalesTariffs" */
  update_SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** update multiples rows of table: "SalesTariffs" */
  update_SalesTariffs_many?: Maybe<
    Array<Maybe<SalesTariffs_Mutation_Response>>
  >;
  /** update data of the table: "SecurityEvents" */
  update_SecurityEvents?: Maybe<SecurityEvents_Mutation_Response>;
  /** update single row of the table: "SecurityEvents" */
  update_SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** update multiples rows of table: "SecurityEvents" */
  update_SecurityEvents_many?: Maybe<
    Array<Maybe<SecurityEvents_Mutation_Response>>
  >;
  /** update data of the table: "ServerCredentialsRoles" */
  update_ServerCredentialsRoles?: Maybe<ServerCredentialsRoles_Mutation_Response>;
  /** update single row of the table: "ServerCredentialsRoles" */
  update_ServerCredentialsRoles_by_pk?: Maybe<ServerCredentialsRoles>;
  /** update multiples rows of table: "ServerCredentialsRoles" */
  update_ServerCredentialsRoles_many?: Maybe<
    Array<Maybe<ServerCredentialsRoles_Mutation_Response>>
  >;
  /** update data of the table: "ServerVersions" */
  update_ServerVersions?: Maybe<ServerVersions_Mutation_Response>;
  /** update single row of the table: "ServerVersions" */
  update_ServerVersions_by_pk?: Maybe<ServerVersions>;
  /** update multiples rows of table: "ServerVersions" */
  update_ServerVersions_many?: Maybe<
    Array<Maybe<ServerVersions_Mutation_Response>>
  >;
  /** update data of the table: "SessionChargingProfiles" */
  update_SessionChargingProfiles?: Maybe<SessionChargingProfiles_Mutation_Response>;
  /** update single row of the table: "SessionChargingProfiles" */
  update_SessionChargingProfiles_by_pk?: Maybe<SessionChargingProfiles>;
  /** update multiples rows of table: "SessionChargingProfiles" */
  update_SessionChargingProfiles_many?: Maybe<
    Array<Maybe<SessionChargingProfiles_Mutation_Response>>
  >;
  /** update data of the table: "StatusNotifications" */
  update_StatusNotifications?: Maybe<StatusNotifications_Mutation_Response>;
  /** update single row of the table: "StatusNotifications" */
  update_StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** update multiples rows of table: "StatusNotifications" */
  update_StatusNotifications_many?: Maybe<
    Array<Maybe<StatusNotifications_Mutation_Response>>
  >;
  /** update data of the table: "Subscriptions" */
  update_Subscriptions?: Maybe<Subscriptions_Mutation_Response>;
  /** update single row of the table: "Subscriptions" */
  update_Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** update multiples rows of table: "Subscriptions" */
  update_Subscriptions_many?: Maybe<
    Array<Maybe<Subscriptions_Mutation_Response>>
  >;
  /** update data of the table: "Tariffs" */
  update_Tariffs?: Maybe<Tariffs_Mutation_Response>;
  /** update single row of the table: "Tariffs" */
  update_Tariffs_by_pk?: Maybe<Tariffs>;
  /** update multiples rows of table: "Tariffs" */
  update_Tariffs_many?: Maybe<Array<Maybe<Tariffs_Mutation_Response>>>;
  /** update data of the table: "TransactionEvents" */
  update_TransactionEvents?: Maybe<TransactionEvents_Mutation_Response>;
  /** update single row of the table: "TransactionEvents" */
  update_TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** update multiples rows of table: "TransactionEvents" */
  update_TransactionEvents_many?: Maybe<
    Array<Maybe<TransactionEvents_Mutation_Response>>
  >;
  /** update data of the table: "Transactions" */
  update_Transactions?: Maybe<Transactions_Mutation_Response>;
  /** update single row of the table: "Transactions" */
  update_Transactions_by_pk?: Maybe<Transactions>;
  /** update multiples rows of table: "Transactions" */
  update_Transactions_many?: Maybe<
    Array<Maybe<Transactions_Mutation_Response>>
  >;
  /** update data of the table: "VariableAttributes" */
  update_VariableAttributes?: Maybe<VariableAttributes_Mutation_Response>;
  /** update single row of the table: "VariableAttributes" */
  update_VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** update multiples rows of table: "VariableAttributes" */
  update_VariableAttributes_many?: Maybe<
    Array<Maybe<VariableAttributes_Mutation_Response>>
  >;
  /** update data of the table: "VariableCharacteristics" */
  update_VariableCharacteristics?: Maybe<VariableCharacteristics_Mutation_Response>;
  /** update single row of the table: "VariableCharacteristics" */
  update_VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** update multiples rows of table: "VariableCharacteristics" */
  update_VariableCharacteristics_many?: Maybe<
    Array<Maybe<VariableCharacteristics_Mutation_Response>>
  >;
  /** update data of the table: "VariableMonitoringStatuses" */
  update_VariableMonitoringStatuses?: Maybe<VariableMonitoringStatuses_Mutation_Response>;
  /** update single row of the table: "VariableMonitoringStatuses" */
  update_VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** update multiples rows of table: "VariableMonitoringStatuses" */
  update_VariableMonitoringStatuses_many?: Maybe<
    Array<Maybe<VariableMonitoringStatuses_Mutation_Response>>
  >;
  /** update data of the table: "VariableMonitorings" */
  update_VariableMonitorings?: Maybe<VariableMonitorings_Mutation_Response>;
  /** update single row of the table: "VariableMonitorings" */
  update_VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** update multiples rows of table: "VariableMonitorings" */
  update_VariableMonitorings_many?: Maybe<
    Array<Maybe<VariableMonitorings_Mutation_Response>>
  >;
  /** update data of the table: "VariableStatuses" */
  update_VariableStatuses?: Maybe<VariableStatuses_Mutation_Response>;
  /** update single row of the table: "VariableStatuses" */
  update_VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** update multiples rows of table: "VariableStatuses" */
  update_VariableStatuses_many?: Maybe<
    Array<Maybe<VariableStatuses_Mutation_Response>>
  >;
  /** update data of the table: "Variables" */
  update_Variables?: Maybe<Variables_Mutation_Response>;
  /** update single row of the table: "Variables" */
  update_Variables_by_pk?: Maybe<Variables>;
  /** update multiples rows of table: "Variables" */
  update_Variables_many?: Maybe<Array<Maybe<Variables_Mutation_Response>>>;
  /** update data of the table: "VersionEndpoints" */
  update_VersionEndpoints?: Maybe<VersionEndpoints_Mutation_Response>;
  /** update single row of the table: "VersionEndpoints" */
  update_VersionEndpoints_by_pk?: Maybe<VersionEndpoints>;
  /** update multiples rows of table: "VersionEndpoints" */
  update_VersionEndpoints_many?: Maybe<
    Array<Maybe<VersionEndpoints_Mutation_Response>>
  >;
  /** update data of the table: "Versions" */
  update_Versions?: Maybe<Versions_Mutation_Response>;
  /** update single row of the table: "Versions" */
  update_Versions_by_pk?: Maybe<Versions>;
  /** update multiples rows of table: "Versions" */
  update_Versions_many?: Maybe<Array<Maybe<Versions_Mutation_Response>>>;
  /** update data of the table: "payment_checkouts" */
  update_payment_checkouts?: Maybe<Payment_Checkouts_Mutation_Response>;
  /** update single row of the table: "payment_checkouts" */
  update_payment_checkouts_by_pk?: Maybe<Payment_Checkouts>;
  /** update multiples rows of table: "payment_checkouts" */
  update_payment_checkouts_many?: Maybe<
    Array<Maybe<Payment_Checkouts_Mutation_Response>>
  >;
  /** update data of the table: "payment_connectors" */
  update_payment_connectors?: Maybe<Payment_Connectors_Mutation_Response>;
  /** update single row of the table: "payment_connectors" */
  update_payment_connectors_by_pk?: Maybe<Payment_Connectors>;
  /** update multiples rows of table: "payment_connectors" */
  update_payment_connectors_many?: Maybe<
    Array<Maybe<Payment_Connectors_Mutation_Response>>
  >;
  /** update data of the table: "payment_evses" */
  update_payment_evses?: Maybe<Payment_Evses_Mutation_Response>;
  /** update single row of the table: "payment_evses" */
  update_payment_evses_by_pk?: Maybe<Payment_Evses>;
  /** update multiples rows of table: "payment_evses" */
  update_payment_evses_many?: Maybe<
    Array<Maybe<Payment_Evses_Mutation_Response>>
  >;
  /** update data of the table: "payment_locations" */
  update_payment_locations?: Maybe<Payment_Locations_Mutation_Response>;
  /** update single row of the table: "payment_locations" */
  update_payment_locations_by_pk?: Maybe<Payment_Locations>;
  /** update multiples rows of table: "payment_locations" */
  update_payment_locations_many?: Maybe<
    Array<Maybe<Payment_Locations_Mutation_Response>>
  >;
  /** update data of the table: "payment_operators" */
  update_payment_operators?: Maybe<Payment_Operators_Mutation_Response>;
  /** update single row of the table: "payment_operators" */
  update_payment_operators_by_pk?: Maybe<Payment_Operators>;
  /** update multiples rows of table: "payment_operators" */
  update_payment_operators_many?: Maybe<
    Array<Maybe<Payment_Operators_Mutation_Response>>
  >;
  /** update data of the table: "payment_tariffs" */
  update_payment_tariffs?: Maybe<Payment_Tariffs_Mutation_Response>;
  /** update single row of the table: "payment_tariffs" */
  update_payment_tariffs_by_pk?: Maybe<Payment_Tariffs>;
  /** update multiples rows of table: "payment_tariffs" */
  update_payment_tariffs_many?: Maybe<
    Array<Maybe<Payment_Tariffs_Mutation_Response>>
  >;
};

/** mutation root */
export type Mutation_RootDelete_AdditionalInfosArgs = {
  where: AdditionalInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_AdditionalInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_AsyncJobStatusesArgs = {
  where: AsyncJobStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_AsyncJobStatuses_By_PkArgs = {
  jobId: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_AuthorizationsArgs = {
  where: Authorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Authorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_BootsArgs = {
  where: Boots_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Boots_By_PkArgs = {
  id: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_BusinessDetailsArgs = {
  where: BusinessDetails_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_BusinessDetails_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_CallMessagesArgs = {
  where: CallMessages_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_CallMessages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_CertificatesArgs = {
  where: Certificates_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Certificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingNeedsArgs = {
  where: ChargingNeeds_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingNeeds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingProfilesArgs = {
  where: ChargingProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingProfiles_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingSchedulesArgs = {
  where: ChargingSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingSchedules_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationSecurityInfosArgs = {
  where: ChargingStationSecurityInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationSecurityInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ChargingStationsArgs = {
  where: ChargingStations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ChargingStations_By_PkArgs = {
  id: Scalars['String']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ClientCredentialsRolesArgs = {
  where: ClientCredentialsRoles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ClientCredentialsRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ClientInformationsArgs = {
  where: ClientInformations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ClientInformations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ClientVersionsArgs = {
  where: ClientVersions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ClientVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ComponentVariablesArgs = {
  where: ComponentVariables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ComponentVariables_By_PkArgs = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ComponentsArgs = {
  where: Components_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Components_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_CompositeSchedulesArgs = {
  where: CompositeSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_CompositeSchedules_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_CpoTenantsArgs = {
  where: CpoTenants_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_CpoTenants_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_EndpointsArgs = {
  where: Endpoints_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Endpoints_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_EventDataArgs = {
  where: EventData_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_EventData_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_EvsesArgs = {
  where: Evses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Evses_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_IdTokenAdditionalInfosArgs = {
  where: IdTokenAdditionalInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_IdTokenAdditionalInfos_By_PkArgs = {
  additionalInfoId: Scalars['Int']['input'];
  idTokenId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_IdTokenInfosArgs = {
  where: IdTokenInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_IdTokenInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_IdTokensArgs = {
  where: IdTokens_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_IdTokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ImagesArgs = {
  where: Images_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Images_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_LocationsArgs = {
  where: Locations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Locations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_MessageInfosArgs = {
  where: MessageInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_MessageInfos_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_MeterValuesArgs = {
  where: MeterValues_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_MeterValues_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcpiConnectorsArgs = {
  where: OcpiConnectors_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcpiConnectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcpiEvsesArgs = {
  where: OcpiEvses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcpiEvses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcpiLocationsArgs = {
  where: OcpiLocations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcpiLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcpiReservationsArgs = {
  where: OcpiReservations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcpiReservations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcpiTariffsArgs = {
  where: OcpiTariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcpiTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_OcpiTokensArgs = {
  where: OcpiTokens_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_OcpiTokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ReservationsArgs = {
  where: Reservations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Reservations_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ResponseUrlCorrelationIdsArgs = {
  where: ResponseUrlCorrelationIds_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ResponseUrlCorrelationIds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SalesTariffsArgs = {
  where: SalesTariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SalesTariffs_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SecurityEventsArgs = {
  where: SecurityEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SecurityEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ServerCredentialsRolesArgs = {
  where: ServerCredentialsRoles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ServerCredentialsRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_ServerVersionsArgs = {
  where: ServerVersions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_ServerVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SessionChargingProfilesArgs = {
  where: SessionChargingProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_SessionChargingProfiles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_StatusNotificationsArgs = {
  where: StatusNotifications_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_StatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_SubscriptionsArgs = {
  where: Subscriptions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Subscriptions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TariffsArgs = {
  where: Tariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Tariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TransactionEventsArgs = {
  where: TransactionEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_TransactionEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_TransactionsArgs = {
  where: Transactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Transactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableAttributesArgs = {
  where: VariableAttributes_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableAttributes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableCharacteristicsArgs = {
  where: VariableCharacteristics_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableCharacteristics_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitoringStatusesArgs = {
  where: VariableMonitoringStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitoringStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitoringsArgs = {
  where: VariableMonitorings_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableMonitorings_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariableStatusesArgs = {
  where: VariableStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VariableStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VariablesArgs = {
  where: Variables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Variables_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VersionEndpointsArgs = {
  where: VersionEndpoints_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_VersionEndpoints_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_VersionsArgs = {
  where: Versions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Versions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Payment_CheckoutsArgs = {
  where: Payment_Checkouts_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payment_Checkouts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Payment_ConnectorsArgs = {
  where: Payment_Connectors_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payment_Connectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Payment_EvsesArgs = {
  where: Payment_Evses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payment_Evses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Payment_LocationsArgs = {
  where: Payment_Locations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payment_Locations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Payment_OperatorsArgs = {
  where: Payment_Operators_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payment_Operators_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootDelete_Payment_TariffsArgs = {
  where: Payment_Tariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Payment_Tariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

/** mutation root */
export type Mutation_RootInsert_AdditionalInfosArgs = {
  objects: Array<AdditionalInfos_Insert_Input>;
  on_conflict?: InputMaybe<AdditionalInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_AdditionalInfos_OneArgs = {
  object: AdditionalInfos_Insert_Input;
  on_conflict?: InputMaybe<AdditionalInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_AsyncJobStatusesArgs = {
  objects: Array<AsyncJobStatuses_Insert_Input>;
  on_conflict?: InputMaybe<AsyncJobStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_AsyncJobStatuses_OneArgs = {
  object: AsyncJobStatuses_Insert_Input;
  on_conflict?: InputMaybe<AsyncJobStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_AuthorizationsArgs = {
  objects: Array<Authorizations_Insert_Input>;
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Authorizations_OneArgs = {
  object: Authorizations_Insert_Input;
  on_conflict?: InputMaybe<Authorizations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_BootsArgs = {
  objects: Array<Boots_Insert_Input>;
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Boots_OneArgs = {
  object: Boots_Insert_Input;
  on_conflict?: InputMaybe<Boots_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_BusinessDetailsArgs = {
  objects: Array<BusinessDetails_Insert_Input>;
  on_conflict?: InputMaybe<BusinessDetails_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_BusinessDetails_OneArgs = {
  object: BusinessDetails_Insert_Input;
  on_conflict?: InputMaybe<BusinessDetails_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CallMessagesArgs = {
  objects: Array<CallMessages_Insert_Input>;
  on_conflict?: InputMaybe<CallMessages_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CallMessages_OneArgs = {
  object: CallMessages_Insert_Input;
  on_conflict?: InputMaybe<CallMessages_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CertificatesArgs = {
  objects: Array<Certificates_Insert_Input>;
  on_conflict?: InputMaybe<Certificates_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Certificates_OneArgs = {
  object: Certificates_Insert_Input;
  on_conflict?: InputMaybe<Certificates_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingNeedsArgs = {
  objects: Array<ChargingNeeds_Insert_Input>;
  on_conflict?: InputMaybe<ChargingNeeds_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingNeeds_OneArgs = {
  object: ChargingNeeds_Insert_Input;
  on_conflict?: InputMaybe<ChargingNeeds_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingProfilesArgs = {
  objects: Array<ChargingProfiles_Insert_Input>;
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingProfiles_OneArgs = {
  object: ChargingProfiles_Insert_Input;
  on_conflict?: InputMaybe<ChargingProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingSchedulesArgs = {
  objects: Array<ChargingSchedules_Insert_Input>;
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingSchedules_OneArgs = {
  object: ChargingSchedules_Insert_Input;
  on_conflict?: InputMaybe<ChargingSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationSecurityInfosArgs = {
  objects: Array<ChargingStationSecurityInfos_Insert_Input>;
  on_conflict?: InputMaybe<ChargingStationSecurityInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationSecurityInfos_OneArgs = {
  object: ChargingStationSecurityInfos_Insert_Input;
  on_conflict?: InputMaybe<ChargingStationSecurityInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStationsArgs = {
  objects: Array<ChargingStations_Insert_Input>;
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ChargingStations_OneArgs = {
  object: ChargingStations_Insert_Input;
  on_conflict?: InputMaybe<ChargingStations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ClientCredentialsRolesArgs = {
  objects: Array<ClientCredentialsRoles_Insert_Input>;
  on_conflict?: InputMaybe<ClientCredentialsRoles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ClientCredentialsRoles_OneArgs = {
  object: ClientCredentialsRoles_Insert_Input;
  on_conflict?: InputMaybe<ClientCredentialsRoles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ClientInformationsArgs = {
  objects: Array<ClientInformations_Insert_Input>;
  on_conflict?: InputMaybe<ClientInformations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ClientInformations_OneArgs = {
  object: ClientInformations_Insert_Input;
  on_conflict?: InputMaybe<ClientInformations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ClientVersionsArgs = {
  objects: Array<ClientVersions_Insert_Input>;
  on_conflict?: InputMaybe<ClientVersions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ClientVersions_OneArgs = {
  object: ClientVersions_Insert_Input;
  on_conflict?: InputMaybe<ClientVersions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ComponentVariablesArgs = {
  objects: Array<ComponentVariables_Insert_Input>;
  on_conflict?: InputMaybe<ComponentVariables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ComponentVariables_OneArgs = {
  object: ComponentVariables_Insert_Input;
  on_conflict?: InputMaybe<ComponentVariables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ComponentsArgs = {
  objects: Array<Components_Insert_Input>;
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Components_OneArgs = {
  object: Components_Insert_Input;
  on_conflict?: InputMaybe<Components_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CompositeSchedulesArgs = {
  objects: Array<CompositeSchedules_Insert_Input>;
  on_conflict?: InputMaybe<CompositeSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CompositeSchedules_OneArgs = {
  object: CompositeSchedules_Insert_Input;
  on_conflict?: InputMaybe<CompositeSchedules_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CpoTenantsArgs = {
  objects: Array<CpoTenants_Insert_Input>;
  on_conflict?: InputMaybe<CpoTenants_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_CpoTenants_OneArgs = {
  object: CpoTenants_Insert_Input;
  on_conflict?: InputMaybe<CpoTenants_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EndpointsArgs = {
  objects: Array<Endpoints_Insert_Input>;
  on_conflict?: InputMaybe<Endpoints_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Endpoints_OneArgs = {
  object: Endpoints_Insert_Input;
  on_conflict?: InputMaybe<Endpoints_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EventDataArgs = {
  objects: Array<EventData_Insert_Input>;
  on_conflict?: InputMaybe<EventData_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EventData_OneArgs = {
  object: EventData_Insert_Input;
  on_conflict?: InputMaybe<EventData_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_EvsesArgs = {
  objects: Array<Evses_Insert_Input>;
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Evses_OneArgs = {
  object: Evses_Insert_Input;
  on_conflict?: InputMaybe<Evses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IdTokenAdditionalInfosArgs = {
  objects: Array<IdTokenAdditionalInfos_Insert_Input>;
  on_conflict?: InputMaybe<IdTokenAdditionalInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IdTokenAdditionalInfos_OneArgs = {
  object: IdTokenAdditionalInfos_Insert_Input;
  on_conflict?: InputMaybe<IdTokenAdditionalInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IdTokenInfosArgs = {
  objects: Array<IdTokenInfos_Insert_Input>;
  on_conflict?: InputMaybe<IdTokenInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IdTokenInfos_OneArgs = {
  object: IdTokenInfos_Insert_Input;
  on_conflict?: InputMaybe<IdTokenInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IdTokensArgs = {
  objects: Array<IdTokens_Insert_Input>;
  on_conflict?: InputMaybe<IdTokens_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_IdTokens_OneArgs = {
  object: IdTokens_Insert_Input;
  on_conflict?: InputMaybe<IdTokens_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ImagesArgs = {
  objects: Array<Images_Insert_Input>;
  on_conflict?: InputMaybe<Images_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Images_OneArgs = {
  object: Images_Insert_Input;
  on_conflict?: InputMaybe<Images_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_LocationsArgs = {
  objects: Array<Locations_Insert_Input>;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Locations_OneArgs = {
  object: Locations_Insert_Input;
  on_conflict?: InputMaybe<Locations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MessageInfosArgs = {
  objects: Array<MessageInfos_Insert_Input>;
  on_conflict?: InputMaybe<MessageInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MessageInfos_OneArgs = {
  object: MessageInfos_Insert_Input;
  on_conflict?: InputMaybe<MessageInfos_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MeterValuesArgs = {
  objects: Array<MeterValues_Insert_Input>;
  on_conflict?: InputMaybe<MeterValues_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_MeterValues_OneArgs = {
  object: MeterValues_Insert_Input;
  on_conflict?: InputMaybe<MeterValues_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiConnectorsArgs = {
  objects: Array<OcpiConnectors_Insert_Input>;
  on_conflict?: InputMaybe<OcpiConnectors_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiConnectors_OneArgs = {
  object: OcpiConnectors_Insert_Input;
  on_conflict?: InputMaybe<OcpiConnectors_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiEvsesArgs = {
  objects: Array<OcpiEvses_Insert_Input>;
  on_conflict?: InputMaybe<OcpiEvses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiEvses_OneArgs = {
  object: OcpiEvses_Insert_Input;
  on_conflict?: InputMaybe<OcpiEvses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiLocationsArgs = {
  objects: Array<OcpiLocations_Insert_Input>;
  on_conflict?: InputMaybe<OcpiLocations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiLocations_OneArgs = {
  object: OcpiLocations_Insert_Input;
  on_conflict?: InputMaybe<OcpiLocations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiReservationsArgs = {
  objects: Array<OcpiReservations_Insert_Input>;
  on_conflict?: InputMaybe<OcpiReservations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiReservations_OneArgs = {
  object: OcpiReservations_Insert_Input;
  on_conflict?: InputMaybe<OcpiReservations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiTariffsArgs = {
  objects: Array<OcpiTariffs_Insert_Input>;
  on_conflict?: InputMaybe<OcpiTariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiTariffs_OneArgs = {
  object: OcpiTariffs_Insert_Input;
  on_conflict?: InputMaybe<OcpiTariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiTokensArgs = {
  objects: Array<OcpiTokens_Insert_Input>;
  on_conflict?: InputMaybe<OcpiTokens_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_OcpiTokens_OneArgs = {
  object: OcpiTokens_Insert_Input;
  on_conflict?: InputMaybe<OcpiTokens_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ReservationsArgs = {
  objects: Array<Reservations_Insert_Input>;
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Reservations_OneArgs = {
  object: Reservations_Insert_Input;
  on_conflict?: InputMaybe<Reservations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ResponseUrlCorrelationIdsArgs = {
  objects: Array<ResponseUrlCorrelationIds_Insert_Input>;
  on_conflict?: InputMaybe<ResponseUrlCorrelationIds_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ResponseUrlCorrelationIds_OneArgs = {
  object: ResponseUrlCorrelationIds_Insert_Input;
  on_conflict?: InputMaybe<ResponseUrlCorrelationIds_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SalesTariffsArgs = {
  objects: Array<SalesTariffs_Insert_Input>;
  on_conflict?: InputMaybe<SalesTariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SalesTariffs_OneArgs = {
  object: SalesTariffs_Insert_Input;
  on_conflict?: InputMaybe<SalesTariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SecurityEventsArgs = {
  objects: Array<SecurityEvents_Insert_Input>;
  on_conflict?: InputMaybe<SecurityEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SecurityEvents_OneArgs = {
  object: SecurityEvents_Insert_Input;
  on_conflict?: InputMaybe<SecurityEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ServerCredentialsRolesArgs = {
  objects: Array<ServerCredentialsRoles_Insert_Input>;
  on_conflict?: InputMaybe<ServerCredentialsRoles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ServerCredentialsRoles_OneArgs = {
  object: ServerCredentialsRoles_Insert_Input;
  on_conflict?: InputMaybe<ServerCredentialsRoles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ServerVersionsArgs = {
  objects: Array<ServerVersions_Insert_Input>;
  on_conflict?: InputMaybe<ServerVersions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_ServerVersions_OneArgs = {
  object: ServerVersions_Insert_Input;
  on_conflict?: InputMaybe<ServerVersions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SessionChargingProfilesArgs = {
  objects: Array<SessionChargingProfiles_Insert_Input>;
  on_conflict?: InputMaybe<SessionChargingProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SessionChargingProfiles_OneArgs = {
  object: SessionChargingProfiles_Insert_Input;
  on_conflict?: InputMaybe<SessionChargingProfiles_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StatusNotificationsArgs = {
  objects: Array<StatusNotifications_Insert_Input>;
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_StatusNotifications_OneArgs = {
  object: StatusNotifications_Insert_Input;
  on_conflict?: InputMaybe<StatusNotifications_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_SubscriptionsArgs = {
  objects: Array<Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<Subscriptions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Subscriptions_OneArgs = {
  object: Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<Subscriptions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TariffsArgs = {
  objects: Array<Tariffs_Insert_Input>;
  on_conflict?: InputMaybe<Tariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Tariffs_OneArgs = {
  object: Tariffs_Insert_Input;
  on_conflict?: InputMaybe<Tariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TransactionEventsArgs = {
  objects: Array<TransactionEvents_Insert_Input>;
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TransactionEvents_OneArgs = {
  object: TransactionEvents_Insert_Input;
  on_conflict?: InputMaybe<TransactionEvents_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_TransactionsArgs = {
  objects: Array<Transactions_Insert_Input>;
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Transactions_OneArgs = {
  object: Transactions_Insert_Input;
  on_conflict?: InputMaybe<Transactions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableAttributesArgs = {
  objects: Array<VariableAttributes_Insert_Input>;
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableAttributes_OneArgs = {
  object: VariableAttributes_Insert_Input;
  on_conflict?: InputMaybe<VariableAttributes_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableCharacteristicsArgs = {
  objects: Array<VariableCharacteristics_Insert_Input>;
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableCharacteristics_OneArgs = {
  object: VariableCharacteristics_Insert_Input;
  on_conflict?: InputMaybe<VariableCharacteristics_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitoringStatusesArgs = {
  objects: Array<VariableMonitoringStatuses_Insert_Input>;
  on_conflict?: InputMaybe<VariableMonitoringStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitoringStatuses_OneArgs = {
  object: VariableMonitoringStatuses_Insert_Input;
  on_conflict?: InputMaybe<VariableMonitoringStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitoringsArgs = {
  objects: Array<VariableMonitorings_Insert_Input>;
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableMonitorings_OneArgs = {
  object: VariableMonitorings_Insert_Input;
  on_conflict?: InputMaybe<VariableMonitorings_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableStatusesArgs = {
  objects: Array<VariableStatuses_Insert_Input>;
  on_conflict?: InputMaybe<VariableStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariableStatuses_OneArgs = {
  object: VariableStatuses_Insert_Input;
  on_conflict?: InputMaybe<VariableStatuses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VariablesArgs = {
  objects: Array<Variables_Insert_Input>;
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Variables_OneArgs = {
  object: Variables_Insert_Input;
  on_conflict?: InputMaybe<Variables_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VersionEndpointsArgs = {
  objects: Array<VersionEndpoints_Insert_Input>;
  on_conflict?: InputMaybe<VersionEndpoints_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VersionEndpoints_OneArgs = {
  object: VersionEndpoints_Insert_Input;
  on_conflict?: InputMaybe<VersionEndpoints_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_VersionsArgs = {
  objects: Array<Versions_Insert_Input>;
  on_conflict?: InputMaybe<Versions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Versions_OneArgs = {
  object: Versions_Insert_Input;
  on_conflict?: InputMaybe<Versions_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_CheckoutsArgs = {
  objects: Array<Payment_Checkouts_Insert_Input>;
  on_conflict?: InputMaybe<Payment_Checkouts_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_Checkouts_OneArgs = {
  object: Payment_Checkouts_Insert_Input;
  on_conflict?: InputMaybe<Payment_Checkouts_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_ConnectorsArgs = {
  objects: Array<Payment_Connectors_Insert_Input>;
  on_conflict?: InputMaybe<Payment_Connectors_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_Connectors_OneArgs = {
  object: Payment_Connectors_Insert_Input;
  on_conflict?: InputMaybe<Payment_Connectors_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_EvsesArgs = {
  objects: Array<Payment_Evses_Insert_Input>;
  on_conflict?: InputMaybe<Payment_Evses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_Evses_OneArgs = {
  object: Payment_Evses_Insert_Input;
  on_conflict?: InputMaybe<Payment_Evses_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_LocationsArgs = {
  objects: Array<Payment_Locations_Insert_Input>;
  on_conflict?: InputMaybe<Payment_Locations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_Locations_OneArgs = {
  object: Payment_Locations_Insert_Input;
  on_conflict?: InputMaybe<Payment_Locations_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_OperatorsArgs = {
  objects: Array<Payment_Operators_Insert_Input>;
  on_conflict?: InputMaybe<Payment_Operators_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_Operators_OneArgs = {
  object: Payment_Operators_Insert_Input;
  on_conflict?: InputMaybe<Payment_Operators_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_TariffsArgs = {
  objects: Array<Payment_Tariffs_Insert_Input>;
  on_conflict?: InputMaybe<Payment_Tariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Payment_Tariffs_OneArgs = {
  object: Payment_Tariffs_Insert_Input;
  on_conflict?: InputMaybe<Payment_Tariffs_On_Conflict>;
};

/** mutation root */
export type Mutation_RootUpdate_AdditionalInfosArgs = {
  _inc?: InputMaybe<AdditionalInfos_Inc_Input>;
  _set?: InputMaybe<AdditionalInfos_Set_Input>;
  where: AdditionalInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_AdditionalInfos_By_PkArgs = {
  _inc?: InputMaybe<AdditionalInfos_Inc_Input>;
  _set?: InputMaybe<AdditionalInfos_Set_Input>;
  pk_columns: AdditionalInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_AdditionalInfos_ManyArgs = {
  updates: Array<AdditionalInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_AsyncJobStatusesArgs = {
  _inc?: InputMaybe<AsyncJobStatuses_Inc_Input>;
  _set?: InputMaybe<AsyncJobStatuses_Set_Input>;
  where: AsyncJobStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_AsyncJobStatuses_By_PkArgs = {
  _inc?: InputMaybe<AsyncJobStatuses_Inc_Input>;
  _set?: InputMaybe<AsyncJobStatuses_Set_Input>;
  pk_columns: AsyncJobStatuses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_AsyncJobStatuses_ManyArgs = {
  updates: Array<AsyncJobStatuses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_AuthorizationsArgs = {
  _inc?: InputMaybe<Authorizations_Inc_Input>;
  _set?: InputMaybe<Authorizations_Set_Input>;
  where: Authorizations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Authorizations_By_PkArgs = {
  _inc?: InputMaybe<Authorizations_Inc_Input>;
  _set?: InputMaybe<Authorizations_Set_Input>;
  pk_columns: Authorizations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Authorizations_ManyArgs = {
  updates: Array<Authorizations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_BootsArgs = {
  _inc?: InputMaybe<Boots_Inc_Input>;
  _set?: InputMaybe<Boots_Set_Input>;
  where: Boots_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Boots_By_PkArgs = {
  _inc?: InputMaybe<Boots_Inc_Input>;
  _set?: InputMaybe<Boots_Set_Input>;
  pk_columns: Boots_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Boots_ManyArgs = {
  updates: Array<Boots_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_BusinessDetailsArgs = {
  _inc?: InputMaybe<BusinessDetails_Inc_Input>;
  _set?: InputMaybe<BusinessDetails_Set_Input>;
  where: BusinessDetails_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_BusinessDetails_By_PkArgs = {
  _inc?: InputMaybe<BusinessDetails_Inc_Input>;
  _set?: InputMaybe<BusinessDetails_Set_Input>;
  pk_columns: BusinessDetails_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_BusinessDetails_ManyArgs = {
  updates: Array<BusinessDetails_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CallMessagesArgs = {
  _inc?: InputMaybe<CallMessages_Inc_Input>;
  _set?: InputMaybe<CallMessages_Set_Input>;
  where: CallMessages_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_CallMessages_By_PkArgs = {
  _inc?: InputMaybe<CallMessages_Inc_Input>;
  _set?: InputMaybe<CallMessages_Set_Input>;
  pk_columns: CallMessages_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_CallMessages_ManyArgs = {
  updates: Array<CallMessages_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CertificatesArgs = {
  _inc?: InputMaybe<Certificates_Inc_Input>;
  _set?: InputMaybe<Certificates_Set_Input>;
  where: Certificates_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Certificates_By_PkArgs = {
  _inc?: InputMaybe<Certificates_Inc_Input>;
  _set?: InputMaybe<Certificates_Set_Input>;
  pk_columns: Certificates_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Certificates_ManyArgs = {
  updates: Array<Certificates_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingNeedsArgs = {
  _append?: InputMaybe<ChargingNeeds_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingNeeds_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingNeeds_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingNeeds_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingNeeds_Inc_Input>;
  _prepend?: InputMaybe<ChargingNeeds_Prepend_Input>;
  _set?: InputMaybe<ChargingNeeds_Set_Input>;
  where: ChargingNeeds_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingNeeds_By_PkArgs = {
  _append?: InputMaybe<ChargingNeeds_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingNeeds_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingNeeds_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingNeeds_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingNeeds_Inc_Input>;
  _prepend?: InputMaybe<ChargingNeeds_Prepend_Input>;
  _set?: InputMaybe<ChargingNeeds_Set_Input>;
  pk_columns: ChargingNeeds_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingNeeds_ManyArgs = {
  updates: Array<ChargingNeeds_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingProfilesArgs = {
  _inc?: InputMaybe<ChargingProfiles_Inc_Input>;
  _set?: InputMaybe<ChargingProfiles_Set_Input>;
  where: ChargingProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingProfiles_By_PkArgs = {
  _inc?: InputMaybe<ChargingProfiles_Inc_Input>;
  _set?: InputMaybe<ChargingProfiles_Set_Input>;
  pk_columns: ChargingProfiles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingProfiles_ManyArgs = {
  updates: Array<ChargingProfiles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingSchedulesArgs = {
  _append?: InputMaybe<ChargingSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingSchedules_Inc_Input>;
  _prepend?: InputMaybe<ChargingSchedules_Prepend_Input>;
  _set?: InputMaybe<ChargingSchedules_Set_Input>;
  where: ChargingSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingSchedules_By_PkArgs = {
  _append?: InputMaybe<ChargingSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<ChargingSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ChargingSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ChargingSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<ChargingSchedules_Inc_Input>;
  _prepend?: InputMaybe<ChargingSchedules_Prepend_Input>;
  _set?: InputMaybe<ChargingSchedules_Set_Input>;
  pk_columns: ChargingSchedules_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingSchedules_ManyArgs = {
  updates: Array<ChargingSchedules_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSecurityInfosArgs = {
  _inc?: InputMaybe<ChargingStationSecurityInfos_Inc_Input>;
  _set?: InputMaybe<ChargingStationSecurityInfos_Set_Input>;
  where: ChargingStationSecurityInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSecurityInfos_By_PkArgs = {
  _inc?: InputMaybe<ChargingStationSecurityInfos_Inc_Input>;
  _set?: InputMaybe<ChargingStationSecurityInfos_Set_Input>;
  pk_columns: ChargingStationSecurityInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationSecurityInfos_ManyArgs = {
  updates: Array<ChargingStationSecurityInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStationsArgs = {
  _inc?: InputMaybe<ChargingStations_Inc_Input>;
  _set?: InputMaybe<ChargingStations_Set_Input>;
  where: ChargingStations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStations_By_PkArgs = {
  _inc?: InputMaybe<ChargingStations_Inc_Input>;
  _set?: InputMaybe<ChargingStations_Set_Input>;
  pk_columns: ChargingStations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ChargingStations_ManyArgs = {
  updates: Array<ChargingStations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ClientCredentialsRolesArgs = {
  _inc?: InputMaybe<ClientCredentialsRoles_Inc_Input>;
  _set?: InputMaybe<ClientCredentialsRoles_Set_Input>;
  where: ClientCredentialsRoles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ClientCredentialsRoles_By_PkArgs = {
  _inc?: InputMaybe<ClientCredentialsRoles_Inc_Input>;
  _set?: InputMaybe<ClientCredentialsRoles_Set_Input>;
  pk_columns: ClientCredentialsRoles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ClientCredentialsRoles_ManyArgs = {
  updates: Array<ClientCredentialsRoles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ClientInformationsArgs = {
  _inc?: InputMaybe<ClientInformations_Inc_Input>;
  _set?: InputMaybe<ClientInformations_Set_Input>;
  where: ClientInformations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ClientInformations_By_PkArgs = {
  _inc?: InputMaybe<ClientInformations_Inc_Input>;
  _set?: InputMaybe<ClientInformations_Set_Input>;
  pk_columns: ClientInformations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ClientInformations_ManyArgs = {
  updates: Array<ClientInformations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ClientVersionsArgs = {
  _inc?: InputMaybe<ClientVersions_Inc_Input>;
  _set?: InputMaybe<ClientVersions_Set_Input>;
  where: ClientVersions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ClientVersions_By_PkArgs = {
  _inc?: InputMaybe<ClientVersions_Inc_Input>;
  _set?: InputMaybe<ClientVersions_Set_Input>;
  pk_columns: ClientVersions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ClientVersions_ManyArgs = {
  updates: Array<ClientVersions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentVariablesArgs = {
  _inc?: InputMaybe<ComponentVariables_Inc_Input>;
  _set?: InputMaybe<ComponentVariables_Set_Input>;
  where: ComponentVariables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentVariables_By_PkArgs = {
  _inc?: InputMaybe<ComponentVariables_Inc_Input>;
  _set?: InputMaybe<ComponentVariables_Set_Input>;
  pk_columns: ComponentVariables_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentVariables_ManyArgs = {
  updates: Array<ComponentVariables_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ComponentsArgs = {
  _inc?: InputMaybe<Components_Inc_Input>;
  _set?: InputMaybe<Components_Set_Input>;
  where: Components_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Components_By_PkArgs = {
  _inc?: InputMaybe<Components_Inc_Input>;
  _set?: InputMaybe<Components_Set_Input>;
  pk_columns: Components_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Components_ManyArgs = {
  updates: Array<Components_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CompositeSchedulesArgs = {
  _append?: InputMaybe<CompositeSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<CompositeSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<CompositeSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<CompositeSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<CompositeSchedules_Inc_Input>;
  _prepend?: InputMaybe<CompositeSchedules_Prepend_Input>;
  _set?: InputMaybe<CompositeSchedules_Set_Input>;
  where: CompositeSchedules_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_CompositeSchedules_By_PkArgs = {
  _append?: InputMaybe<CompositeSchedules_Append_Input>;
  _delete_at_path?: InputMaybe<CompositeSchedules_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<CompositeSchedules_Delete_Elem_Input>;
  _delete_key?: InputMaybe<CompositeSchedules_Delete_Key_Input>;
  _inc?: InputMaybe<CompositeSchedules_Inc_Input>;
  _prepend?: InputMaybe<CompositeSchedules_Prepend_Input>;
  _set?: InputMaybe<CompositeSchedules_Set_Input>;
  pk_columns: CompositeSchedules_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_CompositeSchedules_ManyArgs = {
  updates: Array<CompositeSchedules_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_CpoTenantsArgs = {
  _inc?: InputMaybe<CpoTenants_Inc_Input>;
  _set?: InputMaybe<CpoTenants_Set_Input>;
  where: CpoTenants_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_CpoTenants_By_PkArgs = {
  _inc?: InputMaybe<CpoTenants_Inc_Input>;
  _set?: InputMaybe<CpoTenants_Set_Input>;
  pk_columns: CpoTenants_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_CpoTenants_ManyArgs = {
  updates: Array<CpoTenants_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EndpointsArgs = {
  _inc?: InputMaybe<Endpoints_Inc_Input>;
  _set?: InputMaybe<Endpoints_Set_Input>;
  where: Endpoints_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Endpoints_By_PkArgs = {
  _inc?: InputMaybe<Endpoints_Inc_Input>;
  _set?: InputMaybe<Endpoints_Set_Input>;
  pk_columns: Endpoints_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Endpoints_ManyArgs = {
  updates: Array<Endpoints_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EventDataArgs = {
  _inc?: InputMaybe<EventData_Inc_Input>;
  _set?: InputMaybe<EventData_Set_Input>;
  where: EventData_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_EventData_By_PkArgs = {
  _inc?: InputMaybe<EventData_Inc_Input>;
  _set?: InputMaybe<EventData_Set_Input>;
  pk_columns: EventData_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_EventData_ManyArgs = {
  updates: Array<EventData_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_EvsesArgs = {
  _inc?: InputMaybe<Evses_Inc_Input>;
  _set?: InputMaybe<Evses_Set_Input>;
  where: Evses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Evses_By_PkArgs = {
  _inc?: InputMaybe<Evses_Inc_Input>;
  _set?: InputMaybe<Evses_Set_Input>;
  pk_columns: Evses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Evses_ManyArgs = {
  updates: Array<Evses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokenAdditionalInfosArgs = {
  _inc?: InputMaybe<IdTokenAdditionalInfos_Inc_Input>;
  _set?: InputMaybe<IdTokenAdditionalInfos_Set_Input>;
  where: IdTokenAdditionalInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokenAdditionalInfos_By_PkArgs = {
  _inc?: InputMaybe<IdTokenAdditionalInfos_Inc_Input>;
  _set?: InputMaybe<IdTokenAdditionalInfos_Set_Input>;
  pk_columns: IdTokenAdditionalInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokenAdditionalInfos_ManyArgs = {
  updates: Array<IdTokenAdditionalInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokenInfosArgs = {
  _inc?: InputMaybe<IdTokenInfos_Inc_Input>;
  _set?: InputMaybe<IdTokenInfos_Set_Input>;
  where: IdTokenInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokenInfos_By_PkArgs = {
  _inc?: InputMaybe<IdTokenInfos_Inc_Input>;
  _set?: InputMaybe<IdTokenInfos_Set_Input>;
  pk_columns: IdTokenInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokenInfos_ManyArgs = {
  updates: Array<IdTokenInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokensArgs = {
  _inc?: InputMaybe<IdTokens_Inc_Input>;
  _set?: InputMaybe<IdTokens_Set_Input>;
  where: IdTokens_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokens_By_PkArgs = {
  _inc?: InputMaybe<IdTokens_Inc_Input>;
  _set?: InputMaybe<IdTokens_Set_Input>;
  pk_columns: IdTokens_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_IdTokens_ManyArgs = {
  updates: Array<IdTokens_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ImagesArgs = {
  _inc?: InputMaybe<Images_Inc_Input>;
  _set?: InputMaybe<Images_Set_Input>;
  where: Images_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Images_By_PkArgs = {
  _inc?: InputMaybe<Images_Inc_Input>;
  _set?: InputMaybe<Images_Set_Input>;
  pk_columns: Images_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Images_ManyArgs = {
  updates: Array<Images_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_LocationsArgs = {
  _inc?: InputMaybe<Locations_Inc_Input>;
  _set?: InputMaybe<Locations_Set_Input>;
  where: Locations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Locations_By_PkArgs = {
  _inc?: InputMaybe<Locations_Inc_Input>;
  _set?: InputMaybe<Locations_Set_Input>;
  pk_columns: Locations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Locations_ManyArgs = {
  updates: Array<Locations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_MessageInfosArgs = {
  _inc?: InputMaybe<MessageInfos_Inc_Input>;
  _set?: InputMaybe<MessageInfos_Set_Input>;
  where: MessageInfos_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_MessageInfos_By_PkArgs = {
  _inc?: InputMaybe<MessageInfos_Inc_Input>;
  _set?: InputMaybe<MessageInfos_Set_Input>;
  pk_columns: MessageInfos_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_MessageInfos_ManyArgs = {
  updates: Array<MessageInfos_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_MeterValuesArgs = {
  _inc?: InputMaybe<MeterValues_Inc_Input>;
  _set?: InputMaybe<MeterValues_Set_Input>;
  where: MeterValues_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_MeterValues_By_PkArgs = {
  _inc?: InputMaybe<MeterValues_Inc_Input>;
  _set?: InputMaybe<MeterValues_Set_Input>;
  pk_columns: MeterValues_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_MeterValues_ManyArgs = {
  updates: Array<MeterValues_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiConnectorsArgs = {
  _inc?: InputMaybe<OcpiConnectors_Inc_Input>;
  _set?: InputMaybe<OcpiConnectors_Set_Input>;
  where: OcpiConnectors_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiConnectors_By_PkArgs = {
  _inc?: InputMaybe<OcpiConnectors_Inc_Input>;
  _set?: InputMaybe<OcpiConnectors_Set_Input>;
  pk_columns: OcpiConnectors_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiConnectors_ManyArgs = {
  updates: Array<OcpiConnectors_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiEvsesArgs = {
  _inc?: InputMaybe<OcpiEvses_Inc_Input>;
  _set?: InputMaybe<OcpiEvses_Set_Input>;
  where: OcpiEvses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiEvses_By_PkArgs = {
  _inc?: InputMaybe<OcpiEvses_Inc_Input>;
  _set?: InputMaybe<OcpiEvses_Set_Input>;
  pk_columns: OcpiEvses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiEvses_ManyArgs = {
  updates: Array<OcpiEvses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiLocationsArgs = {
  _inc?: InputMaybe<OcpiLocations_Inc_Input>;
  _set?: InputMaybe<OcpiLocations_Set_Input>;
  where: OcpiLocations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiLocations_By_PkArgs = {
  _inc?: InputMaybe<OcpiLocations_Inc_Input>;
  _set?: InputMaybe<OcpiLocations_Set_Input>;
  pk_columns: OcpiLocations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiLocations_ManyArgs = {
  updates: Array<OcpiLocations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiReservationsArgs = {
  _inc?: InputMaybe<OcpiReservations_Inc_Input>;
  _set?: InputMaybe<OcpiReservations_Set_Input>;
  where: OcpiReservations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiReservations_By_PkArgs = {
  _inc?: InputMaybe<OcpiReservations_Inc_Input>;
  _set?: InputMaybe<OcpiReservations_Set_Input>;
  pk_columns: OcpiReservations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiReservations_ManyArgs = {
  updates: Array<OcpiReservations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiTariffsArgs = {
  _inc?: InputMaybe<OcpiTariffs_Inc_Input>;
  _set?: InputMaybe<OcpiTariffs_Set_Input>;
  where: OcpiTariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiTariffs_By_PkArgs = {
  _inc?: InputMaybe<OcpiTariffs_Inc_Input>;
  _set?: InputMaybe<OcpiTariffs_Set_Input>;
  pk_columns: OcpiTariffs_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiTariffs_ManyArgs = {
  updates: Array<OcpiTariffs_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiTokensArgs = {
  _inc?: InputMaybe<OcpiTokens_Inc_Input>;
  _set?: InputMaybe<OcpiTokens_Set_Input>;
  where: OcpiTokens_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiTokens_By_PkArgs = {
  _inc?: InputMaybe<OcpiTokens_Inc_Input>;
  _set?: InputMaybe<OcpiTokens_Set_Input>;
  pk_columns: OcpiTokens_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_OcpiTokens_ManyArgs = {
  updates: Array<OcpiTokens_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ReservationsArgs = {
  _append?: InputMaybe<Reservations_Append_Input>;
  _delete_at_path?: InputMaybe<Reservations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reservations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reservations_Delete_Key_Input>;
  _inc?: InputMaybe<Reservations_Inc_Input>;
  _prepend?: InputMaybe<Reservations_Prepend_Input>;
  _set?: InputMaybe<Reservations_Set_Input>;
  where: Reservations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Reservations_By_PkArgs = {
  _append?: InputMaybe<Reservations_Append_Input>;
  _delete_at_path?: InputMaybe<Reservations_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reservations_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reservations_Delete_Key_Input>;
  _inc?: InputMaybe<Reservations_Inc_Input>;
  _prepend?: InputMaybe<Reservations_Prepend_Input>;
  _set?: InputMaybe<Reservations_Set_Input>;
  pk_columns: Reservations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Reservations_ManyArgs = {
  updates: Array<Reservations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ResponseUrlCorrelationIdsArgs = {
  _inc?: InputMaybe<ResponseUrlCorrelationIds_Inc_Input>;
  _set?: InputMaybe<ResponseUrlCorrelationIds_Set_Input>;
  where: ResponseUrlCorrelationIds_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ResponseUrlCorrelationIds_By_PkArgs = {
  _inc?: InputMaybe<ResponseUrlCorrelationIds_Inc_Input>;
  _set?: InputMaybe<ResponseUrlCorrelationIds_Set_Input>;
  pk_columns: ResponseUrlCorrelationIds_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ResponseUrlCorrelationIds_ManyArgs = {
  updates: Array<ResponseUrlCorrelationIds_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SalesTariffsArgs = {
  _append?: InputMaybe<SalesTariffs_Append_Input>;
  _delete_at_path?: InputMaybe<SalesTariffs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<SalesTariffs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<SalesTariffs_Delete_Key_Input>;
  _inc?: InputMaybe<SalesTariffs_Inc_Input>;
  _prepend?: InputMaybe<SalesTariffs_Prepend_Input>;
  _set?: InputMaybe<SalesTariffs_Set_Input>;
  where: SalesTariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SalesTariffs_By_PkArgs = {
  _append?: InputMaybe<SalesTariffs_Append_Input>;
  _delete_at_path?: InputMaybe<SalesTariffs_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<SalesTariffs_Delete_Elem_Input>;
  _delete_key?: InputMaybe<SalesTariffs_Delete_Key_Input>;
  _inc?: InputMaybe<SalesTariffs_Inc_Input>;
  _prepend?: InputMaybe<SalesTariffs_Prepend_Input>;
  _set?: InputMaybe<SalesTariffs_Set_Input>;
  pk_columns: SalesTariffs_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SalesTariffs_ManyArgs = {
  updates: Array<SalesTariffs_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SecurityEventsArgs = {
  _inc?: InputMaybe<SecurityEvents_Inc_Input>;
  _set?: InputMaybe<SecurityEvents_Set_Input>;
  where: SecurityEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SecurityEvents_By_PkArgs = {
  _inc?: InputMaybe<SecurityEvents_Inc_Input>;
  _set?: InputMaybe<SecurityEvents_Set_Input>;
  pk_columns: SecurityEvents_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SecurityEvents_ManyArgs = {
  updates: Array<SecurityEvents_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ServerCredentialsRolesArgs = {
  _inc?: InputMaybe<ServerCredentialsRoles_Inc_Input>;
  _set?: InputMaybe<ServerCredentialsRoles_Set_Input>;
  where: ServerCredentialsRoles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ServerCredentialsRoles_By_PkArgs = {
  _inc?: InputMaybe<ServerCredentialsRoles_Inc_Input>;
  _set?: InputMaybe<ServerCredentialsRoles_Set_Input>;
  pk_columns: ServerCredentialsRoles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ServerCredentialsRoles_ManyArgs = {
  updates: Array<ServerCredentialsRoles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_ServerVersionsArgs = {
  _inc?: InputMaybe<ServerVersions_Inc_Input>;
  _set?: InputMaybe<ServerVersions_Set_Input>;
  where: ServerVersions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_ServerVersions_By_PkArgs = {
  _inc?: InputMaybe<ServerVersions_Inc_Input>;
  _set?: InputMaybe<ServerVersions_Set_Input>;
  pk_columns: ServerVersions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_ServerVersions_ManyArgs = {
  updates: Array<ServerVersions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SessionChargingProfilesArgs = {
  _inc?: InputMaybe<SessionChargingProfiles_Inc_Input>;
  _set?: InputMaybe<SessionChargingProfiles_Set_Input>;
  where: SessionChargingProfiles_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_SessionChargingProfiles_By_PkArgs = {
  _inc?: InputMaybe<SessionChargingProfiles_Inc_Input>;
  _set?: InputMaybe<SessionChargingProfiles_Set_Input>;
  pk_columns: SessionChargingProfiles_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_SessionChargingProfiles_ManyArgs = {
  updates: Array<SessionChargingProfiles_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_StatusNotificationsArgs = {
  _inc?: InputMaybe<StatusNotifications_Inc_Input>;
  _set?: InputMaybe<StatusNotifications_Set_Input>;
  where: StatusNotifications_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_StatusNotifications_By_PkArgs = {
  _inc?: InputMaybe<StatusNotifications_Inc_Input>;
  _set?: InputMaybe<StatusNotifications_Set_Input>;
  pk_columns: StatusNotifications_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_StatusNotifications_ManyArgs = {
  updates: Array<StatusNotifications_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_SubscriptionsArgs = {
  _inc?: InputMaybe<Subscriptions_Inc_Input>;
  _set?: InputMaybe<Subscriptions_Set_Input>;
  where: Subscriptions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Subscriptions_By_PkArgs = {
  _inc?: InputMaybe<Subscriptions_Inc_Input>;
  _set?: InputMaybe<Subscriptions_Set_Input>;
  pk_columns: Subscriptions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Subscriptions_ManyArgs = {
  updates: Array<Subscriptions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TariffsArgs = {
  _inc?: InputMaybe<Tariffs_Inc_Input>;
  _set?: InputMaybe<Tariffs_Set_Input>;
  where: Tariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Tariffs_By_PkArgs = {
  _inc?: InputMaybe<Tariffs_Inc_Input>;
  _set?: InputMaybe<Tariffs_Set_Input>;
  pk_columns: Tariffs_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Tariffs_ManyArgs = {
  updates: Array<Tariffs_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionEventsArgs = {
  _inc?: InputMaybe<TransactionEvents_Inc_Input>;
  _set?: InputMaybe<TransactionEvents_Set_Input>;
  where: TransactionEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionEvents_By_PkArgs = {
  _inc?: InputMaybe<TransactionEvents_Inc_Input>;
  _set?: InputMaybe<TransactionEvents_Set_Input>;
  pk_columns: TransactionEvents_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionEvents_ManyArgs = {
  updates: Array<TransactionEvents_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_TransactionsArgs = {
  _inc?: InputMaybe<Transactions_Inc_Input>;
  _set?: InputMaybe<Transactions_Set_Input>;
  where: Transactions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Transactions_By_PkArgs = {
  _inc?: InputMaybe<Transactions_Inc_Input>;
  _set?: InputMaybe<Transactions_Set_Input>;
  pk_columns: Transactions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Transactions_ManyArgs = {
  updates: Array<Transactions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableAttributesArgs = {
  _inc?: InputMaybe<VariableAttributes_Inc_Input>;
  _set?: InputMaybe<VariableAttributes_Set_Input>;
  where: VariableAttributes_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableAttributes_By_PkArgs = {
  _inc?: InputMaybe<VariableAttributes_Inc_Input>;
  _set?: InputMaybe<VariableAttributes_Set_Input>;
  pk_columns: VariableAttributes_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableAttributes_ManyArgs = {
  updates: Array<VariableAttributes_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableCharacteristicsArgs = {
  _inc?: InputMaybe<VariableCharacteristics_Inc_Input>;
  _set?: InputMaybe<VariableCharacteristics_Set_Input>;
  where: VariableCharacteristics_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableCharacteristics_By_PkArgs = {
  _inc?: InputMaybe<VariableCharacteristics_Inc_Input>;
  _set?: InputMaybe<VariableCharacteristics_Set_Input>;
  pk_columns: VariableCharacteristics_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableCharacteristics_ManyArgs = {
  updates: Array<VariableCharacteristics_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringStatusesArgs = {
  _inc?: InputMaybe<VariableMonitoringStatuses_Inc_Input>;
  _set?: InputMaybe<VariableMonitoringStatuses_Set_Input>;
  where: VariableMonitoringStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringStatuses_By_PkArgs = {
  _inc?: InputMaybe<VariableMonitoringStatuses_Inc_Input>;
  _set?: InputMaybe<VariableMonitoringStatuses_Set_Input>;
  pk_columns: VariableMonitoringStatuses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringStatuses_ManyArgs = {
  updates: Array<VariableMonitoringStatuses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitoringsArgs = {
  _inc?: InputMaybe<VariableMonitorings_Inc_Input>;
  _set?: InputMaybe<VariableMonitorings_Set_Input>;
  where: VariableMonitorings_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitorings_By_PkArgs = {
  _inc?: InputMaybe<VariableMonitorings_Inc_Input>;
  _set?: InputMaybe<VariableMonitorings_Set_Input>;
  pk_columns: VariableMonitorings_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableMonitorings_ManyArgs = {
  updates: Array<VariableMonitorings_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariableStatusesArgs = {
  _inc?: InputMaybe<VariableStatuses_Inc_Input>;
  _set?: InputMaybe<VariableStatuses_Set_Input>;
  where: VariableStatuses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VariableStatuses_By_PkArgs = {
  _inc?: InputMaybe<VariableStatuses_Inc_Input>;
  _set?: InputMaybe<VariableStatuses_Set_Input>;
  pk_columns: VariableStatuses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VariableStatuses_ManyArgs = {
  updates: Array<VariableStatuses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VariablesArgs = {
  _inc?: InputMaybe<Variables_Inc_Input>;
  _set?: InputMaybe<Variables_Set_Input>;
  where: Variables_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Variables_By_PkArgs = {
  _inc?: InputMaybe<Variables_Inc_Input>;
  _set?: InputMaybe<Variables_Set_Input>;
  pk_columns: Variables_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Variables_ManyArgs = {
  updates: Array<Variables_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VersionEndpointsArgs = {
  _inc?: InputMaybe<VersionEndpoints_Inc_Input>;
  _set?: InputMaybe<VersionEndpoints_Set_Input>;
  where: VersionEndpoints_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_VersionEndpoints_By_PkArgs = {
  _inc?: InputMaybe<VersionEndpoints_Inc_Input>;
  _set?: InputMaybe<VersionEndpoints_Set_Input>;
  pk_columns: VersionEndpoints_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_VersionEndpoints_ManyArgs = {
  updates: Array<VersionEndpoints_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_VersionsArgs = {
  _inc?: InputMaybe<Versions_Inc_Input>;
  _set?: InputMaybe<Versions_Set_Input>;
  where: Versions_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Versions_By_PkArgs = {
  _inc?: InputMaybe<Versions_Inc_Input>;
  _set?: InputMaybe<Versions_Set_Input>;
  pk_columns: Versions_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Versions_ManyArgs = {
  updates: Array<Versions_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_CheckoutsArgs = {
  _inc?: InputMaybe<Payment_Checkouts_Inc_Input>;
  _set?: InputMaybe<Payment_Checkouts_Set_Input>;
  where: Payment_Checkouts_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Checkouts_By_PkArgs = {
  _inc?: InputMaybe<Payment_Checkouts_Inc_Input>;
  _set?: InputMaybe<Payment_Checkouts_Set_Input>;
  pk_columns: Payment_Checkouts_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Checkouts_ManyArgs = {
  updates: Array<Payment_Checkouts_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_ConnectorsArgs = {
  _inc?: InputMaybe<Payment_Connectors_Inc_Input>;
  _set?: InputMaybe<Payment_Connectors_Set_Input>;
  where: Payment_Connectors_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Connectors_By_PkArgs = {
  _inc?: InputMaybe<Payment_Connectors_Inc_Input>;
  _set?: InputMaybe<Payment_Connectors_Set_Input>;
  pk_columns: Payment_Connectors_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Connectors_ManyArgs = {
  updates: Array<Payment_Connectors_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_EvsesArgs = {
  _inc?: InputMaybe<Payment_Evses_Inc_Input>;
  _set?: InputMaybe<Payment_Evses_Set_Input>;
  where: Payment_Evses_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Evses_By_PkArgs = {
  _inc?: InputMaybe<Payment_Evses_Inc_Input>;
  _set?: InputMaybe<Payment_Evses_Set_Input>;
  pk_columns: Payment_Evses_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Evses_ManyArgs = {
  updates: Array<Payment_Evses_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_LocationsArgs = {
  _inc?: InputMaybe<Payment_Locations_Inc_Input>;
  _set?: InputMaybe<Payment_Locations_Set_Input>;
  where: Payment_Locations_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Locations_By_PkArgs = {
  _inc?: InputMaybe<Payment_Locations_Inc_Input>;
  _set?: InputMaybe<Payment_Locations_Set_Input>;
  pk_columns: Payment_Locations_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Locations_ManyArgs = {
  updates: Array<Payment_Locations_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_OperatorsArgs = {
  _inc?: InputMaybe<Payment_Operators_Inc_Input>;
  _set?: InputMaybe<Payment_Operators_Set_Input>;
  where: Payment_Operators_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Operators_By_PkArgs = {
  _inc?: InputMaybe<Payment_Operators_Inc_Input>;
  _set?: InputMaybe<Payment_Operators_Set_Input>;
  pk_columns: Payment_Operators_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Operators_ManyArgs = {
  updates: Array<Payment_Operators_Updates>;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_TariffsArgs = {
  _inc?: InputMaybe<Payment_Tariffs_Inc_Input>;
  _set?: InputMaybe<Payment_Tariffs_Set_Input>;
  where: Payment_Tariffs_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Tariffs_By_PkArgs = {
  _inc?: InputMaybe<Payment_Tariffs_Inc_Input>;
  _set?: InputMaybe<Payment_Tariffs_Set_Input>;
  pk_columns: Payment_Tariffs_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Payment_Tariffs_ManyArgs = {
  updates: Array<Payment_Tariffs_Updates>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']['input']>;
  _gt?: InputMaybe<Scalars['numeric']['input']>;
  _gte?: InputMaybe<Scalars['numeric']['input']>;
  _in?: InputMaybe<Array<Scalars['numeric']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['numeric']['input']>;
  _lte?: InputMaybe<Scalars['numeric']['input']>;
  _neq?: InputMaybe<Scalars['numeric']['input']>;
  _nin?: InputMaybe<Array<Scalars['numeric']['input']>>;
};

/** column ordering options */
export type Order_By =
  /** in ascending order, nulls last */
  | 'asc'
  /** in ascending order, nulls first */
  | 'asc_nulls_first'
  /** in ascending order, nulls last */
  | 'asc_nulls_last'
  /** in descending order, nulls first */
  | 'desc'
  /** in descending order, nulls first */
  | 'desc_nulls_first'
  /** in descending order, nulls last */
  | 'desc_nulls_last';

/** columns and relationships of "payment_checkouts" */
export type Payment_Checkouts = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  /** An object relationship */
  payment_connector?: Maybe<Payment_Connectors>;
  payment_intent_id?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  payment_tariff?: Maybe<Payment_Tariffs>;
  power_active_import?: Maybe<Scalars['float8']['output']>;
  qr_code_message_id?: Maybe<Scalars['Int']['output']>;
  remote_request_status?: Maybe<Scalars['String']['output']>;
  remote_request_transaction_id?: Maybe<Scalars['String']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
  transaction_end_time?: Maybe<Scalars['timestamptz']['output']>;
  transaction_kwh?: Maybe<Scalars['float8']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['float8']['output']>;
  transaction_start_time?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregated selection of "payment_checkouts" */
export type Payment_Checkouts_Aggregate = {
  aggregate?: Maybe<Payment_Checkouts_Aggregate_Fields>;
  nodes: Array<Payment_Checkouts>;
};

export type Payment_Checkouts_Aggregate_Bool_Exp = {
  avg?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Avg>;
  corr?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp_Var_Samp>;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Avg = {
  arguments: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Corr = {
  arguments: Payment_Checkouts_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Corr_Arguments = {
  X: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Max = {
  arguments: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Min = {
  arguments: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Sum = {
  arguments: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Payment_Checkouts_Aggregate_Bool_Exp_Var_Samp = {
  arguments: Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "payment_checkouts" */
export type Payment_Checkouts_Aggregate_Fields = {
  avg?: Maybe<Payment_Checkouts_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Payment_Checkouts_Max_Fields>;
  min?: Maybe<Payment_Checkouts_Min_Fields>;
  stddev?: Maybe<Payment_Checkouts_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Checkouts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Checkouts_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Checkouts_Sum_Fields>;
  var_pop?: Maybe<Payment_Checkouts_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Checkouts_Var_Samp_Fields>;
  variance?: Maybe<Payment_Checkouts_Variance_Fields>;
};

/** aggregate fields of "payment_checkouts" */
export type Payment_Checkouts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payment_checkouts" */
export type Payment_Checkouts_Aggregate_Order_By = {
  avg?: InputMaybe<Payment_Checkouts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Payment_Checkouts_Max_Order_By>;
  min?: InputMaybe<Payment_Checkouts_Min_Order_By>;
  stddev?: InputMaybe<Payment_Checkouts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Payment_Checkouts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Payment_Checkouts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Payment_Checkouts_Sum_Order_By>;
  var_pop?: InputMaybe<Payment_Checkouts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Payment_Checkouts_Var_Samp_Order_By>;
  variance?: InputMaybe<Payment_Checkouts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "payment_checkouts" */
export type Payment_Checkouts_Arr_Rel_Insert_Input = {
  data: Array<Payment_Checkouts_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Checkouts_On_Conflict>;
};

/** aggregate avg on columns */
export type Payment_Checkouts_Avg_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Avg_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "payment_checkouts". All fields are combined with a logical 'AND'. */
export type Payment_Checkouts_Bool_Exp = {
  _and?: InputMaybe<Array<Payment_Checkouts_Bool_Exp>>;
  _not?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  _or?: InputMaybe<Array<Payment_Checkouts_Bool_Exp>>;
  authorization_amount?: InputMaybe<Float_Comparison_Exp>;
  connector_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  payment_connector?: InputMaybe<Payment_Connectors_Bool_Exp>;
  payment_intent_id?: InputMaybe<String_Comparison_Exp>;
  payment_tariff?: InputMaybe<Payment_Tariffs_Bool_Exp>;
  power_active_import?: InputMaybe<Float8_Comparison_Exp>;
  qr_code_message_id?: InputMaybe<Int_Comparison_Exp>;
  remote_request_status?: InputMaybe<String_Comparison_Exp>;
  remote_request_transaction_id?: InputMaybe<String_Comparison_Exp>;
  tariff_id?: InputMaybe<Int_Comparison_Exp>;
  transaction_end_time?: InputMaybe<Timestamptz_Comparison_Exp>;
  transaction_kwh?: InputMaybe<Float8_Comparison_Exp>;
  transaction_last_meter_reading?: InputMaybe<Float_Comparison_Exp>;
  transaction_soc?: InputMaybe<Float8_Comparison_Exp>;
  transaction_start_time?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_checkouts" */
export type Payment_Checkouts_Constraint =
  /** unique or primary key constraint on columns "payment_intent_id" */
  | 'ix_payment_checkouts_payment_intent_id'
  /** unique or primary key constraint on columns "id" */
  | 'payment_checkouts_pkey';

/** input type for incrementing numeric columns in table "payment_checkouts" */
export type Payment_Checkouts_Inc_Input = {
  authorization_amount?: InputMaybe<Scalars['Float']['input']>;
  connector_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  power_active_import?: InputMaybe<Scalars['float8']['input']>;
  qr_code_message_id?: InputMaybe<Scalars['Int']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
  transaction_kwh?: InputMaybe<Scalars['float8']['input']>;
  transaction_last_meter_reading?: InputMaybe<Scalars['Float']['input']>;
  transaction_soc?: InputMaybe<Scalars['float8']['input']>;
};

/** input type for inserting data into table "payment_checkouts" */
export type Payment_Checkouts_Insert_Input = {
  authorization_amount?: InputMaybe<Scalars['Float']['input']>;
  connector_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_connector?: InputMaybe<Payment_Connectors_Obj_Rel_Insert_Input>;
  payment_intent_id?: InputMaybe<Scalars['String']['input']>;
  payment_tariff?: InputMaybe<Payment_Tariffs_Obj_Rel_Insert_Input>;
  power_active_import?: InputMaybe<Scalars['float8']['input']>;
  qr_code_message_id?: InputMaybe<Scalars['Int']['input']>;
  remote_request_status?: InputMaybe<Scalars['String']['input']>;
  remote_request_transaction_id?: InputMaybe<Scalars['String']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
  transaction_end_time?: InputMaybe<Scalars['timestamptz']['input']>;
  transaction_kwh?: InputMaybe<Scalars['float8']['input']>;
  transaction_last_meter_reading?: InputMaybe<Scalars['Float']['input']>;
  transaction_soc?: InputMaybe<Scalars['float8']['input']>;
  transaction_start_time?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate max on columns */
export type Payment_Checkouts_Max_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  payment_intent_id?: Maybe<Scalars['String']['output']>;
  power_active_import?: Maybe<Scalars['float8']['output']>;
  qr_code_message_id?: Maybe<Scalars['Int']['output']>;
  remote_request_status?: Maybe<Scalars['String']['output']>;
  remote_request_transaction_id?: Maybe<Scalars['String']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
  transaction_end_time?: Maybe<Scalars['timestamptz']['output']>;
  transaction_kwh?: Maybe<Scalars['float8']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['float8']['output']>;
  transaction_start_time?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by max() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Max_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  payment_intent_id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  remote_request_status?: InputMaybe<Order_By>;
  remote_request_transaction_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_end_time?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
  transaction_start_time?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Payment_Checkouts_Min_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  payment_intent_id?: Maybe<Scalars['String']['output']>;
  power_active_import?: Maybe<Scalars['float8']['output']>;
  qr_code_message_id?: Maybe<Scalars['Int']['output']>;
  remote_request_status?: Maybe<Scalars['String']['output']>;
  remote_request_transaction_id?: Maybe<Scalars['String']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
  transaction_end_time?: Maybe<Scalars['timestamptz']['output']>;
  transaction_kwh?: Maybe<Scalars['float8']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['float8']['output']>;
  transaction_start_time?: Maybe<Scalars['timestamptz']['output']>;
};

/** order by min() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Min_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  payment_intent_id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  remote_request_status?: InputMaybe<Order_By>;
  remote_request_transaction_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_end_time?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
  transaction_start_time?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "payment_checkouts" */
export type Payment_Checkouts_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Checkouts>;
};

/** on_conflict condition type for table "payment_checkouts" */
export type Payment_Checkouts_On_Conflict = {
  constraint: Payment_Checkouts_Constraint;
  update_columns?: Array<Payment_Checkouts_Update_Column>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_checkouts". */
export type Payment_Checkouts_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  payment_connector?: InputMaybe<Payment_Connectors_Order_By>;
  payment_intent_id?: InputMaybe<Order_By>;
  payment_tariff?: InputMaybe<Payment_Tariffs_Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  remote_request_status?: InputMaybe<Order_By>;
  remote_request_transaction_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_end_time?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
  transaction_start_time?: InputMaybe<Order_By>;
};

/** primary key columns input for table: payment_checkouts */
export type Payment_Checkouts_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column =
  /** column name */
  | 'authorization_amount'
  /** column name */
  | 'connector_id'
  /** column name */
  | 'id'
  /** column name */
  | 'payment_intent_id'
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'qr_code_message_id'
  /** column name */
  | 'remote_request_status'
  /** column name */
  | 'remote_request_transaction_id'
  /** column name */
  | 'tariff_id'
  /** column name */
  | 'transaction_end_time'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_last_meter_reading'
  /** column name */
  | 'transaction_soc'
  /** column name */
  | 'transaction_start_time';

/** select "payment_checkouts_aggregate_bool_exp_avg_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Avg_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_corr_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Corr_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_max_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Max_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_min_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Min_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_sum_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Sum_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** select "payment_checkouts_aggregate_bool_exp_var_samp_arguments_columns" columns of table "payment_checkouts" */
export type Payment_Checkouts_Select_Column_Payment_Checkouts_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns =
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_soc';

/** input type for updating data in table "payment_checkouts" */
export type Payment_Checkouts_Set_Input = {
  authorization_amount?: InputMaybe<Scalars['Float']['input']>;
  connector_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_intent_id?: InputMaybe<Scalars['String']['input']>;
  power_active_import?: InputMaybe<Scalars['float8']['input']>;
  qr_code_message_id?: InputMaybe<Scalars['Int']['input']>;
  remote_request_status?: InputMaybe<Scalars['String']['input']>;
  remote_request_transaction_id?: InputMaybe<Scalars['String']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
  transaction_end_time?: InputMaybe<Scalars['timestamptz']['input']>;
  transaction_kwh?: InputMaybe<Scalars['float8']['input']>;
  transaction_last_meter_reading?: InputMaybe<Scalars['Float']['input']>;
  transaction_soc?: InputMaybe<Scalars['float8']['input']>;
  transaction_start_time?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate stddev on columns */
export type Payment_Checkouts_Stddev_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Stddev_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Payment_Checkouts_Stddev_Pop_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Stddev_Pop_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Payment_Checkouts_Stddev_Samp_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Stddev_Samp_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "payment_checkouts" */
export type Payment_Checkouts_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payment_Checkouts_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payment_Checkouts_Stream_Cursor_Value_Input = {
  authorization_amount?: InputMaybe<Scalars['Float']['input']>;
  connector_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_intent_id?: InputMaybe<Scalars['String']['input']>;
  power_active_import?: InputMaybe<Scalars['float8']['input']>;
  qr_code_message_id?: InputMaybe<Scalars['Int']['input']>;
  remote_request_status?: InputMaybe<Scalars['String']['input']>;
  remote_request_transaction_id?: InputMaybe<Scalars['String']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
  transaction_end_time?: InputMaybe<Scalars['timestamptz']['input']>;
  transaction_kwh?: InputMaybe<Scalars['float8']['input']>;
  transaction_last_meter_reading?: InputMaybe<Scalars['Float']['input']>;
  transaction_soc?: InputMaybe<Scalars['float8']['input']>;
  transaction_start_time?: InputMaybe<Scalars['timestamptz']['input']>;
};

/** aggregate sum on columns */
export type Payment_Checkouts_Sum_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  power_active_import?: Maybe<Scalars['float8']['output']>;
  qr_code_message_id?: Maybe<Scalars['Int']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
  transaction_kwh?: Maybe<Scalars['float8']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['float8']['output']>;
};

/** order by sum() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Sum_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** update columns of table "payment_checkouts" */
export type Payment_Checkouts_Update_Column =
  /** column name */
  | 'authorization_amount'
  /** column name */
  | 'connector_id'
  /** column name */
  | 'id'
  /** column name */
  | 'payment_intent_id'
  /** column name */
  | 'power_active_import'
  /** column name */
  | 'qr_code_message_id'
  /** column name */
  | 'remote_request_status'
  /** column name */
  | 'remote_request_transaction_id'
  /** column name */
  | 'tariff_id'
  /** column name */
  | 'transaction_end_time'
  /** column name */
  | 'transaction_kwh'
  /** column name */
  | 'transaction_last_meter_reading'
  /** column name */
  | 'transaction_soc'
  /** column name */
  | 'transaction_start_time';

export type Payment_Checkouts_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payment_Checkouts_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payment_Checkouts_Set_Input>;
  /** filter the rows which have to be updated */
  where: Payment_Checkouts_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payment_Checkouts_Var_Pop_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Var_Pop_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Payment_Checkouts_Var_Samp_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Var_Samp_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Payment_Checkouts_Variance_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  connector_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  power_active_import?: Maybe<Scalars['Float']['output']>;
  qr_code_message_id?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
  transaction_kwh?: Maybe<Scalars['Float']['output']>;
  transaction_last_meter_reading?: Maybe<Scalars['Float']['output']>;
  transaction_soc?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "payment_checkouts" */
export type Payment_Checkouts_Variance_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  connector_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  power_active_import?: InputMaybe<Order_By>;
  qr_code_message_id?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
  transaction_kwh?: InputMaybe<Order_By>;
  transaction_last_meter_reading?: InputMaybe<Order_By>;
  transaction_soc?: InputMaybe<Order_By>;
};

/** columns and relationships of "payment_connectors" */
export type Payment_Connectors = {
  connector_id: Scalars['String']['output'];
  evse_id?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  max_amperage: Scalars['Int']['output'];
  max_voltage: Scalars['Int']['output'];
  /** An array relationship */
  payment_checkouts: Array<Payment_Checkouts>;
  /** An aggregate relationship */
  payment_checkouts_aggregate: Payment_Checkouts_Aggregate;
  /** An object relationship */
  payment_evse?: Maybe<Payment_Evses>;
  /** An object relationship */
  payment_tariff?: Maybe<Payment_Tariffs>;
  power_type: Scalars['String']['output'];
  tariff_id?: Maybe<Scalars['Int']['output']>;
};

/** columns and relationships of "payment_connectors" */
export type Payment_ConnectorsPayment_CheckoutsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

/** columns and relationships of "payment_connectors" */
export type Payment_ConnectorsPayment_Checkouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

/** aggregated selection of "payment_connectors" */
export type Payment_Connectors_Aggregate = {
  aggregate?: Maybe<Payment_Connectors_Aggregate_Fields>;
  nodes: Array<Payment_Connectors>;
};

export type Payment_Connectors_Aggregate_Bool_Exp = {
  count?: InputMaybe<Payment_Connectors_Aggregate_Bool_Exp_Count>;
};

export type Payment_Connectors_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Connectors_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "payment_connectors" */
export type Payment_Connectors_Aggregate_Fields = {
  avg?: Maybe<Payment_Connectors_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Payment_Connectors_Max_Fields>;
  min?: Maybe<Payment_Connectors_Min_Fields>;
  stddev?: Maybe<Payment_Connectors_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Connectors_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Connectors_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Connectors_Sum_Fields>;
  var_pop?: Maybe<Payment_Connectors_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Connectors_Var_Samp_Fields>;
  variance?: Maybe<Payment_Connectors_Variance_Fields>;
};

/** aggregate fields of "payment_connectors" */
export type Payment_Connectors_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payment_connectors" */
export type Payment_Connectors_Aggregate_Order_By = {
  avg?: InputMaybe<Payment_Connectors_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Payment_Connectors_Max_Order_By>;
  min?: InputMaybe<Payment_Connectors_Min_Order_By>;
  stddev?: InputMaybe<Payment_Connectors_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Payment_Connectors_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Payment_Connectors_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Payment_Connectors_Sum_Order_By>;
  var_pop?: InputMaybe<Payment_Connectors_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Payment_Connectors_Var_Samp_Order_By>;
  variance?: InputMaybe<Payment_Connectors_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "payment_connectors" */
export type Payment_Connectors_Arr_Rel_Insert_Input = {
  data: Array<Payment_Connectors_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Connectors_On_Conflict>;
};

/** aggregate avg on columns */
export type Payment_Connectors_Avg_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "payment_connectors" */
export type Payment_Connectors_Avg_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "payment_connectors". All fields are combined with a logical 'AND'. */
export type Payment_Connectors_Bool_Exp = {
  _and?: InputMaybe<Array<Payment_Connectors_Bool_Exp>>;
  _not?: InputMaybe<Payment_Connectors_Bool_Exp>;
  _or?: InputMaybe<Array<Payment_Connectors_Bool_Exp>>;
  connector_id?: InputMaybe<String_Comparison_Exp>;
  evse_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  max_amperage?: InputMaybe<Int_Comparison_Exp>;
  max_voltage?: InputMaybe<Int_Comparison_Exp>;
  payment_checkouts?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  payment_checkouts_aggregate?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp>;
  payment_evse?: InputMaybe<Payment_Evses_Bool_Exp>;
  payment_tariff?: InputMaybe<Payment_Tariffs_Bool_Exp>;
  power_type?: InputMaybe<String_Comparison_Exp>;
  tariff_id?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_connectors" */
export type Payment_Connectors_Constraint =
  /** unique or primary key constraint on columns "id" */
  'payment_connectors_pkey';

/** input type for incrementing numeric columns in table "payment_connectors" */
export type Payment_Connectors_Inc_Input = {
  evse_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_amperage?: InputMaybe<Scalars['Int']['input']>;
  max_voltage?: InputMaybe<Scalars['Int']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payment_connectors" */
export type Payment_Connectors_Insert_Input = {
  connector_id?: InputMaybe<Scalars['String']['input']>;
  evse_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_amperage?: InputMaybe<Scalars['Int']['input']>;
  max_voltage?: InputMaybe<Scalars['Int']['input']>;
  payment_checkouts?: InputMaybe<Payment_Checkouts_Arr_Rel_Insert_Input>;
  payment_evse?: InputMaybe<Payment_Evses_Obj_Rel_Insert_Input>;
  payment_tariff?: InputMaybe<Payment_Tariffs_Obj_Rel_Insert_Input>;
  power_type?: InputMaybe<Scalars['String']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type Payment_Connectors_Max_Fields = {
  connector_id?: Maybe<Scalars['String']['output']>;
  evse_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_amperage?: Maybe<Scalars['Int']['output']>;
  max_voltage?: Maybe<Scalars['Int']['output']>;
  power_type?: Maybe<Scalars['String']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "payment_connectors" */
export type Payment_Connectors_Max_Order_By = {
  connector_id?: InputMaybe<Order_By>;
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  power_type?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Payment_Connectors_Min_Fields = {
  connector_id?: Maybe<Scalars['String']['output']>;
  evse_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_amperage?: Maybe<Scalars['Int']['output']>;
  max_voltage?: Maybe<Scalars['Int']['output']>;
  power_type?: Maybe<Scalars['String']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "payment_connectors" */
export type Payment_Connectors_Min_Order_By = {
  connector_id?: InputMaybe<Order_By>;
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  power_type?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "payment_connectors" */
export type Payment_Connectors_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Connectors>;
};

/** input type for inserting object relation for remote table "payment_connectors" */
export type Payment_Connectors_Obj_Rel_Insert_Input = {
  data: Payment_Connectors_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Connectors_On_Conflict>;
};

/** on_conflict condition type for table "payment_connectors" */
export type Payment_Connectors_On_Conflict = {
  constraint: Payment_Connectors_Constraint;
  update_columns?: Array<Payment_Connectors_Update_Column>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_connectors". */
export type Payment_Connectors_Order_By = {
  connector_id?: InputMaybe<Order_By>;
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  payment_checkouts_aggregate?: InputMaybe<Payment_Checkouts_Aggregate_Order_By>;
  payment_evse?: InputMaybe<Payment_Evses_Order_By>;
  payment_tariff?: InputMaybe<Payment_Tariffs_Order_By>;
  power_type?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: payment_connectors */
export type Payment_Connectors_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "payment_connectors" */
export type Payment_Connectors_Select_Column =
  /** column name */
  | 'connector_id'
  /** column name */
  | 'evse_id'
  /** column name */
  | 'id'
  /** column name */
  | 'max_amperage'
  /** column name */
  | 'max_voltage'
  /** column name */
  | 'power_type'
  /** column name */
  | 'tariff_id';

/** input type for updating data in table "payment_connectors" */
export type Payment_Connectors_Set_Input = {
  connector_id?: InputMaybe<Scalars['String']['input']>;
  evse_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_amperage?: InputMaybe<Scalars['Int']['input']>;
  max_voltage?: InputMaybe<Scalars['Int']['input']>;
  power_type?: InputMaybe<Scalars['String']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type Payment_Connectors_Stddev_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "payment_connectors" */
export type Payment_Connectors_Stddev_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Payment_Connectors_Stddev_Pop_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "payment_connectors" */
export type Payment_Connectors_Stddev_Pop_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Payment_Connectors_Stddev_Samp_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "payment_connectors" */
export type Payment_Connectors_Stddev_Samp_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "payment_connectors" */
export type Payment_Connectors_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payment_Connectors_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payment_Connectors_Stream_Cursor_Value_Input = {
  connector_id?: InputMaybe<Scalars['String']['input']>;
  evse_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  max_amperage?: InputMaybe<Scalars['Int']['input']>;
  max_voltage?: InputMaybe<Scalars['Int']['input']>;
  power_type?: InputMaybe<Scalars['String']['input']>;
  tariff_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type Payment_Connectors_Sum_Fields = {
  evse_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  max_amperage?: Maybe<Scalars['Int']['output']>;
  max_voltage?: Maybe<Scalars['Int']['output']>;
  tariff_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "payment_connectors" */
export type Payment_Connectors_Sum_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** update columns of table "payment_connectors" */
export type Payment_Connectors_Update_Column =
  /** column name */
  | 'connector_id'
  /** column name */
  | 'evse_id'
  /** column name */
  | 'id'
  /** column name */
  | 'max_amperage'
  /** column name */
  | 'max_voltage'
  /** column name */
  | 'power_type'
  /** column name */
  | 'tariff_id';

export type Payment_Connectors_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payment_Connectors_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payment_Connectors_Set_Input>;
  /** filter the rows which have to be updated */
  where: Payment_Connectors_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payment_Connectors_Var_Pop_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "payment_connectors" */
export type Payment_Connectors_Var_Pop_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Payment_Connectors_Var_Samp_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "payment_connectors" */
export type Payment_Connectors_Var_Samp_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Payment_Connectors_Variance_Fields = {
  evse_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  max_amperage?: Maybe<Scalars['Float']['output']>;
  max_voltage?: Maybe<Scalars['Float']['output']>;
  tariff_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "payment_connectors" */
export type Payment_Connectors_Variance_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  max_amperage?: InputMaybe<Order_By>;
  max_voltage?: InputMaybe<Order_By>;
  tariff_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "payment_evses" */
export type Payment_Evses = {
  evse_id: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  location_id?: Maybe<Scalars['Int']['output']>;
  ocpp_evse_id: Scalars['Int']['output'];
  /** An array relationship */
  payment_connectors: Array<Payment_Connectors>;
  /** An aggregate relationship */
  payment_connectors_aggregate: Payment_Connectors_Aggregate;
  /** An object relationship */
  payment_location?: Maybe<Payment_Locations>;
  station_id: Scalars['String']['output'];
  status: Scalars['String']['output'];
  tenant_id: Scalars['String']['output'];
};

/** columns and relationships of "payment_evses" */
export type Payment_EvsesPayment_ConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

/** columns and relationships of "payment_evses" */
export type Payment_EvsesPayment_Connectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

/** aggregated selection of "payment_evses" */
export type Payment_Evses_Aggregate = {
  aggregate?: Maybe<Payment_Evses_Aggregate_Fields>;
  nodes: Array<Payment_Evses>;
};

export type Payment_Evses_Aggregate_Bool_Exp = {
  count?: InputMaybe<Payment_Evses_Aggregate_Bool_Exp_Count>;
};

export type Payment_Evses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Evses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "payment_evses" */
export type Payment_Evses_Aggregate_Fields = {
  avg?: Maybe<Payment_Evses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Payment_Evses_Max_Fields>;
  min?: Maybe<Payment_Evses_Min_Fields>;
  stddev?: Maybe<Payment_Evses_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Evses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Evses_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Evses_Sum_Fields>;
  var_pop?: Maybe<Payment_Evses_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Evses_Var_Samp_Fields>;
  variance?: Maybe<Payment_Evses_Variance_Fields>;
};

/** aggregate fields of "payment_evses" */
export type Payment_Evses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payment_evses" */
export type Payment_Evses_Aggregate_Order_By = {
  avg?: InputMaybe<Payment_Evses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Payment_Evses_Max_Order_By>;
  min?: InputMaybe<Payment_Evses_Min_Order_By>;
  stddev?: InputMaybe<Payment_Evses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Payment_Evses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Payment_Evses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Payment_Evses_Sum_Order_By>;
  var_pop?: InputMaybe<Payment_Evses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Payment_Evses_Var_Samp_Order_By>;
  variance?: InputMaybe<Payment_Evses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "payment_evses" */
export type Payment_Evses_Arr_Rel_Insert_Input = {
  data: Array<Payment_Evses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Evses_On_Conflict>;
};

/** aggregate avg on columns */
export type Payment_Evses_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "payment_evses" */
export type Payment_Evses_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "payment_evses". All fields are combined with a logical 'AND'. */
export type Payment_Evses_Bool_Exp = {
  _and?: InputMaybe<Array<Payment_Evses_Bool_Exp>>;
  _not?: InputMaybe<Payment_Evses_Bool_Exp>;
  _or?: InputMaybe<Array<Payment_Evses_Bool_Exp>>;
  evse_id?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_id?: InputMaybe<Int_Comparison_Exp>;
  ocpp_evse_id?: InputMaybe<Int_Comparison_Exp>;
  payment_connectors?: InputMaybe<Payment_Connectors_Bool_Exp>;
  payment_connectors_aggregate?: InputMaybe<Payment_Connectors_Aggregate_Bool_Exp>;
  payment_location?: InputMaybe<Payment_Locations_Bool_Exp>;
  station_id?: InputMaybe<String_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  tenant_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_evses" */
export type Payment_Evses_Constraint =
  /** unique or primary key constraint on columns "evse_id" */
  | 'ix_payment_evses_evse_id'
  /** unique or primary key constraint on columns "id" */
  | 'payment_evses_pkey';

/** input type for incrementing numeric columns in table "payment_evses" */
export type Payment_Evses_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  ocpp_evse_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payment_evses" */
export type Payment_Evses_Insert_Input = {
  evse_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  ocpp_evse_id?: InputMaybe<Scalars['Int']['input']>;
  payment_connectors?: InputMaybe<Payment_Connectors_Arr_Rel_Insert_Input>;
  payment_location?: InputMaybe<Payment_Locations_Obj_Rel_Insert_Input>;
  station_id?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenant_id?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Payment_Evses_Max_Fields = {
  evse_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Int']['output']>;
  station_id?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenant_id?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "payment_evses" */
export type Payment_Evses_Max_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
  station_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenant_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Payment_Evses_Min_Fields = {
  evse_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Int']['output']>;
  station_id?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  tenant_id?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "payment_evses" */
export type Payment_Evses_Min_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
  station_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenant_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "payment_evses" */
export type Payment_Evses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Evses>;
};

/** input type for inserting object relation for remote table "payment_evses" */
export type Payment_Evses_Obj_Rel_Insert_Input = {
  data: Payment_Evses_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Evses_On_Conflict>;
};

/** on_conflict condition type for table "payment_evses" */
export type Payment_Evses_On_Conflict = {
  constraint: Payment_Evses_Constraint;
  update_columns?: Array<Payment_Evses_Update_Column>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_evses". */
export type Payment_Evses_Order_By = {
  evse_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
  payment_connectors_aggregate?: InputMaybe<Payment_Connectors_Aggregate_Order_By>;
  payment_location?: InputMaybe<Payment_Locations_Order_By>;
  station_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tenant_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: payment_evses */
export type Payment_Evses_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "payment_evses" */
export type Payment_Evses_Select_Column =
  /** column name */
  | 'evse_id'
  /** column name */
  | 'id'
  /** column name */
  | 'location_id'
  /** column name */
  | 'ocpp_evse_id'
  /** column name */
  | 'station_id'
  /** column name */
  | 'status'
  /** column name */
  | 'tenant_id';

/** input type for updating data in table "payment_evses" */
export type Payment_Evses_Set_Input = {
  evse_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  ocpp_evse_id?: InputMaybe<Scalars['Int']['input']>;
  station_id?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenant_id?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Payment_Evses_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "payment_evses" */
export type Payment_Evses_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Payment_Evses_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "payment_evses" */
export type Payment_Evses_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Payment_Evses_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "payment_evses" */
export type Payment_Evses_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "payment_evses" */
export type Payment_Evses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payment_Evses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payment_Evses_Stream_Cursor_Value_Input = {
  evse_id?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['Int']['input']>;
  ocpp_evse_id?: InputMaybe<Scalars['Int']['input']>;
  station_id?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tenant_id?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Payment_Evses_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['Int']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "payment_evses" */
export type Payment_Evses_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** update columns of table "payment_evses" */
export type Payment_Evses_Update_Column =
  /** column name */
  | 'evse_id'
  /** column name */
  | 'id'
  /** column name */
  | 'location_id'
  /** column name */
  | 'ocpp_evse_id'
  /** column name */
  | 'station_id'
  /** column name */
  | 'status'
  /** column name */
  | 'tenant_id';

export type Payment_Evses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payment_Evses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payment_Evses_Set_Input>;
  /** filter the rows which have to be updated */
  where: Payment_Evses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payment_Evses_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "payment_evses" */
export type Payment_Evses_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Payment_Evses_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "payment_evses" */
export type Payment_Evses_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Payment_Evses_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  location_id?: Maybe<Scalars['Float']['output']>;
  ocpp_evse_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "payment_evses" */
export type Payment_Evses_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  ocpp_evse_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "payment_locations" */
export type Payment_Locations = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  location_id: Scalars['String']['output'];
  operator_id?: Maybe<Scalars['Int']['output']>;
  /** An array relationship */
  payment_evses: Array<Payment_Evses>;
  /** An aggregate relationship */
  payment_evses_aggregate: Payment_Evses_Aggregate;
  /** An object relationship */
  payment_operator?: Maybe<Payment_Operators>;
  postal_code?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
};

/** columns and relationships of "payment_locations" */
export type Payment_LocationsPayment_EvsesArgs = {
  distinct_on?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Evses_Order_By>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

/** columns and relationships of "payment_locations" */
export type Payment_LocationsPayment_Evses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Evses_Order_By>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

/** aggregated selection of "payment_locations" */
export type Payment_Locations_Aggregate = {
  aggregate?: Maybe<Payment_Locations_Aggregate_Fields>;
  nodes: Array<Payment_Locations>;
};

export type Payment_Locations_Aggregate_Bool_Exp = {
  count?: InputMaybe<Payment_Locations_Aggregate_Bool_Exp_Count>;
};

export type Payment_Locations_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Payment_Locations_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "payment_locations" */
export type Payment_Locations_Aggregate_Fields = {
  avg?: Maybe<Payment_Locations_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Payment_Locations_Max_Fields>;
  min?: Maybe<Payment_Locations_Min_Fields>;
  stddev?: Maybe<Payment_Locations_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Locations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Locations_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Locations_Sum_Fields>;
  var_pop?: Maybe<Payment_Locations_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Locations_Var_Samp_Fields>;
  variance?: Maybe<Payment_Locations_Variance_Fields>;
};

/** aggregate fields of "payment_locations" */
export type Payment_Locations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "payment_locations" */
export type Payment_Locations_Aggregate_Order_By = {
  avg?: InputMaybe<Payment_Locations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Payment_Locations_Max_Order_By>;
  min?: InputMaybe<Payment_Locations_Min_Order_By>;
  stddev?: InputMaybe<Payment_Locations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Payment_Locations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Payment_Locations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Payment_Locations_Sum_Order_By>;
  var_pop?: InputMaybe<Payment_Locations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Payment_Locations_Var_Samp_Order_By>;
  variance?: InputMaybe<Payment_Locations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "payment_locations" */
export type Payment_Locations_Arr_Rel_Insert_Input = {
  data: Array<Payment_Locations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Locations_On_Conflict>;
};

/** aggregate avg on columns */
export type Payment_Locations_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "payment_locations" */
export type Payment_Locations_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "payment_locations". All fields are combined with a logical 'AND'. */
export type Payment_Locations_Bool_Exp = {
  _and?: InputMaybe<Array<Payment_Locations_Bool_Exp>>;
  _not?: InputMaybe<Payment_Locations_Bool_Exp>;
  _or?: InputMaybe<Array<Payment_Locations_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  city?: InputMaybe<String_Comparison_Exp>;
  country?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  location_id?: InputMaybe<String_Comparison_Exp>;
  operator_id?: InputMaybe<Int_Comparison_Exp>;
  payment_evses?: InputMaybe<Payment_Evses_Bool_Exp>;
  payment_evses_aggregate?: InputMaybe<Payment_Evses_Aggregate_Bool_Exp>;
  payment_operator?: InputMaybe<Payment_Operators_Bool_Exp>;
  postal_code?: InputMaybe<String_Comparison_Exp>;
  state?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_locations" */
export type Payment_Locations_Constraint =
  /** unique or primary key constraint on columns "location_id" */
  | 'ix_payment_locations_location_id'
  /** unique or primary key constraint on columns "id" */
  | 'payment_locations_pkey';

/** input type for incrementing numeric columns in table "payment_locations" */
export type Payment_Locations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  operator_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payment_locations" */
export type Payment_Locations_Insert_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['String']['input']>;
  operator_id?: InputMaybe<Scalars['Int']['input']>;
  payment_evses?: InputMaybe<Payment_Evses_Arr_Rel_Insert_Input>;
  payment_operator?: InputMaybe<Payment_Operators_Obj_Rel_Insert_Input>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Payment_Locations_Max_Fields = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['String']['output']>;
  operator_id?: Maybe<Scalars['Int']['output']>;
  postal_code?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "payment_locations" */
export type Payment_Locations_Max_Order_By = {
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
  postal_code?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Payment_Locations_Min_Fields = {
  address?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  location_id?: Maybe<Scalars['String']['output']>;
  operator_id?: Maybe<Scalars['Int']['output']>;
  postal_code?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "payment_locations" */
export type Payment_Locations_Min_Order_By = {
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
  postal_code?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "payment_locations" */
export type Payment_Locations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Locations>;
};

/** input type for inserting object relation for remote table "payment_locations" */
export type Payment_Locations_Obj_Rel_Insert_Input = {
  data: Payment_Locations_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Locations_On_Conflict>;
};

/** on_conflict condition type for table "payment_locations" */
export type Payment_Locations_On_Conflict = {
  constraint: Payment_Locations_Constraint;
  update_columns?: Array<Payment_Locations_Update_Column>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_locations". */
export type Payment_Locations_Order_By = {
  address?: InputMaybe<Order_By>;
  city?: InputMaybe<Order_By>;
  country?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  location_id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
  payment_evses_aggregate?: InputMaybe<Payment_Evses_Aggregate_Order_By>;
  payment_operator?: InputMaybe<Payment_Operators_Order_By>;
  postal_code?: InputMaybe<Order_By>;
  state?: InputMaybe<Order_By>;
};

/** primary key columns input for table: payment_locations */
export type Payment_Locations_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "payment_locations" */
export type Payment_Locations_Select_Column =
  /** column name */
  | 'address'
  /** column name */
  | 'city'
  /** column name */
  | 'country'
  /** column name */
  | 'id'
  /** column name */
  | 'location_id'
  /** column name */
  | 'operator_id'
  /** column name */
  | 'postal_code'
  /** column name */
  | 'state';

/** input type for updating data in table "payment_locations" */
export type Payment_Locations_Set_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['String']['input']>;
  operator_id?: InputMaybe<Scalars['Int']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Payment_Locations_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "payment_locations" */
export type Payment_Locations_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Payment_Locations_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "payment_locations" */
export type Payment_Locations_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Payment_Locations_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "payment_locations" */
export type Payment_Locations_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "payment_locations" */
export type Payment_Locations_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payment_Locations_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payment_Locations_Stream_Cursor_Value_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  location_id?: InputMaybe<Scalars['String']['input']>;
  operator_id?: InputMaybe<Scalars['Int']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Payment_Locations_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  operator_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "payment_locations" */
export type Payment_Locations_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** update columns of table "payment_locations" */
export type Payment_Locations_Update_Column =
  /** column name */
  | 'address'
  /** column name */
  | 'city'
  /** column name */
  | 'country'
  /** column name */
  | 'id'
  /** column name */
  | 'location_id'
  /** column name */
  | 'operator_id'
  /** column name */
  | 'postal_code'
  /** column name */
  | 'state';

export type Payment_Locations_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payment_Locations_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payment_Locations_Set_Input>;
  /** filter the rows which have to be updated */
  where: Payment_Locations_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payment_Locations_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "payment_locations" */
export type Payment_Locations_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Payment_Locations_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "payment_locations" */
export type Payment_Locations_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Payment_Locations_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
  operator_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "payment_locations" */
export type Payment_Locations_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  operator_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "payment_operators" */
export type Payment_Operators = {
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  payment_locations: Array<Payment_Locations>;
  /** An aggregate relationship */
  payment_locations_aggregate: Payment_Locations_Aggregate;
  stripe_account_id: Scalars['String']['output'];
};

/** columns and relationships of "payment_operators" */
export type Payment_OperatorsPayment_LocationsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Locations_Order_By>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

/** columns and relationships of "payment_operators" */
export type Payment_OperatorsPayment_Locations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Locations_Order_By>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

/** aggregated selection of "payment_operators" */
export type Payment_Operators_Aggregate = {
  aggregate?: Maybe<Payment_Operators_Aggregate_Fields>;
  nodes: Array<Payment_Operators>;
};

/** aggregate fields of "payment_operators" */
export type Payment_Operators_Aggregate_Fields = {
  avg?: Maybe<Payment_Operators_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Payment_Operators_Max_Fields>;
  min?: Maybe<Payment_Operators_Min_Fields>;
  stddev?: Maybe<Payment_Operators_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Operators_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Operators_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Operators_Sum_Fields>;
  var_pop?: Maybe<Payment_Operators_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Operators_Var_Samp_Fields>;
  variance?: Maybe<Payment_Operators_Variance_Fields>;
};

/** aggregate fields of "payment_operators" */
export type Payment_Operators_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payment_Operators_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Payment_Operators_Avg_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payment_operators". All fields are combined with a logical 'AND'. */
export type Payment_Operators_Bool_Exp = {
  _and?: InputMaybe<Array<Payment_Operators_Bool_Exp>>;
  _not?: InputMaybe<Payment_Operators_Bool_Exp>;
  _or?: InputMaybe<Array<Payment_Operators_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  payment_locations?: InputMaybe<Payment_Locations_Bool_Exp>;
  payment_locations_aggregate?: InputMaybe<Payment_Locations_Aggregate_Bool_Exp>;
  stripe_account_id?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_operators" */
export type Payment_Operators_Constraint =
  /** unique or primary key constraint on columns "name" */
  | 'ix_payment_operators_name'
  /** unique or primary key constraint on columns "id" */
  | 'payment_operators_pkey'
  /** unique or primary key constraint on columns "stripe_account_id" */
  | 'payment_operators_stripe_account_id_key';

/** input type for incrementing numeric columns in table "payment_operators" */
export type Payment_Operators_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "payment_operators" */
export type Payment_Operators_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  payment_locations?: InputMaybe<Payment_Locations_Arr_Rel_Insert_Input>;
  stripe_account_id?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Payment_Operators_Max_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stripe_account_id?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Payment_Operators_Min_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  stripe_account_id?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "payment_operators" */
export type Payment_Operators_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Operators>;
};

/** input type for inserting object relation for remote table "payment_operators" */
export type Payment_Operators_Obj_Rel_Insert_Input = {
  data: Payment_Operators_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Operators_On_Conflict>;
};

/** on_conflict condition type for table "payment_operators" */
export type Payment_Operators_On_Conflict = {
  constraint: Payment_Operators_Constraint;
  update_columns?: Array<Payment_Operators_Update_Column>;
  where?: InputMaybe<Payment_Operators_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_operators". */
export type Payment_Operators_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  payment_locations_aggregate?: InputMaybe<Payment_Locations_Aggregate_Order_By>;
  stripe_account_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: payment_operators */
export type Payment_Operators_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "payment_operators" */
export type Payment_Operators_Select_Column =
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'stripe_account_id';

/** input type for updating data in table "payment_operators" */
export type Payment_Operators_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  stripe_account_id?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Payment_Operators_Stddev_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Payment_Operators_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Payment_Operators_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payment_operators" */
export type Payment_Operators_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payment_Operators_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payment_Operators_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  stripe_account_id?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Payment_Operators_Sum_Fields = {
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "payment_operators" */
export type Payment_Operators_Update_Column =
  /** column name */
  | 'id'
  /** column name */
  | 'name'
  /** column name */
  | 'stripe_account_id';

export type Payment_Operators_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payment_Operators_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payment_Operators_Set_Input>;
  /** filter the rows which have to be updated */
  where: Payment_Operators_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payment_Operators_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Payment_Operators_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Payment_Operators_Variance_Fields = {
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "payment_tariffs" */
export type Payment_Tariffs = {
  authorization_amount: Scalars['float8']['output'];
  currency: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  /** An array relationship */
  payment_checkouts: Array<Payment_Checkouts>;
  /** An aggregate relationship */
  payment_checkouts_aggregate: Payment_Checkouts_Aggregate;
  /** An array relationship */
  payment_connectors: Array<Payment_Connectors>;
  /** An aggregate relationship */
  payment_connectors_aggregate: Payment_Connectors_Aggregate;
  payment_fee: Scalars['float8']['output'];
  price_kwh?: Maybe<Scalars['float8']['output']>;
  price_minute?: Maybe<Scalars['float8']['output']>;
  price_session?: Maybe<Scalars['float8']['output']>;
  stripe_price_id?: Maybe<Scalars['String']['output']>;
  tax_rate: Scalars['float8']['output'];
};

/** columns and relationships of "payment_tariffs" */
export type Payment_TariffsPayment_CheckoutsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

/** columns and relationships of "payment_tariffs" */
export type Payment_TariffsPayment_Checkouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

/** columns and relationships of "payment_tariffs" */
export type Payment_TariffsPayment_ConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

/** columns and relationships of "payment_tariffs" */
export type Payment_TariffsPayment_Connectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

/** aggregated selection of "payment_tariffs" */
export type Payment_Tariffs_Aggregate = {
  aggregate?: Maybe<Payment_Tariffs_Aggregate_Fields>;
  nodes: Array<Payment_Tariffs>;
};

/** aggregate fields of "payment_tariffs" */
export type Payment_Tariffs_Aggregate_Fields = {
  avg?: Maybe<Payment_Tariffs_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Payment_Tariffs_Max_Fields>;
  min?: Maybe<Payment_Tariffs_Min_Fields>;
  stddev?: Maybe<Payment_Tariffs_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Tariffs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Tariffs_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Tariffs_Sum_Fields>;
  var_pop?: Maybe<Payment_Tariffs_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Tariffs_Var_Samp_Fields>;
  variance?: Maybe<Payment_Tariffs_Variance_Fields>;
};

/** aggregate fields of "payment_tariffs" */
export type Payment_Tariffs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Payment_Tariffs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Payment_Tariffs_Avg_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "payment_tariffs". All fields are combined with a logical 'AND'. */
export type Payment_Tariffs_Bool_Exp = {
  _and?: InputMaybe<Array<Payment_Tariffs_Bool_Exp>>;
  _not?: InputMaybe<Payment_Tariffs_Bool_Exp>;
  _or?: InputMaybe<Array<Payment_Tariffs_Bool_Exp>>;
  authorization_amount?: InputMaybe<Float8_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  payment_checkouts?: InputMaybe<Payment_Checkouts_Bool_Exp>;
  payment_checkouts_aggregate?: InputMaybe<Payment_Checkouts_Aggregate_Bool_Exp>;
  payment_connectors?: InputMaybe<Payment_Connectors_Bool_Exp>;
  payment_connectors_aggregate?: InputMaybe<Payment_Connectors_Aggregate_Bool_Exp>;
  payment_fee?: InputMaybe<Float8_Comparison_Exp>;
  price_kwh?: InputMaybe<Float8_Comparison_Exp>;
  price_minute?: InputMaybe<Float8_Comparison_Exp>;
  price_session?: InputMaybe<Float8_Comparison_Exp>;
  stripe_price_id?: InputMaybe<String_Comparison_Exp>;
  tax_rate?: InputMaybe<Float8_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_tariffs" */
export type Payment_Tariffs_Constraint =
  /** unique or primary key constraint on columns "id" */
  | 'payment_tariffs_pkey'
  /** unique or primary key constraint on columns "stripe_price_id" */
  | 'payment_tariffs_stripe_price_id_key';

/** input type for incrementing numeric columns in table "payment_tariffs" */
export type Payment_Tariffs_Inc_Input = {
  authorization_amount?: InputMaybe<Scalars['float8']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_fee?: InputMaybe<Scalars['float8']['input']>;
  price_kwh?: InputMaybe<Scalars['float8']['input']>;
  price_minute?: InputMaybe<Scalars['float8']['input']>;
  price_session?: InputMaybe<Scalars['float8']['input']>;
  tax_rate?: InputMaybe<Scalars['float8']['input']>;
};

/** input type for inserting data into table "payment_tariffs" */
export type Payment_Tariffs_Insert_Input = {
  authorization_amount?: InputMaybe<Scalars['float8']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_checkouts?: InputMaybe<Payment_Checkouts_Arr_Rel_Insert_Input>;
  payment_connectors?: InputMaybe<Payment_Connectors_Arr_Rel_Insert_Input>;
  payment_fee?: InputMaybe<Scalars['float8']['input']>;
  price_kwh?: InputMaybe<Scalars['float8']['input']>;
  price_minute?: InputMaybe<Scalars['float8']['input']>;
  price_session?: InputMaybe<Scalars['float8']['input']>;
  stripe_price_id?: InputMaybe<Scalars['String']['input']>;
  tax_rate?: InputMaybe<Scalars['float8']['input']>;
};

/** aggregate max on columns */
export type Payment_Tariffs_Max_Fields = {
  authorization_amount?: Maybe<Scalars['float8']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  payment_fee?: Maybe<Scalars['float8']['output']>;
  price_kwh?: Maybe<Scalars['float8']['output']>;
  price_minute?: Maybe<Scalars['float8']['output']>;
  price_session?: Maybe<Scalars['float8']['output']>;
  stripe_price_id?: Maybe<Scalars['String']['output']>;
  tax_rate?: Maybe<Scalars['float8']['output']>;
};

/** aggregate min on columns */
export type Payment_Tariffs_Min_Fields = {
  authorization_amount?: Maybe<Scalars['float8']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  payment_fee?: Maybe<Scalars['float8']['output']>;
  price_kwh?: Maybe<Scalars['float8']['output']>;
  price_minute?: Maybe<Scalars['float8']['output']>;
  price_session?: Maybe<Scalars['float8']['output']>;
  stripe_price_id?: Maybe<Scalars['String']['output']>;
  tax_rate?: Maybe<Scalars['float8']['output']>;
};

/** response of any mutation on the table "payment_tariffs" */
export type Payment_Tariffs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Tariffs>;
};

/** input type for inserting object relation for remote table "payment_tariffs" */
export type Payment_Tariffs_Obj_Rel_Insert_Input = {
  data: Payment_Tariffs_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Payment_Tariffs_On_Conflict>;
};

/** on_conflict condition type for table "payment_tariffs" */
export type Payment_Tariffs_On_Conflict = {
  constraint: Payment_Tariffs_Constraint;
  update_columns?: Array<Payment_Tariffs_Update_Column>;
  where?: InputMaybe<Payment_Tariffs_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_tariffs". */
export type Payment_Tariffs_Order_By = {
  authorization_amount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  payment_checkouts_aggregate?: InputMaybe<Payment_Checkouts_Aggregate_Order_By>;
  payment_connectors_aggregate?: InputMaybe<Payment_Connectors_Aggregate_Order_By>;
  payment_fee?: InputMaybe<Order_By>;
  price_kwh?: InputMaybe<Order_By>;
  price_minute?: InputMaybe<Order_By>;
  price_session?: InputMaybe<Order_By>;
  stripe_price_id?: InputMaybe<Order_By>;
  tax_rate?: InputMaybe<Order_By>;
};

/** primary key columns input for table: payment_tariffs */
export type Payment_Tariffs_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "payment_tariffs" */
export type Payment_Tariffs_Select_Column =
  /** column name */
  | 'authorization_amount'
  /** column name */
  | 'currency'
  /** column name */
  | 'id'
  /** column name */
  | 'payment_fee'
  /** column name */
  | 'price_kwh'
  /** column name */
  | 'price_minute'
  /** column name */
  | 'price_session'
  /** column name */
  | 'stripe_price_id'
  /** column name */
  | 'tax_rate';

/** input type for updating data in table "payment_tariffs" */
export type Payment_Tariffs_Set_Input = {
  authorization_amount?: InputMaybe<Scalars['float8']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_fee?: InputMaybe<Scalars['float8']['input']>;
  price_kwh?: InputMaybe<Scalars['float8']['input']>;
  price_minute?: InputMaybe<Scalars['float8']['input']>;
  price_session?: InputMaybe<Scalars['float8']['input']>;
  stripe_price_id?: InputMaybe<Scalars['String']['input']>;
  tax_rate?: InputMaybe<Scalars['float8']['input']>;
};

/** aggregate stddev on columns */
export type Payment_Tariffs_Stddev_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Payment_Tariffs_Stddev_Pop_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Payment_Tariffs_Stddev_Samp_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "payment_tariffs" */
export type Payment_Tariffs_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Payment_Tariffs_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Payment_Tariffs_Stream_Cursor_Value_Input = {
  authorization_amount?: InputMaybe<Scalars['float8']['input']>;
  currency?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  payment_fee?: InputMaybe<Scalars['float8']['input']>;
  price_kwh?: InputMaybe<Scalars['float8']['input']>;
  price_minute?: InputMaybe<Scalars['float8']['input']>;
  price_session?: InputMaybe<Scalars['float8']['input']>;
  stripe_price_id?: InputMaybe<Scalars['String']['input']>;
  tax_rate?: InputMaybe<Scalars['float8']['input']>;
};

/** aggregate sum on columns */
export type Payment_Tariffs_Sum_Fields = {
  authorization_amount?: Maybe<Scalars['float8']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  payment_fee?: Maybe<Scalars['float8']['output']>;
  price_kwh?: Maybe<Scalars['float8']['output']>;
  price_minute?: Maybe<Scalars['float8']['output']>;
  price_session?: Maybe<Scalars['float8']['output']>;
  tax_rate?: Maybe<Scalars['float8']['output']>;
};

/** update columns of table "payment_tariffs" */
export type Payment_Tariffs_Update_Column =
  /** column name */
  | 'authorization_amount'
  /** column name */
  | 'currency'
  /** column name */
  | 'id'
  /** column name */
  | 'payment_fee'
  /** column name */
  | 'price_kwh'
  /** column name */
  | 'price_minute'
  /** column name */
  | 'price_session'
  /** column name */
  | 'stripe_price_id'
  /** column name */
  | 'tax_rate';

export type Payment_Tariffs_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Payment_Tariffs_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Payment_Tariffs_Set_Input>;
  /** filter the rows which have to be updated */
  where: Payment_Tariffs_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Payment_Tariffs_Var_Pop_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Payment_Tariffs_Var_Samp_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Payment_Tariffs_Variance_Fields = {
  authorization_amount?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  payment_fee?: Maybe<Scalars['Float']['output']>;
  price_kwh?: Maybe<Scalars['Float']['output']>;
  price_minute?: Maybe<Scalars['Float']['output']>;
  price_session?: Maybe<Scalars['Float']['output']>;
  tax_rate?: Maybe<Scalars['Float']['output']>;
};

export type Query_Root = {
  /** fetch data from the table: "AdditionalInfos" */
  AdditionalInfos: Array<AdditionalInfos>;
  /** fetch aggregated fields from the table: "AdditionalInfos" */
  AdditionalInfos_aggregate: AdditionalInfos_Aggregate;
  /** fetch data from the table: "AdditionalInfos" using primary key columns */
  AdditionalInfos_by_pk?: Maybe<AdditionalInfos>;
  /** fetch data from the table: "AsyncJobStatuses" */
  AsyncJobStatuses: Array<AsyncJobStatuses>;
  /** fetch aggregated fields from the table: "AsyncJobStatuses" */
  AsyncJobStatuses_aggregate: AsyncJobStatuses_Aggregate;
  /** fetch data from the table: "AsyncJobStatuses" using primary key columns */
  AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** fetch data from the table: "Authorizations" using primary key columns */
  Authorizations_by_pk?: Maybe<Authorizations>;
  /** fetch data from the table: "Boots" */
  Boots: Array<Boots>;
  /** fetch aggregated fields from the table: "Boots" */
  Boots_aggregate: Boots_Aggregate;
  /** fetch data from the table: "Boots" using primary key columns */
  Boots_by_pk?: Maybe<Boots>;
  /** An array relationship */
  BusinessDetails: Array<BusinessDetails>;
  /** An aggregate relationship */
  BusinessDetails_aggregate: BusinessDetails_Aggregate;
  /** fetch data from the table: "BusinessDetails" using primary key columns */
  BusinessDetails_by_pk?: Maybe<BusinessDetails>;
  /** fetch data from the table: "CallMessages" */
  CallMessages: Array<CallMessages>;
  /** fetch aggregated fields from the table: "CallMessages" */
  CallMessages_aggregate: CallMessages_Aggregate;
  /** fetch data from the table: "CallMessages" using primary key columns */
  CallMessages_by_pk?: Maybe<CallMessages>;
  /** fetch data from the table: "Certificates" */
  Certificates: Array<Certificates>;
  /** fetch aggregated fields from the table: "Certificates" */
  Certificates_aggregate: Certificates_Aggregate;
  /** fetch data from the table: "Certificates" using primary key columns */
  Certificates_by_pk?: Maybe<Certificates>;
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** fetch data from the table: "ChargingNeeds" using primary key columns */
  ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** fetch data from the table: "ChargingProfiles" using primary key columns */
  ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** fetch data from the table: "ChargingSchedules" using primary key columns */
  ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** fetch data from the table: "ChargingStationSecurityInfos" */
  ChargingStationSecurityInfos: Array<ChargingStationSecurityInfos>;
  /** fetch aggregated fields from the table: "ChargingStationSecurityInfos" */
  ChargingStationSecurityInfos_aggregate: ChargingStationSecurityInfos_Aggregate;
  /** fetch data from the table: "ChargingStationSecurityInfos" using primary key columns */
  ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** fetch data from the table: "ChargingStations" using primary key columns */
  ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** An array relationship */
  ClientCredentialsRoles: Array<ClientCredentialsRoles>;
  /** An aggregate relationship */
  ClientCredentialsRoles_aggregate: ClientCredentialsRoles_Aggregate;
  /** fetch data from the table: "ClientCredentialsRoles" using primary key columns */
  ClientCredentialsRoles_by_pk?: Maybe<ClientCredentialsRoles>;
  /** An array relationship */
  ClientInformations: Array<ClientInformations>;
  /** An aggregate relationship */
  ClientInformations_aggregate: ClientInformations_Aggregate;
  /** fetch data from the table: "ClientInformations" using primary key columns */
  ClientInformations_by_pk?: Maybe<ClientInformations>;
  /** An array relationship */
  ClientVersions: Array<ClientVersions>;
  /** An aggregate relationship */
  ClientVersions_aggregate: ClientVersions_Aggregate;
  /** fetch data from the table: "ClientVersions" using primary key columns */
  ClientVersions_by_pk?: Maybe<ClientVersions>;
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** fetch data from the table: "ComponentVariables" using primary key columns */
  ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** fetch data from the table: "Components" using primary key columns */
  Components_by_pk?: Maybe<Components>;
  /** fetch data from the table: "CompositeSchedules" */
  CompositeSchedules: Array<CompositeSchedules>;
  /** fetch aggregated fields from the table: "CompositeSchedules" */
  CompositeSchedules_aggregate: CompositeSchedules_Aggregate;
  /** fetch data from the table: "CompositeSchedules" using primary key columns */
  CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** fetch data from the table: "CpoTenants" */
  CpoTenants: Array<CpoTenants>;
  /** fetch aggregated fields from the table: "CpoTenants" */
  CpoTenants_aggregate: CpoTenants_Aggregate;
  /** fetch data from the table: "CpoTenants" using primary key columns */
  CpoTenants_by_pk?: Maybe<CpoTenants>;
  /** An array relationship */
  Endpoints: Array<Endpoints>;
  /** An aggregate relationship */
  Endpoints_aggregate: Endpoints_Aggregate;
  /** fetch data from the table: "Endpoints" using primary key columns */
  Endpoints_by_pk?: Maybe<Endpoints>;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** fetch data from the table: "EventData" using primary key columns */
  EventData_by_pk?: Maybe<EventData>;
  /** fetch data from the table: "Evses" */
  Evses: Array<Evses>;
  /** fetch aggregated fields from the table: "Evses" */
  Evses_aggregate: Evses_Aggregate;
  /** fetch data from the table: "Evses" using primary key columns */
  Evses_by_pk?: Maybe<Evses>;
  /** An array relationship */
  IdTokenAdditionalInfos: Array<IdTokenAdditionalInfos>;
  /** An aggregate relationship */
  IdTokenAdditionalInfos_aggregate: IdTokenAdditionalInfos_Aggregate;
  /** fetch data from the table: "IdTokenAdditionalInfos" using primary key columns */
  IdTokenAdditionalInfos_by_pk?: Maybe<IdTokenAdditionalInfos>;
  /** An array relationship */
  IdTokenInfos: Array<IdTokenInfos>;
  /** An aggregate relationship */
  IdTokenInfos_aggregate: IdTokenInfos_Aggregate;
  /** fetch data from the table: "IdTokenInfos" using primary key columns */
  IdTokenInfos_by_pk?: Maybe<IdTokenInfos>;
  /** fetch data from the table: "IdTokens" */
  IdTokens: Array<IdTokens>;
  /** fetch aggregated fields from the table: "IdTokens" */
  IdTokens_aggregate: IdTokens_Aggregate;
  /** fetch data from the table: "IdTokens" using primary key columns */
  IdTokens_by_pk?: Maybe<IdTokens>;
  /** An array relationship */
  Images: Array<Images>;
  /** An aggregate relationship */
  Images_aggregate: Images_Aggregate;
  /** fetch data from the table: "Images" using primary key columns */
  Images_by_pk?: Maybe<Images>;
  /** fetch data from the table: "Locations" */
  Locations: Array<Locations>;
  /** fetch aggregated fields from the table: "Locations" */
  Locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "Locations" using primary key columns */
  Locations_by_pk?: Maybe<Locations>;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** fetch data from the table: "MessageInfos" using primary key columns */
  MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** fetch data from the table: "MeterValues" using primary key columns */
  MeterValues_by_pk?: Maybe<MeterValues>;
  /** fetch data from the table: "OcpiConnectors" */
  OcpiConnectors: Array<OcpiConnectors>;
  /** fetch aggregated fields from the table: "OcpiConnectors" */
  OcpiConnectors_aggregate: OcpiConnectors_Aggregate;
  /** fetch data from the table: "OcpiConnectors" using primary key columns */
  OcpiConnectors_by_pk?: Maybe<OcpiConnectors>;
  /** fetch data from the table: "OcpiEvses" */
  OcpiEvses: Array<OcpiEvses>;
  /** fetch aggregated fields from the table: "OcpiEvses" */
  OcpiEvses_aggregate: OcpiEvses_Aggregate;
  /** fetch data from the table: "OcpiEvses" using primary key columns */
  OcpiEvses_by_pk?: Maybe<OcpiEvses>;
  /** fetch data from the table: "OcpiLocations" */
  OcpiLocations: Array<OcpiLocations>;
  /** fetch aggregated fields from the table: "OcpiLocations" */
  OcpiLocations_aggregate: OcpiLocations_Aggregate;
  /** fetch data from the table: "OcpiLocations" using primary key columns */
  OcpiLocations_by_pk?: Maybe<OcpiLocations>;
  /** An array relationship */
  OcpiReservations: Array<OcpiReservations>;
  /** An aggregate relationship */
  OcpiReservations_aggregate: OcpiReservations_Aggregate;
  /** fetch data from the table: "OcpiReservations" using primary key columns */
  OcpiReservations_by_pk?: Maybe<OcpiReservations>;
  /** fetch data from the table: "OcpiTariffs" */
  OcpiTariffs: Array<OcpiTariffs>;
  /** fetch aggregated fields from the table: "OcpiTariffs" */
  OcpiTariffs_aggregate: OcpiTariffs_Aggregate;
  /** fetch data from the table: "OcpiTariffs" using primary key columns */
  OcpiTariffs_by_pk?: Maybe<OcpiTariffs>;
  /** fetch data from the table: "OcpiTokens" */
  OcpiTokens: Array<OcpiTokens>;
  /** fetch aggregated fields from the table: "OcpiTokens" */
  OcpiTokens_aggregate: OcpiTokens_Aggregate;
  /** fetch data from the table: "OcpiTokens" using primary key columns */
  OcpiTokens_by_pk?: Maybe<OcpiTokens>;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** fetch data from the table: "Reservations" using primary key columns */
  Reservations_by_pk?: Maybe<Reservations>;
  /** fetch data from the table: "ResponseUrlCorrelationIds" */
  ResponseUrlCorrelationIds: Array<ResponseUrlCorrelationIds>;
  /** fetch aggregated fields from the table: "ResponseUrlCorrelationIds" */
  ResponseUrlCorrelationIds_aggregate: ResponseUrlCorrelationIds_Aggregate;
  /** fetch data from the table: "ResponseUrlCorrelationIds" using primary key columns */
  ResponseUrlCorrelationIds_by_pk?: Maybe<ResponseUrlCorrelationIds>;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  /** fetch data from the table: "SalesTariffs" using primary key columns */
  SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** fetch data from the table: "SecurityEvents" */
  SecurityEvents: Array<SecurityEvents>;
  /** fetch aggregated fields from the table: "SecurityEvents" */
  SecurityEvents_aggregate: SecurityEvents_Aggregate;
  /** fetch data from the table: "SecurityEvents" using primary key columns */
  SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** An array relationship */
  ServerCredentialsRoles: Array<ServerCredentialsRoles>;
  /** An aggregate relationship */
  ServerCredentialsRoles_aggregate: ServerCredentialsRoles_Aggregate;
  /** fetch data from the table: "ServerCredentialsRoles" using primary key columns */
  ServerCredentialsRoles_by_pk?: Maybe<ServerCredentialsRoles>;
  /** An array relationship */
  ServerVersions: Array<ServerVersions>;
  /** An aggregate relationship */
  ServerVersions_aggregate: ServerVersions_Aggregate;
  /** fetch data from the table: "ServerVersions" using primary key columns */
  ServerVersions_by_pk?: Maybe<ServerVersions>;
  /** fetch data from the table: "SessionChargingProfiles" */
  SessionChargingProfiles: Array<SessionChargingProfiles>;
  /** fetch aggregated fields from the table: "SessionChargingProfiles" */
  SessionChargingProfiles_aggregate: SessionChargingProfiles_Aggregate;
  /** fetch data from the table: "SessionChargingProfiles" using primary key columns */
  SessionChargingProfiles_by_pk?: Maybe<SessionChargingProfiles>;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** fetch data from the table: "StatusNotifications" using primary key columns */
  StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** fetch data from the table: "Subscriptions" */
  Subscriptions: Array<Subscriptions>;
  /** fetch aggregated fields from the table: "Subscriptions" */
  Subscriptions_aggregate: Subscriptions_Aggregate;
  /** fetch data from the table: "Subscriptions" using primary key columns */
  Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** fetch data from the table: "Tariffs" */
  Tariffs: Array<Tariffs>;
  /** fetch aggregated fields from the table: "Tariffs" */
  Tariffs_aggregate: Tariffs_Aggregate;
  /** fetch data from the table: "Tariffs" using primary key columns */
  Tariffs_by_pk?: Maybe<Tariffs>;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** fetch data from the table: "TransactionEvents" using primary key columns */
  TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** fetch data from the table: "Transactions" using primary key columns */
  Transactions_by_pk?: Maybe<Transactions>;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** fetch data from the table: "VariableAttributes" using primary key columns */
  VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** fetch data from the table: "VariableCharacteristics" */
  VariableCharacteristics: Array<VariableCharacteristics>;
  /** fetch aggregated fields from the table: "VariableCharacteristics" */
  VariableCharacteristics_aggregate: VariableCharacteristics_Aggregate;
  /** fetch data from the table: "VariableCharacteristics" using primary key columns */
  VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  /** fetch data from the table: "VariableMonitoringStatuses" using primary key columns */
  VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  /** fetch data from the table: "VariableMonitorings" using primary key columns */
  VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  /** fetch data from the table: "VariableStatuses" using primary key columns */
  VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** fetch data from the table: "Variables" */
  Variables: Array<Variables>;
  /** fetch aggregated fields from the table: "Variables" */
  Variables_aggregate: Variables_Aggregate;
  /** fetch data from the table: "Variables" using primary key columns */
  Variables_by_pk?: Maybe<Variables>;
  /** An array relationship */
  VersionEndpoints: Array<VersionEndpoints>;
  /** An aggregate relationship */
  VersionEndpoints_aggregate: VersionEndpoints_Aggregate;
  /** fetch data from the table: "VersionEndpoints" using primary key columns */
  VersionEndpoints_by_pk?: Maybe<VersionEndpoints>;
  /** fetch data from the table: "Versions" */
  Versions: Array<Versions>;
  /** fetch aggregated fields from the table: "Versions" */
  Versions_aggregate: Versions_Aggregate;
  /** fetch data from the table: "Versions" using primary key columns */
  Versions_by_pk?: Maybe<Versions>;
  /** An array relationship */
  payment_checkouts: Array<Payment_Checkouts>;
  /** An aggregate relationship */
  payment_checkouts_aggregate: Payment_Checkouts_Aggregate;
  /** fetch data from the table: "payment_checkouts" using primary key columns */
  payment_checkouts_by_pk?: Maybe<Payment_Checkouts>;
  /** An array relationship */
  payment_connectors: Array<Payment_Connectors>;
  /** An aggregate relationship */
  payment_connectors_aggregate: Payment_Connectors_Aggregate;
  /** fetch data from the table: "payment_connectors" using primary key columns */
  payment_connectors_by_pk?: Maybe<Payment_Connectors>;
  /** An array relationship */
  payment_evses: Array<Payment_Evses>;
  /** An aggregate relationship */
  payment_evses_aggregate: Payment_Evses_Aggregate;
  /** fetch data from the table: "payment_evses" using primary key columns */
  payment_evses_by_pk?: Maybe<Payment_Evses>;
  /** An array relationship */
  payment_locations: Array<Payment_Locations>;
  /** An aggregate relationship */
  payment_locations_aggregate: Payment_Locations_Aggregate;
  /** fetch data from the table: "payment_locations" using primary key columns */
  payment_locations_by_pk?: Maybe<Payment_Locations>;
  /** fetch data from the table: "payment_operators" */
  payment_operators: Array<Payment_Operators>;
  /** fetch aggregated fields from the table: "payment_operators" */
  payment_operators_aggregate: Payment_Operators_Aggregate;
  /** fetch data from the table: "payment_operators" using primary key columns */
  payment_operators_by_pk?: Maybe<Payment_Operators>;
  /** fetch data from the table: "payment_tariffs" */
  payment_tariffs: Array<Payment_Tariffs>;
  /** fetch aggregated fields from the table: "payment_tariffs" */
  payment_tariffs_aggregate: Payment_Tariffs_Aggregate;
  /** fetch data from the table: "payment_tariffs" using primary key columns */
  payment_tariffs_by_pk?: Maybe<Payment_Tariffs>;
};

export type Query_RootAdditionalInfosArgs = {
  distinct_on?: InputMaybe<Array<AdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AdditionalInfos_Order_By>>;
  where?: InputMaybe<AdditionalInfos_Bool_Exp>;
};

export type Query_RootAdditionalInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AdditionalInfos_Order_By>>;
  where?: InputMaybe<AdditionalInfos_Bool_Exp>;
};

export type Query_RootAdditionalInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootAsyncJobStatusesArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Query_RootAsyncJobStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Query_RootAsyncJobStatuses_By_PkArgs = {
  jobId: Scalars['String']['input'];
};

export type Query_RootAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Query_RootAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Query_RootAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootBootsArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Query_RootBoots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Query_RootBoots_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Query_RootBusinessDetailsArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

export type Query_RootBusinessDetails_AggregateArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

export type Query_RootBusinessDetails_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootCallMessagesArgs = {
  distinct_on?: InputMaybe<Array<CallMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CallMessages_Order_By>>;
  where?: InputMaybe<CallMessages_Bool_Exp>;
};

export type Query_RootCallMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CallMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CallMessages_Order_By>>;
  where?: InputMaybe<CallMessages_Bool_Exp>;
};

export type Query_RootCallMessages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootCertificatesArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Query_RootCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Query_RootCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Query_RootChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Query_RootChargingNeeds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Query_RootChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Query_RootChargingProfiles_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Query_RootChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Query_RootChargingSchedules_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootChargingStationSecurityInfosArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Query_RootChargingStationSecurityInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Query_RootChargingStationSecurityInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Query_RootChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Query_RootChargingStations_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Query_RootClientCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

export type Query_RootClientCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

export type Query_RootClientCredentialsRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootClientInformationsArgs = {
  distinct_on?: InputMaybe<Array<ClientInformations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInformations_Order_By>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

export type Query_RootClientInformations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInformations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInformations_Order_By>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

export type Query_RootClientInformations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootClientVersionsArgs = {
  distinct_on?: InputMaybe<Array<ClientVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientVersions_Order_By>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

export type Query_RootClientVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientVersions_Order_By>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

export type Query_RootClientVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Query_RootComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Query_RootComponentVariables_By_PkArgs = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

export type Query_RootComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Query_RootComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Query_RootComponents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootCompositeSchedulesArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Query_RootCompositeSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Query_RootCompositeSchedules_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootCpoTenantsArgs = {
  distinct_on?: InputMaybe<Array<CpoTenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CpoTenants_Order_By>>;
  where?: InputMaybe<CpoTenants_Bool_Exp>;
};

export type Query_RootCpoTenants_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CpoTenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CpoTenants_Order_By>>;
  where?: InputMaybe<CpoTenants_Bool_Exp>;
};

export type Query_RootCpoTenants_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootEndpointsArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

export type Query_RootEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

export type Query_RootEndpoints_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Query_RootEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Query_RootEventData_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootEvsesArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Query_RootEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Query_RootEvses_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootIdTokenAdditionalInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

export type Query_RootIdTokenAdditionalInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

export type Query_RootIdTokenAdditionalInfos_By_PkArgs = {
  additionalInfoId: Scalars['Int']['input'];
  idTokenId: Scalars['Int']['input'];
};

export type Query_RootIdTokenInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenInfos_Order_By>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

export type Query_RootIdTokenInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenInfos_Order_By>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

export type Query_RootIdTokenInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootIdTokensArgs = {
  distinct_on?: InputMaybe<Array<IdTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokens_Order_By>>;
  where?: InputMaybe<IdTokens_Bool_Exp>;
};

export type Query_RootIdTokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokens_Order_By>>;
  where?: InputMaybe<IdTokens_Bool_Exp>;
};

export type Query_RootIdTokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Query_RootImages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Query_RootImages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Query_RootLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Query_RootLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Query_RootMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Query_RootMessageInfos_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Query_RootMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Query_RootMeterValues_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcpiConnectorsArgs = {
  distinct_on?: InputMaybe<Array<OcpiConnectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiConnectors_Order_By>>;
  where?: InputMaybe<OcpiConnectors_Bool_Exp>;
};

export type Query_RootOcpiConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiConnectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiConnectors_Order_By>>;
  where?: InputMaybe<OcpiConnectors_Bool_Exp>;
};

export type Query_RootOcpiConnectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcpiEvsesArgs = {
  distinct_on?: InputMaybe<Array<OcpiEvses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiEvses_Order_By>>;
  where?: InputMaybe<OcpiEvses_Bool_Exp>;
};

export type Query_RootOcpiEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiEvses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiEvses_Order_By>>;
  where?: InputMaybe<OcpiEvses_Bool_Exp>;
};

export type Query_RootOcpiEvses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcpiLocationsArgs = {
  distinct_on?: InputMaybe<Array<OcpiLocations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiLocations_Order_By>>;
  where?: InputMaybe<OcpiLocations_Bool_Exp>;
};

export type Query_RootOcpiLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiLocations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiLocations_Order_By>>;
  where?: InputMaybe<OcpiLocations_Bool_Exp>;
};

export type Query_RootOcpiLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcpiReservationsArgs = {
  distinct_on?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiReservations_Order_By>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

export type Query_RootOcpiReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiReservations_Order_By>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

export type Query_RootOcpiReservations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcpiTariffsArgs = {
  distinct_on?: InputMaybe<Array<OcpiTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTariffs_Order_By>>;
  where?: InputMaybe<OcpiTariffs_Bool_Exp>;
};

export type Query_RootOcpiTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTariffs_Order_By>>;
  where?: InputMaybe<OcpiTariffs_Bool_Exp>;
};

export type Query_RootOcpiTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootOcpiTokensArgs = {
  distinct_on?: InputMaybe<Array<OcpiTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTokens_Order_By>>;
  where?: InputMaybe<OcpiTokens_Bool_Exp>;
};

export type Query_RootOcpiTokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTokens_Order_By>>;
  where?: InputMaybe<OcpiTokens_Bool_Exp>;
};

export type Query_RootOcpiTokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Query_RootReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Query_RootReservations_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootResponseUrlCorrelationIdsArgs = {
  distinct_on?: InputMaybe<Array<ResponseUrlCorrelationIds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ResponseUrlCorrelationIds_Order_By>>;
  where?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
};

export type Query_RootResponseUrlCorrelationIds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ResponseUrlCorrelationIds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ResponseUrlCorrelationIds_Order_By>>;
  where?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
};

export type Query_RootResponseUrlCorrelationIds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Query_RootSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Query_RootSalesTariffs_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootSecurityEventsArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Query_RootSecurityEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Query_RootSecurityEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootServerCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCredentialsRoles_Order_By>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

export type Query_RootServerCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCredentialsRoles_Order_By>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

export type Query_RootServerCredentialsRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootServerVersionsArgs = {
  distinct_on?: InputMaybe<Array<ServerVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerVersions_Order_By>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

export type Query_RootServerVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerVersions_Order_By>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

export type Query_RootServerVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootSessionChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<SessionChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SessionChargingProfiles_Order_By>>;
  where?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
};

export type Query_RootSessionChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SessionChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SessionChargingProfiles_Order_By>>;
  where?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
};

export type Query_RootSessionChargingProfiles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Query_RootStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Query_RootStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootSubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Query_RootSubscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Query_RootSubscriptions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTariffsArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Query_RootTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Query_RootTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Query_RootTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Query_RootTransactionEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Query_RootTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Query_RootTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Query_RootVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Query_RootVariableAttributes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableCharacteristicsArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Query_RootVariableCharacteristics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Query_RootVariableCharacteristics_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Query_RootVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Query_RootVariableMonitoringStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Query_RootVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Query_RootVariableMonitorings_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Query_RootVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Query_RootVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Query_RootVariableStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVariablesArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Query_RootVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Query_RootVariables_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVersionEndpointsArgs = {
  distinct_on?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VersionEndpoints_Order_By>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

export type Query_RootVersionEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VersionEndpoints_Order_By>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

export type Query_RootVersionEndpoints_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootVersionsArgs = {
  distinct_on?: InputMaybe<Array<Versions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versions_Order_By>>;
  where?: InputMaybe<Versions_Bool_Exp>;
};

export type Query_RootVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versions_Order_By>>;
  where?: InputMaybe<Versions_Bool_Exp>;
};

export type Query_RootVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPayment_CheckoutsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

export type Query_RootPayment_Checkouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

export type Query_RootPayment_Checkouts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPayment_ConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

export type Query_RootPayment_Connectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

export type Query_RootPayment_Connectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPayment_EvsesArgs = {
  distinct_on?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Evses_Order_By>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

export type Query_RootPayment_Evses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Evses_Order_By>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

export type Query_RootPayment_Evses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPayment_LocationsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Locations_Order_By>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

export type Query_RootPayment_Locations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Locations_Order_By>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

export type Query_RootPayment_Locations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPayment_OperatorsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Operators_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Operators_Order_By>>;
  where?: InputMaybe<Payment_Operators_Bool_Exp>;
};

export type Query_RootPayment_Operators_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Operators_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Operators_Order_By>>;
  where?: InputMaybe<Payment_Operators_Bool_Exp>;
};

export type Query_RootPayment_Operators_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Query_RootPayment_TariffsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Tariffs_Order_By>>;
  where?: InputMaybe<Payment_Tariffs_Bool_Exp>;
};

export type Query_RootPayment_Tariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Tariffs_Order_By>>;
  where?: InputMaybe<Payment_Tariffs_Bool_Exp>;
};

export type Query_RootPayment_Tariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type St_D_Within_Geography_Input = {
  distance: Scalars['Float']['input'];
  from: Scalars['geography']['input'];
  use_spheroid?: InputMaybe<Scalars['Boolean']['input']>;
};

export type St_D_Within_Input = {
  distance: Scalars['Float']['input'];
  from: Scalars['geometry']['input'];
};

export type Subscription_Root = {
  /** fetch data from the table: "AdditionalInfos" */
  AdditionalInfos: Array<AdditionalInfos>;
  /** fetch aggregated fields from the table: "AdditionalInfos" */
  AdditionalInfos_aggregate: AdditionalInfos_Aggregate;
  /** fetch data from the table: "AdditionalInfos" using primary key columns */
  AdditionalInfos_by_pk?: Maybe<AdditionalInfos>;
  /** fetch data from the table in a streaming manner: "AdditionalInfos" */
  AdditionalInfos_stream: Array<AdditionalInfos>;
  /** fetch data from the table: "AsyncJobStatuses" */
  AsyncJobStatuses: Array<AsyncJobStatuses>;
  /** fetch aggregated fields from the table: "AsyncJobStatuses" */
  AsyncJobStatuses_aggregate: AsyncJobStatuses_Aggregate;
  /** fetch data from the table: "AsyncJobStatuses" using primary key columns */
  AsyncJobStatuses_by_pk?: Maybe<AsyncJobStatuses>;
  /** fetch data from the table in a streaming manner: "AsyncJobStatuses" */
  AsyncJobStatuses_stream: Array<AsyncJobStatuses>;
  /** An array relationship */
  Authorizations: Array<Authorizations>;
  /** An aggregate relationship */
  Authorizations_aggregate: Authorizations_Aggregate;
  /** fetch data from the table: "Authorizations" using primary key columns */
  Authorizations_by_pk?: Maybe<Authorizations>;
  /** fetch data from the table in a streaming manner: "Authorizations" */
  Authorizations_stream: Array<Authorizations>;
  /** fetch data from the table: "Boots" */
  Boots: Array<Boots>;
  /** fetch aggregated fields from the table: "Boots" */
  Boots_aggregate: Boots_Aggregate;
  /** fetch data from the table: "Boots" using primary key columns */
  Boots_by_pk?: Maybe<Boots>;
  /** fetch data from the table in a streaming manner: "Boots" */
  Boots_stream: Array<Boots>;
  /** An array relationship */
  BusinessDetails: Array<BusinessDetails>;
  /** An aggregate relationship */
  BusinessDetails_aggregate: BusinessDetails_Aggregate;
  /** fetch data from the table: "BusinessDetails" using primary key columns */
  BusinessDetails_by_pk?: Maybe<BusinessDetails>;
  /** fetch data from the table in a streaming manner: "BusinessDetails" */
  BusinessDetails_stream: Array<BusinessDetails>;
  /** fetch data from the table: "CallMessages" */
  CallMessages: Array<CallMessages>;
  /** fetch aggregated fields from the table: "CallMessages" */
  CallMessages_aggregate: CallMessages_Aggregate;
  /** fetch data from the table: "CallMessages" using primary key columns */
  CallMessages_by_pk?: Maybe<CallMessages>;
  /** fetch data from the table in a streaming manner: "CallMessages" */
  CallMessages_stream: Array<CallMessages>;
  /** fetch data from the table: "Certificates" */
  Certificates: Array<Certificates>;
  /** fetch aggregated fields from the table: "Certificates" */
  Certificates_aggregate: Certificates_Aggregate;
  /** fetch data from the table: "Certificates" using primary key columns */
  Certificates_by_pk?: Maybe<Certificates>;
  /** fetch data from the table in a streaming manner: "Certificates" */
  Certificates_stream: Array<Certificates>;
  /** An array relationship */
  ChargingNeeds: Array<ChargingNeeds>;
  /** An aggregate relationship */
  ChargingNeeds_aggregate: ChargingNeeds_Aggregate;
  /** fetch data from the table: "ChargingNeeds" using primary key columns */
  ChargingNeeds_by_pk?: Maybe<ChargingNeeds>;
  /** fetch data from the table in a streaming manner: "ChargingNeeds" */
  ChargingNeeds_stream: Array<ChargingNeeds>;
  /** An array relationship */
  ChargingProfiles: Array<ChargingProfiles>;
  /** An aggregate relationship */
  ChargingProfiles_aggregate: ChargingProfiles_Aggregate;
  /** fetch data from the table: "ChargingProfiles" using primary key columns */
  ChargingProfiles_by_pk?: Maybe<ChargingProfiles>;
  /** fetch data from the table in a streaming manner: "ChargingProfiles" */
  ChargingProfiles_stream: Array<ChargingProfiles>;
  /** An array relationship */
  ChargingSchedules: Array<ChargingSchedules>;
  /** An aggregate relationship */
  ChargingSchedules_aggregate: ChargingSchedules_Aggregate;
  /** fetch data from the table: "ChargingSchedules" using primary key columns */
  ChargingSchedules_by_pk?: Maybe<ChargingSchedules>;
  /** fetch data from the table in a streaming manner: "ChargingSchedules" */
  ChargingSchedules_stream: Array<ChargingSchedules>;
  /** fetch data from the table: "ChargingStationSecurityInfos" */
  ChargingStationSecurityInfos: Array<ChargingStationSecurityInfos>;
  /** fetch aggregated fields from the table: "ChargingStationSecurityInfos" */
  ChargingStationSecurityInfos_aggregate: ChargingStationSecurityInfos_Aggregate;
  /** fetch data from the table: "ChargingStationSecurityInfos" using primary key columns */
  ChargingStationSecurityInfos_by_pk?: Maybe<ChargingStationSecurityInfos>;
  /** fetch data from the table in a streaming manner: "ChargingStationSecurityInfos" */
  ChargingStationSecurityInfos_stream: Array<ChargingStationSecurityInfos>;
  /** An array relationship */
  ChargingStations: Array<ChargingStations>;
  /** An aggregate relationship */
  ChargingStations_aggregate: ChargingStations_Aggregate;
  /** fetch data from the table: "ChargingStations" using primary key columns */
  ChargingStations_by_pk?: Maybe<ChargingStations>;
  /** fetch data from the table in a streaming manner: "ChargingStations" */
  ChargingStations_stream: Array<ChargingStations>;
  /** An array relationship */
  ClientCredentialsRoles: Array<ClientCredentialsRoles>;
  /** An aggregate relationship */
  ClientCredentialsRoles_aggregate: ClientCredentialsRoles_Aggregate;
  /** fetch data from the table: "ClientCredentialsRoles" using primary key columns */
  ClientCredentialsRoles_by_pk?: Maybe<ClientCredentialsRoles>;
  /** fetch data from the table in a streaming manner: "ClientCredentialsRoles" */
  ClientCredentialsRoles_stream: Array<ClientCredentialsRoles>;
  /** An array relationship */
  ClientInformations: Array<ClientInformations>;
  /** An aggregate relationship */
  ClientInformations_aggregate: ClientInformations_Aggregate;
  /** fetch data from the table: "ClientInformations" using primary key columns */
  ClientInformations_by_pk?: Maybe<ClientInformations>;
  /** fetch data from the table in a streaming manner: "ClientInformations" */
  ClientInformations_stream: Array<ClientInformations>;
  /** An array relationship */
  ClientVersions: Array<ClientVersions>;
  /** An aggregate relationship */
  ClientVersions_aggregate: ClientVersions_Aggregate;
  /** fetch data from the table: "ClientVersions" using primary key columns */
  ClientVersions_by_pk?: Maybe<ClientVersions>;
  /** fetch data from the table in a streaming manner: "ClientVersions" */
  ClientVersions_stream: Array<ClientVersions>;
  /** An array relationship */
  ComponentVariables: Array<ComponentVariables>;
  /** An aggregate relationship */
  ComponentVariables_aggregate: ComponentVariables_Aggregate;
  /** fetch data from the table: "ComponentVariables" using primary key columns */
  ComponentVariables_by_pk?: Maybe<ComponentVariables>;
  /** fetch data from the table in a streaming manner: "ComponentVariables" */
  ComponentVariables_stream: Array<ComponentVariables>;
  /** An array relationship */
  Components: Array<Components>;
  /** An aggregate relationship */
  Components_aggregate: Components_Aggregate;
  /** fetch data from the table: "Components" using primary key columns */
  Components_by_pk?: Maybe<Components>;
  /** fetch data from the table in a streaming manner: "Components" */
  Components_stream: Array<Components>;
  /** fetch data from the table: "CompositeSchedules" */
  CompositeSchedules: Array<CompositeSchedules>;
  /** fetch aggregated fields from the table: "CompositeSchedules" */
  CompositeSchedules_aggregate: CompositeSchedules_Aggregate;
  /** fetch data from the table: "CompositeSchedules" using primary key columns */
  CompositeSchedules_by_pk?: Maybe<CompositeSchedules>;
  /** fetch data from the table in a streaming manner: "CompositeSchedules" */
  CompositeSchedules_stream: Array<CompositeSchedules>;
  /** fetch data from the table: "CpoTenants" */
  CpoTenants: Array<CpoTenants>;
  /** fetch aggregated fields from the table: "CpoTenants" */
  CpoTenants_aggregate: CpoTenants_Aggregate;
  /** fetch data from the table: "CpoTenants" using primary key columns */
  CpoTenants_by_pk?: Maybe<CpoTenants>;
  /** fetch data from the table in a streaming manner: "CpoTenants" */
  CpoTenants_stream: Array<CpoTenants>;
  /** An array relationship */
  Endpoints: Array<Endpoints>;
  /** An aggregate relationship */
  Endpoints_aggregate: Endpoints_Aggregate;
  /** fetch data from the table: "Endpoints" using primary key columns */
  Endpoints_by_pk?: Maybe<Endpoints>;
  /** fetch data from the table in a streaming manner: "Endpoints" */
  Endpoints_stream: Array<Endpoints>;
  /** An array relationship */
  EventData: Array<EventData>;
  /** An aggregate relationship */
  EventData_aggregate: EventData_Aggregate;
  /** fetch data from the table: "EventData" using primary key columns */
  EventData_by_pk?: Maybe<EventData>;
  /** fetch data from the table in a streaming manner: "EventData" */
  EventData_stream: Array<EventData>;
  /** fetch data from the table: "Evses" */
  Evses: Array<Evses>;
  /** fetch aggregated fields from the table: "Evses" */
  Evses_aggregate: Evses_Aggregate;
  /** fetch data from the table: "Evses" using primary key columns */
  Evses_by_pk?: Maybe<Evses>;
  /** fetch data from the table in a streaming manner: "Evses" */
  Evses_stream: Array<Evses>;
  /** An array relationship */
  IdTokenAdditionalInfos: Array<IdTokenAdditionalInfos>;
  /** An aggregate relationship */
  IdTokenAdditionalInfos_aggregate: IdTokenAdditionalInfos_Aggregate;
  /** fetch data from the table: "IdTokenAdditionalInfos" using primary key columns */
  IdTokenAdditionalInfos_by_pk?: Maybe<IdTokenAdditionalInfos>;
  /** fetch data from the table in a streaming manner: "IdTokenAdditionalInfos" */
  IdTokenAdditionalInfos_stream: Array<IdTokenAdditionalInfos>;
  /** An array relationship */
  IdTokenInfos: Array<IdTokenInfos>;
  /** An aggregate relationship */
  IdTokenInfos_aggregate: IdTokenInfos_Aggregate;
  /** fetch data from the table: "IdTokenInfos" using primary key columns */
  IdTokenInfos_by_pk?: Maybe<IdTokenInfos>;
  /** fetch data from the table in a streaming manner: "IdTokenInfos" */
  IdTokenInfos_stream: Array<IdTokenInfos>;
  /** fetch data from the table: "IdTokens" */
  IdTokens: Array<IdTokens>;
  /** fetch aggregated fields from the table: "IdTokens" */
  IdTokens_aggregate: IdTokens_Aggregate;
  /** fetch data from the table: "IdTokens" using primary key columns */
  IdTokens_by_pk?: Maybe<IdTokens>;
  /** fetch data from the table in a streaming manner: "IdTokens" */
  IdTokens_stream: Array<IdTokens>;
  /** An array relationship */
  Images: Array<Images>;
  /** An aggregate relationship */
  Images_aggregate: Images_Aggregate;
  /** fetch data from the table: "Images" using primary key columns */
  Images_by_pk?: Maybe<Images>;
  /** fetch data from the table in a streaming manner: "Images" */
  Images_stream: Array<Images>;
  /** fetch data from the table: "Locations" */
  Locations: Array<Locations>;
  /** fetch aggregated fields from the table: "Locations" */
  Locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "Locations" using primary key columns */
  Locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table in a streaming manner: "Locations" */
  Locations_stream: Array<Locations>;
  /** An array relationship */
  MessageInfos: Array<MessageInfos>;
  /** An aggregate relationship */
  MessageInfos_aggregate: MessageInfos_Aggregate;
  /** fetch data from the table: "MessageInfos" using primary key columns */
  MessageInfos_by_pk?: Maybe<MessageInfos>;
  /** fetch data from the table in a streaming manner: "MessageInfos" */
  MessageInfos_stream: Array<MessageInfos>;
  /** An array relationship */
  MeterValues: Array<MeterValues>;
  /** An aggregate relationship */
  MeterValues_aggregate: MeterValues_Aggregate;
  /** fetch data from the table: "MeterValues" using primary key columns */
  MeterValues_by_pk?: Maybe<MeterValues>;
  /** fetch data from the table in a streaming manner: "MeterValues" */
  MeterValues_stream: Array<MeterValues>;
  /** fetch data from the table: "OcpiConnectors" */
  OcpiConnectors: Array<OcpiConnectors>;
  /** fetch aggregated fields from the table: "OcpiConnectors" */
  OcpiConnectors_aggregate: OcpiConnectors_Aggregate;
  /** fetch data from the table: "OcpiConnectors" using primary key columns */
  OcpiConnectors_by_pk?: Maybe<OcpiConnectors>;
  /** fetch data from the table in a streaming manner: "OcpiConnectors" */
  OcpiConnectors_stream: Array<OcpiConnectors>;
  /** fetch data from the table: "OcpiEvses" */
  OcpiEvses: Array<OcpiEvses>;
  /** fetch aggregated fields from the table: "OcpiEvses" */
  OcpiEvses_aggregate: OcpiEvses_Aggregate;
  /** fetch data from the table: "OcpiEvses" using primary key columns */
  OcpiEvses_by_pk?: Maybe<OcpiEvses>;
  /** fetch data from the table in a streaming manner: "OcpiEvses" */
  OcpiEvses_stream: Array<OcpiEvses>;
  /** fetch data from the table: "OcpiLocations" */
  OcpiLocations: Array<OcpiLocations>;
  /** fetch aggregated fields from the table: "OcpiLocations" */
  OcpiLocations_aggregate: OcpiLocations_Aggregate;
  /** fetch data from the table: "OcpiLocations" using primary key columns */
  OcpiLocations_by_pk?: Maybe<OcpiLocations>;
  /** fetch data from the table in a streaming manner: "OcpiLocations" */
  OcpiLocations_stream: Array<OcpiLocations>;
  /** An array relationship */
  OcpiReservations: Array<OcpiReservations>;
  /** An aggregate relationship */
  OcpiReservations_aggregate: OcpiReservations_Aggregate;
  /** fetch data from the table: "OcpiReservations" using primary key columns */
  OcpiReservations_by_pk?: Maybe<OcpiReservations>;
  /** fetch data from the table in a streaming manner: "OcpiReservations" */
  OcpiReservations_stream: Array<OcpiReservations>;
  /** fetch data from the table: "OcpiTariffs" */
  OcpiTariffs: Array<OcpiTariffs>;
  /** fetch aggregated fields from the table: "OcpiTariffs" */
  OcpiTariffs_aggregate: OcpiTariffs_Aggregate;
  /** fetch data from the table: "OcpiTariffs" using primary key columns */
  OcpiTariffs_by_pk?: Maybe<OcpiTariffs>;
  /** fetch data from the table in a streaming manner: "OcpiTariffs" */
  OcpiTariffs_stream: Array<OcpiTariffs>;
  /** fetch data from the table: "OcpiTokens" */
  OcpiTokens: Array<OcpiTokens>;
  /** fetch aggregated fields from the table: "OcpiTokens" */
  OcpiTokens_aggregate: OcpiTokens_Aggregate;
  /** fetch data from the table: "OcpiTokens" using primary key columns */
  OcpiTokens_by_pk?: Maybe<OcpiTokens>;
  /** fetch data from the table in a streaming manner: "OcpiTokens" */
  OcpiTokens_stream: Array<OcpiTokens>;
  /** An array relationship */
  Reservations: Array<Reservations>;
  /** An aggregate relationship */
  Reservations_aggregate: Reservations_Aggregate;
  /** fetch data from the table: "Reservations" using primary key columns */
  Reservations_by_pk?: Maybe<Reservations>;
  /** fetch data from the table in a streaming manner: "Reservations" */
  Reservations_stream: Array<Reservations>;
  /** fetch data from the table: "ResponseUrlCorrelationIds" */
  ResponseUrlCorrelationIds: Array<ResponseUrlCorrelationIds>;
  /** fetch aggregated fields from the table: "ResponseUrlCorrelationIds" */
  ResponseUrlCorrelationIds_aggregate: ResponseUrlCorrelationIds_Aggregate;
  /** fetch data from the table: "ResponseUrlCorrelationIds" using primary key columns */
  ResponseUrlCorrelationIds_by_pk?: Maybe<ResponseUrlCorrelationIds>;
  /** fetch data from the table in a streaming manner: "ResponseUrlCorrelationIds" */
  ResponseUrlCorrelationIds_stream: Array<ResponseUrlCorrelationIds>;
  /** An array relationship */
  SalesTariffs: Array<SalesTariffs>;
  /** An aggregate relationship */
  SalesTariffs_aggregate: SalesTariffs_Aggregate;
  /** fetch data from the table: "SalesTariffs" using primary key columns */
  SalesTariffs_by_pk?: Maybe<SalesTariffs>;
  /** fetch data from the table in a streaming manner: "SalesTariffs" */
  SalesTariffs_stream: Array<SalesTariffs>;
  /** fetch data from the table: "SecurityEvents" */
  SecurityEvents: Array<SecurityEvents>;
  /** fetch aggregated fields from the table: "SecurityEvents" */
  SecurityEvents_aggregate: SecurityEvents_Aggregate;
  /** fetch data from the table: "SecurityEvents" using primary key columns */
  SecurityEvents_by_pk?: Maybe<SecurityEvents>;
  /** fetch data from the table in a streaming manner: "SecurityEvents" */
  SecurityEvents_stream: Array<SecurityEvents>;
  /** An array relationship */
  ServerCredentialsRoles: Array<ServerCredentialsRoles>;
  /** An aggregate relationship */
  ServerCredentialsRoles_aggregate: ServerCredentialsRoles_Aggregate;
  /** fetch data from the table: "ServerCredentialsRoles" using primary key columns */
  ServerCredentialsRoles_by_pk?: Maybe<ServerCredentialsRoles>;
  /** fetch data from the table in a streaming manner: "ServerCredentialsRoles" */
  ServerCredentialsRoles_stream: Array<ServerCredentialsRoles>;
  /** An array relationship */
  ServerVersions: Array<ServerVersions>;
  /** An aggregate relationship */
  ServerVersions_aggregate: ServerVersions_Aggregate;
  /** fetch data from the table: "ServerVersions" using primary key columns */
  ServerVersions_by_pk?: Maybe<ServerVersions>;
  /** fetch data from the table in a streaming manner: "ServerVersions" */
  ServerVersions_stream: Array<ServerVersions>;
  /** fetch data from the table: "SessionChargingProfiles" */
  SessionChargingProfiles: Array<SessionChargingProfiles>;
  /** fetch aggregated fields from the table: "SessionChargingProfiles" */
  SessionChargingProfiles_aggregate: SessionChargingProfiles_Aggregate;
  /** fetch data from the table: "SessionChargingProfiles" using primary key columns */
  SessionChargingProfiles_by_pk?: Maybe<SessionChargingProfiles>;
  /** fetch data from the table in a streaming manner: "SessionChargingProfiles" */
  SessionChargingProfiles_stream: Array<SessionChargingProfiles>;
  /** An array relationship */
  StatusNotifications: Array<StatusNotifications>;
  /** An aggregate relationship */
  StatusNotifications_aggregate: StatusNotifications_Aggregate;
  /** fetch data from the table: "StatusNotifications" using primary key columns */
  StatusNotifications_by_pk?: Maybe<StatusNotifications>;
  /** fetch data from the table in a streaming manner: "StatusNotifications" */
  StatusNotifications_stream: Array<StatusNotifications>;
  /** fetch data from the table: "Subscriptions" */
  Subscriptions: Array<Subscriptions>;
  /** fetch aggregated fields from the table: "Subscriptions" */
  Subscriptions_aggregate: Subscriptions_Aggregate;
  /** fetch data from the table: "Subscriptions" using primary key columns */
  Subscriptions_by_pk?: Maybe<Subscriptions>;
  /** fetch data from the table in a streaming manner: "Subscriptions" */
  Subscriptions_stream: Array<Subscriptions>;
  /** fetch data from the table: "Tariffs" */
  Tariffs: Array<Tariffs>;
  /** fetch aggregated fields from the table: "Tariffs" */
  Tariffs_aggregate: Tariffs_Aggregate;
  /** fetch data from the table: "Tariffs" using primary key columns */
  Tariffs_by_pk?: Maybe<Tariffs>;
  /** fetch data from the table in a streaming manner: "Tariffs" */
  Tariffs_stream: Array<Tariffs>;
  /** An array relationship */
  TransactionEvents: Array<TransactionEvents>;
  /** An aggregate relationship */
  TransactionEvents_aggregate: TransactionEvents_Aggregate;
  /** fetch data from the table: "TransactionEvents" using primary key columns */
  TransactionEvents_by_pk?: Maybe<TransactionEvents>;
  /** fetch data from the table in a streaming manner: "TransactionEvents" */
  TransactionEvents_stream: Array<TransactionEvents>;
  /** An array relationship */
  Transactions: Array<Transactions>;
  /** An aggregate relationship */
  Transactions_aggregate: Transactions_Aggregate;
  /** fetch data from the table: "Transactions" using primary key columns */
  Transactions_by_pk?: Maybe<Transactions>;
  /** fetch data from the table in a streaming manner: "Transactions" */
  Transactions_stream: Array<Transactions>;
  /** An array relationship */
  VariableAttributes: Array<VariableAttributes>;
  /** An aggregate relationship */
  VariableAttributes_aggregate: VariableAttributes_Aggregate;
  /** fetch data from the table: "VariableAttributes" using primary key columns */
  VariableAttributes_by_pk?: Maybe<VariableAttributes>;
  /** fetch data from the table in a streaming manner: "VariableAttributes" */
  VariableAttributes_stream: Array<VariableAttributes>;
  /** fetch data from the table: "VariableCharacteristics" */
  VariableCharacteristics: Array<VariableCharacteristics>;
  /** fetch aggregated fields from the table: "VariableCharacteristics" */
  VariableCharacteristics_aggregate: VariableCharacteristics_Aggregate;
  /** fetch data from the table: "VariableCharacteristics" using primary key columns */
  VariableCharacteristics_by_pk?: Maybe<VariableCharacteristics>;
  /** fetch data from the table in a streaming manner: "VariableCharacteristics" */
  VariableCharacteristics_stream: Array<VariableCharacteristics>;
  /** An array relationship */
  VariableMonitoringStatuses: Array<VariableMonitoringStatuses>;
  /** An aggregate relationship */
  VariableMonitoringStatuses_aggregate: VariableMonitoringStatuses_Aggregate;
  /** fetch data from the table: "VariableMonitoringStatuses" using primary key columns */
  VariableMonitoringStatuses_by_pk?: Maybe<VariableMonitoringStatuses>;
  /** fetch data from the table in a streaming manner: "VariableMonitoringStatuses" */
  VariableMonitoringStatuses_stream: Array<VariableMonitoringStatuses>;
  /** An array relationship */
  VariableMonitorings: Array<VariableMonitorings>;
  /** An aggregate relationship */
  VariableMonitorings_aggregate: VariableMonitorings_Aggregate;
  /** fetch data from the table: "VariableMonitorings" using primary key columns */
  VariableMonitorings_by_pk?: Maybe<VariableMonitorings>;
  /** fetch data from the table in a streaming manner: "VariableMonitorings" */
  VariableMonitorings_stream: Array<VariableMonitorings>;
  /** An array relationship */
  VariableStatuses: Array<VariableStatuses>;
  /** An aggregate relationship */
  VariableStatuses_aggregate: VariableStatuses_Aggregate;
  /** fetch data from the table: "VariableStatuses" using primary key columns */
  VariableStatuses_by_pk?: Maybe<VariableStatuses>;
  /** fetch data from the table in a streaming manner: "VariableStatuses" */
  VariableStatuses_stream: Array<VariableStatuses>;
  /** fetch data from the table: "Variables" */
  Variables: Array<Variables>;
  /** fetch aggregated fields from the table: "Variables" */
  Variables_aggregate: Variables_Aggregate;
  /** fetch data from the table: "Variables" using primary key columns */
  Variables_by_pk?: Maybe<Variables>;
  /** fetch data from the table in a streaming manner: "Variables" */
  Variables_stream: Array<Variables>;
  /** An array relationship */
  VersionEndpoints: Array<VersionEndpoints>;
  /** An aggregate relationship */
  VersionEndpoints_aggregate: VersionEndpoints_Aggregate;
  /** fetch data from the table: "VersionEndpoints" using primary key columns */
  VersionEndpoints_by_pk?: Maybe<VersionEndpoints>;
  /** fetch data from the table in a streaming manner: "VersionEndpoints" */
  VersionEndpoints_stream: Array<VersionEndpoints>;
  /** fetch data from the table: "Versions" */
  Versions: Array<Versions>;
  /** fetch aggregated fields from the table: "Versions" */
  Versions_aggregate: Versions_Aggregate;
  /** fetch data from the table: "Versions" using primary key columns */
  Versions_by_pk?: Maybe<Versions>;
  /** fetch data from the table in a streaming manner: "Versions" */
  Versions_stream: Array<Versions>;
  /** An array relationship */
  payment_checkouts: Array<Payment_Checkouts>;
  /** An aggregate relationship */
  payment_checkouts_aggregate: Payment_Checkouts_Aggregate;
  /** fetch data from the table: "payment_checkouts" using primary key columns */
  payment_checkouts_by_pk?: Maybe<Payment_Checkouts>;
  /** fetch data from the table in a streaming manner: "payment_checkouts" */
  payment_checkouts_stream: Array<Payment_Checkouts>;
  /** An array relationship */
  payment_connectors: Array<Payment_Connectors>;
  /** An aggregate relationship */
  payment_connectors_aggregate: Payment_Connectors_Aggregate;
  /** fetch data from the table: "payment_connectors" using primary key columns */
  payment_connectors_by_pk?: Maybe<Payment_Connectors>;
  /** fetch data from the table in a streaming manner: "payment_connectors" */
  payment_connectors_stream: Array<Payment_Connectors>;
  /** An array relationship */
  payment_evses: Array<Payment_Evses>;
  /** An aggregate relationship */
  payment_evses_aggregate: Payment_Evses_Aggregate;
  /** fetch data from the table: "payment_evses" using primary key columns */
  payment_evses_by_pk?: Maybe<Payment_Evses>;
  /** fetch data from the table in a streaming manner: "payment_evses" */
  payment_evses_stream: Array<Payment_Evses>;
  /** An array relationship */
  payment_locations: Array<Payment_Locations>;
  /** An aggregate relationship */
  payment_locations_aggregate: Payment_Locations_Aggregate;
  /** fetch data from the table: "payment_locations" using primary key columns */
  payment_locations_by_pk?: Maybe<Payment_Locations>;
  /** fetch data from the table in a streaming manner: "payment_locations" */
  payment_locations_stream: Array<Payment_Locations>;
  /** fetch data from the table: "payment_operators" */
  payment_operators: Array<Payment_Operators>;
  /** fetch aggregated fields from the table: "payment_operators" */
  payment_operators_aggregate: Payment_Operators_Aggregate;
  /** fetch data from the table: "payment_operators" using primary key columns */
  payment_operators_by_pk?: Maybe<Payment_Operators>;
  /** fetch data from the table in a streaming manner: "payment_operators" */
  payment_operators_stream: Array<Payment_Operators>;
  /** fetch data from the table: "payment_tariffs" */
  payment_tariffs: Array<Payment_Tariffs>;
  /** fetch aggregated fields from the table: "payment_tariffs" */
  payment_tariffs_aggregate: Payment_Tariffs_Aggregate;
  /** fetch data from the table: "payment_tariffs" using primary key columns */
  payment_tariffs_by_pk?: Maybe<Payment_Tariffs>;
  /** fetch data from the table in a streaming manner: "payment_tariffs" */
  payment_tariffs_stream: Array<Payment_Tariffs>;
};

export type Subscription_RootAdditionalInfosArgs = {
  distinct_on?: InputMaybe<Array<AdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AdditionalInfos_Order_By>>;
  where?: InputMaybe<AdditionalInfos_Bool_Exp>;
};

export type Subscription_RootAdditionalInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AdditionalInfos_Order_By>>;
  where?: InputMaybe<AdditionalInfos_Bool_Exp>;
};

export type Subscription_RootAdditionalInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootAdditionalInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AdditionalInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<AdditionalInfos_Bool_Exp>;
};

export type Subscription_RootAsyncJobStatusesArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Subscription_RootAsyncJobStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AsyncJobStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AsyncJobStatuses_Order_By>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Subscription_RootAsyncJobStatuses_By_PkArgs = {
  jobId: Scalars['String']['input'];
};

export type Subscription_RootAsyncJobStatuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AsyncJobStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<AsyncJobStatuses_Bool_Exp>;
};

export type Subscription_RootAuthorizationsArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Subscription_RootAuthorizations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Authorizations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Authorizations_Order_By>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Subscription_RootAuthorizations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootAuthorizations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Authorizations_Stream_Cursor_Input>>;
  where?: InputMaybe<Authorizations_Bool_Exp>;
};

export type Subscription_RootBootsArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Subscription_RootBoots_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Boots_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Boots_Order_By>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Subscription_RootBoots_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Subscription_RootBoots_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Boots_Stream_Cursor_Input>>;
  where?: InputMaybe<Boots_Bool_Exp>;
};

export type Subscription_RootBusinessDetailsArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

export type Subscription_RootBusinessDetails_AggregateArgs = {
  distinct_on?: InputMaybe<Array<BusinessDetails_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<BusinessDetails_Order_By>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

export type Subscription_RootBusinessDetails_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootBusinessDetails_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<BusinessDetails_Stream_Cursor_Input>>;
  where?: InputMaybe<BusinessDetails_Bool_Exp>;
};

export type Subscription_RootCallMessagesArgs = {
  distinct_on?: InputMaybe<Array<CallMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CallMessages_Order_By>>;
  where?: InputMaybe<CallMessages_Bool_Exp>;
};

export type Subscription_RootCallMessages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CallMessages_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CallMessages_Order_By>>;
  where?: InputMaybe<CallMessages_Bool_Exp>;
};

export type Subscription_RootCallMessages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCallMessages_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CallMessages_Stream_Cursor_Input>>;
  where?: InputMaybe<CallMessages_Bool_Exp>;
};

export type Subscription_RootCertificatesArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Subscription_RootCertificates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Certificates_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Certificates_Order_By>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Subscription_RootCertificates_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCertificates_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Certificates_Stream_Cursor_Input>>;
  where?: InputMaybe<Certificates_Bool_Exp>;
};

export type Subscription_RootChargingNeedsArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Subscription_RootChargingNeeds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingNeeds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingNeeds_Order_By>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Subscription_RootChargingNeeds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootChargingNeeds_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingNeeds_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingNeeds_Bool_Exp>;
};

export type Subscription_RootChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Subscription_RootChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingProfiles_Order_By>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Subscription_RootChargingProfiles_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootChargingProfiles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingProfiles_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingProfiles_Bool_Exp>;
};

export type Subscription_RootChargingSchedulesArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Subscription_RootChargingSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingSchedules_Order_By>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Subscription_RootChargingSchedules_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootChargingSchedules_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingSchedules_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingSchedules_Bool_Exp>;
};

export type Subscription_RootChargingStationSecurityInfosArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Subscription_RootChargingStationSecurityInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStationSecurityInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStationSecurityInfos_Order_By>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Subscription_RootChargingStationSecurityInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootChargingStationSecurityInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingStationSecurityInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingStationSecurityInfos_Bool_Exp>;
};

export type Subscription_RootChargingStationsArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Subscription_RootChargingStations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ChargingStations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ChargingStations_Order_By>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Subscription_RootChargingStations_By_PkArgs = {
  id: Scalars['String']['input'];
};

export type Subscription_RootChargingStations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ChargingStations_Stream_Cursor_Input>>;
  where?: InputMaybe<ChargingStations_Bool_Exp>;
};

export type Subscription_RootClientCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

export type Subscription_RootClientCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientCredentialsRoles_Order_By>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

export type Subscription_RootClientCredentialsRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootClientCredentialsRoles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientCredentialsRoles_Stream_Cursor_Input>>;
  where?: InputMaybe<ClientCredentialsRoles_Bool_Exp>;
};

export type Subscription_RootClientInformationsArgs = {
  distinct_on?: InputMaybe<Array<ClientInformations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInformations_Order_By>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

export type Subscription_RootClientInformations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInformations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInformations_Order_By>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

export type Subscription_RootClientInformations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootClientInformations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientInformations_Stream_Cursor_Input>>;
  where?: InputMaybe<ClientInformations_Bool_Exp>;
};

export type Subscription_RootClientVersionsArgs = {
  distinct_on?: InputMaybe<Array<ClientVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientVersions_Order_By>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

export type Subscription_RootClientVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientVersions_Order_By>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

export type Subscription_RootClientVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootClientVersions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientVersions_Stream_Cursor_Input>>;
  where?: InputMaybe<ClientVersions_Bool_Exp>;
};

export type Subscription_RootComponentVariablesArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Subscription_RootComponentVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ComponentVariables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ComponentVariables_Order_By>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Subscription_RootComponentVariables_By_PkArgs = {
  componentId: Scalars['Int']['input'];
  variableId: Scalars['Int']['input'];
};

export type Subscription_RootComponentVariables_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ComponentVariables_Stream_Cursor_Input>>;
  where?: InputMaybe<ComponentVariables_Bool_Exp>;
};

export type Subscription_RootComponentsArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Subscription_RootComponents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Components_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Components_Order_By>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Subscription_RootComponents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootComponents_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Components_Stream_Cursor_Input>>;
  where?: InputMaybe<Components_Bool_Exp>;
};

export type Subscription_RootCompositeSchedulesArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Subscription_RootCompositeSchedules_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompositeSchedules_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompositeSchedules_Order_By>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Subscription_RootCompositeSchedules_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCompositeSchedules_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CompositeSchedules_Stream_Cursor_Input>>;
  where?: InputMaybe<CompositeSchedules_Bool_Exp>;
};

export type Subscription_RootCpoTenantsArgs = {
  distinct_on?: InputMaybe<Array<CpoTenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CpoTenants_Order_By>>;
  where?: InputMaybe<CpoTenants_Bool_Exp>;
};

export type Subscription_RootCpoTenants_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CpoTenants_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CpoTenants_Order_By>>;
  where?: InputMaybe<CpoTenants_Bool_Exp>;
};

export type Subscription_RootCpoTenants_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootCpoTenants_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CpoTenants_Stream_Cursor_Input>>;
  where?: InputMaybe<CpoTenants_Bool_Exp>;
};

export type Subscription_RootEndpointsArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

export type Subscription_RootEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Endpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Endpoints_Order_By>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

export type Subscription_RootEndpoints_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootEndpoints_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Endpoints_Stream_Cursor_Input>>;
  where?: InputMaybe<Endpoints_Bool_Exp>;
};

export type Subscription_RootEventDataArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Subscription_RootEventData_AggregateArgs = {
  distinct_on?: InputMaybe<Array<EventData_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<EventData_Order_By>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Subscription_RootEventData_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootEventData_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<EventData_Stream_Cursor_Input>>;
  where?: InputMaybe<EventData_Bool_Exp>;
};

export type Subscription_RootEvsesArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Subscription_RootEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evses_Order_By>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Subscription_RootEvses_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootEvses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Evses_Stream_Cursor_Input>>;
  where?: InputMaybe<Evses_Bool_Exp>;
};

export type Subscription_RootIdTokenAdditionalInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

export type Subscription_RootIdTokenAdditionalInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenAdditionalInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenAdditionalInfos_Order_By>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

export type Subscription_RootIdTokenAdditionalInfos_By_PkArgs = {
  additionalInfoId: Scalars['Int']['input'];
  idTokenId: Scalars['Int']['input'];
};

export type Subscription_RootIdTokenAdditionalInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IdTokenAdditionalInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<IdTokenAdditionalInfos_Bool_Exp>;
};

export type Subscription_RootIdTokenInfosArgs = {
  distinct_on?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenInfos_Order_By>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

export type Subscription_RootIdTokenInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokenInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokenInfos_Order_By>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

export type Subscription_RootIdTokenInfos_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootIdTokenInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IdTokenInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<IdTokenInfos_Bool_Exp>;
};

export type Subscription_RootIdTokensArgs = {
  distinct_on?: InputMaybe<Array<IdTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokens_Order_By>>;
  where?: InputMaybe<IdTokens_Bool_Exp>;
};

export type Subscription_RootIdTokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<IdTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<IdTokens_Order_By>>;
  where?: InputMaybe<IdTokens_Bool_Exp>;
};

export type Subscription_RootIdTokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootIdTokens_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<IdTokens_Stream_Cursor_Input>>;
  where?: InputMaybe<IdTokens_Bool_Exp>;
};

export type Subscription_RootImagesArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Subscription_RootImages_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Images_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Images_Order_By>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Subscription_RootImages_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootImages_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Images_Stream_Cursor_Input>>;
  where?: InputMaybe<Images_Bool_Exp>;
};

export type Subscription_RootLocationsArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Subscription_RootLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Locations_Order_By>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Subscription_RootLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootLocations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Locations_Stream_Cursor_Input>>;
  where?: InputMaybe<Locations_Bool_Exp>;
};

export type Subscription_RootMessageInfosArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Subscription_RootMessageInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MessageInfos_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MessageInfos_Order_By>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Subscription_RootMessageInfos_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootMessageInfos_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MessageInfos_Stream_Cursor_Input>>;
  where?: InputMaybe<MessageInfos_Bool_Exp>;
};

export type Subscription_RootMeterValuesArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Subscription_RootMeterValues_AggregateArgs = {
  distinct_on?: InputMaybe<Array<MeterValues_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<MeterValues_Order_By>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Subscription_RootMeterValues_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootMeterValues_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<MeterValues_Stream_Cursor_Input>>;
  where?: InputMaybe<MeterValues_Bool_Exp>;
};

export type Subscription_RootOcpiConnectorsArgs = {
  distinct_on?: InputMaybe<Array<OcpiConnectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiConnectors_Order_By>>;
  where?: InputMaybe<OcpiConnectors_Bool_Exp>;
};

export type Subscription_RootOcpiConnectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiConnectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiConnectors_Order_By>>;
  where?: InputMaybe<OcpiConnectors_Bool_Exp>;
};

export type Subscription_RootOcpiConnectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcpiConnectors_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcpiConnectors_Stream_Cursor_Input>>;
  where?: InputMaybe<OcpiConnectors_Bool_Exp>;
};

export type Subscription_RootOcpiEvsesArgs = {
  distinct_on?: InputMaybe<Array<OcpiEvses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiEvses_Order_By>>;
  where?: InputMaybe<OcpiEvses_Bool_Exp>;
};

export type Subscription_RootOcpiEvses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiEvses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiEvses_Order_By>>;
  where?: InputMaybe<OcpiEvses_Bool_Exp>;
};

export type Subscription_RootOcpiEvses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcpiEvses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcpiEvses_Stream_Cursor_Input>>;
  where?: InputMaybe<OcpiEvses_Bool_Exp>;
};

export type Subscription_RootOcpiLocationsArgs = {
  distinct_on?: InputMaybe<Array<OcpiLocations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiLocations_Order_By>>;
  where?: InputMaybe<OcpiLocations_Bool_Exp>;
};

export type Subscription_RootOcpiLocations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiLocations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiLocations_Order_By>>;
  where?: InputMaybe<OcpiLocations_Bool_Exp>;
};

export type Subscription_RootOcpiLocations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcpiLocations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcpiLocations_Stream_Cursor_Input>>;
  where?: InputMaybe<OcpiLocations_Bool_Exp>;
};

export type Subscription_RootOcpiReservationsArgs = {
  distinct_on?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiReservations_Order_By>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

export type Subscription_RootOcpiReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiReservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiReservations_Order_By>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

export type Subscription_RootOcpiReservations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcpiReservations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcpiReservations_Stream_Cursor_Input>>;
  where?: InputMaybe<OcpiReservations_Bool_Exp>;
};

export type Subscription_RootOcpiTariffsArgs = {
  distinct_on?: InputMaybe<Array<OcpiTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTariffs_Order_By>>;
  where?: InputMaybe<OcpiTariffs_Bool_Exp>;
};

export type Subscription_RootOcpiTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTariffs_Order_By>>;
  where?: InputMaybe<OcpiTariffs_Bool_Exp>;
};

export type Subscription_RootOcpiTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcpiTariffs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcpiTariffs_Stream_Cursor_Input>>;
  where?: InputMaybe<OcpiTariffs_Bool_Exp>;
};

export type Subscription_RootOcpiTokensArgs = {
  distinct_on?: InputMaybe<Array<OcpiTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTokens_Order_By>>;
  where?: InputMaybe<OcpiTokens_Bool_Exp>;
};

export type Subscription_RootOcpiTokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OcpiTokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OcpiTokens_Order_By>>;
  where?: InputMaybe<OcpiTokens_Bool_Exp>;
};

export type Subscription_RootOcpiTokens_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootOcpiTokens_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OcpiTokens_Stream_Cursor_Input>>;
  where?: InputMaybe<OcpiTokens_Bool_Exp>;
};

export type Subscription_RootReservationsArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Subscription_RootReservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reservations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reservations_Order_By>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Subscription_RootReservations_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootReservations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reservations_Stream_Cursor_Input>>;
  where?: InputMaybe<Reservations_Bool_Exp>;
};

export type Subscription_RootResponseUrlCorrelationIdsArgs = {
  distinct_on?: InputMaybe<Array<ResponseUrlCorrelationIds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ResponseUrlCorrelationIds_Order_By>>;
  where?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
};

export type Subscription_RootResponseUrlCorrelationIds_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ResponseUrlCorrelationIds_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ResponseUrlCorrelationIds_Order_By>>;
  where?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
};

export type Subscription_RootResponseUrlCorrelationIds_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootResponseUrlCorrelationIds_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ResponseUrlCorrelationIds_Stream_Cursor_Input>>;
  where?: InputMaybe<ResponseUrlCorrelationIds_Bool_Exp>;
};

export type Subscription_RootSalesTariffsArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Subscription_RootSalesTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SalesTariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SalesTariffs_Order_By>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Subscription_RootSalesTariffs_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootSalesTariffs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SalesTariffs_Stream_Cursor_Input>>;
  where?: InputMaybe<SalesTariffs_Bool_Exp>;
};

export type Subscription_RootSecurityEventsArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Subscription_RootSecurityEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SecurityEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SecurityEvents_Order_By>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Subscription_RootSecurityEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSecurityEvents_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SecurityEvents_Stream_Cursor_Input>>;
  where?: InputMaybe<SecurityEvents_Bool_Exp>;
};

export type Subscription_RootServerCredentialsRolesArgs = {
  distinct_on?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCredentialsRoles_Order_By>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

export type Subscription_RootServerCredentialsRoles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCredentialsRoles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCredentialsRoles_Order_By>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

export type Subscription_RootServerCredentialsRoles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootServerCredentialsRoles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerCredentialsRoles_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerCredentialsRoles_Bool_Exp>;
};

export type Subscription_RootServerVersionsArgs = {
  distinct_on?: InputMaybe<Array<ServerVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerVersions_Order_By>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

export type Subscription_RootServerVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerVersions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerVersions_Order_By>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

export type Subscription_RootServerVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootServerVersions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerVersions_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerVersions_Bool_Exp>;
};

export type Subscription_RootSessionChargingProfilesArgs = {
  distinct_on?: InputMaybe<Array<SessionChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SessionChargingProfiles_Order_By>>;
  where?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
};

export type Subscription_RootSessionChargingProfiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<SessionChargingProfiles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<SessionChargingProfiles_Order_By>>;
  where?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
};

export type Subscription_RootSessionChargingProfiles_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSessionChargingProfiles_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<SessionChargingProfiles_Stream_Cursor_Input>>;
  where?: InputMaybe<SessionChargingProfiles_Bool_Exp>;
};

export type Subscription_RootStatusNotificationsArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Subscription_RootStatusNotifications_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StatusNotifications_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StatusNotifications_Order_By>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Subscription_RootStatusNotifications_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootStatusNotifications_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<StatusNotifications_Stream_Cursor_Input>>;
  where?: InputMaybe<StatusNotifications_Bool_Exp>;
};

export type Subscription_RootSubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Subscription_RootSubscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Subscriptions_Order_By>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Subscription_RootSubscriptions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootSubscriptions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Subscriptions_Stream_Cursor_Input>>;
  where?: InputMaybe<Subscriptions_Bool_Exp>;
};

export type Subscription_RootTariffsArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Subscription_RootTariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tariffs_Order_By>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Subscription_RootTariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTariffs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tariffs_Stream_Cursor_Input>>;
  where?: InputMaybe<Tariffs_Bool_Exp>;
};

export type Subscription_RootTransactionEventsArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Subscription_RootTransactionEvents_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TransactionEvents_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TransactionEvents_Order_By>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Subscription_RootTransactionEvents_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTransactionEvents_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TransactionEvents_Stream_Cursor_Input>>;
  where?: InputMaybe<TransactionEvents_Bool_Exp>;
};

export type Subscription_RootTransactionsArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Subscription_RootTransactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Transactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Transactions_Order_By>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Subscription_RootTransactions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootTransactions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Transactions_Stream_Cursor_Input>>;
  where?: InputMaybe<Transactions_Bool_Exp>;
};

export type Subscription_RootVariableAttributesArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Subscription_RootVariableAttributes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableAttributes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableAttributes_Order_By>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Subscription_RootVariableAttributes_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableAttributes_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableAttributes_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableAttributes_Bool_Exp>;
};

export type Subscription_RootVariableCharacteristicsArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Subscription_RootVariableCharacteristics_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableCharacteristics_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableCharacteristics_Order_By>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Subscription_RootVariableCharacteristics_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableCharacteristics_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableCharacteristics_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableCharacteristics_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitoringStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitoringStatuses_Order_By>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableMonitoringStatuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableMonitoringStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableMonitoringStatuses_Bool_Exp>;
};

export type Subscription_RootVariableMonitoringsArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Subscription_RootVariableMonitorings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableMonitorings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableMonitorings_Order_By>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Subscription_RootVariableMonitorings_By_PkArgs = {
  databaseId: Scalars['Int']['input'];
};

export type Subscription_RootVariableMonitorings_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableMonitorings_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableMonitorings_Bool_Exp>;
};

export type Subscription_RootVariableStatusesArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Subscription_RootVariableStatuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VariableStatuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VariableStatuses_Order_By>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Subscription_RootVariableStatuses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariableStatuses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VariableStatuses_Stream_Cursor_Input>>;
  where?: InputMaybe<VariableStatuses_Bool_Exp>;
};

export type Subscription_RootVariablesArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Subscription_RootVariables_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Variables_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Variables_Order_By>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Subscription_RootVariables_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVariables_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Variables_Stream_Cursor_Input>>;
  where?: InputMaybe<Variables_Bool_Exp>;
};

export type Subscription_RootVersionEndpointsArgs = {
  distinct_on?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VersionEndpoints_Order_By>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

export type Subscription_RootVersionEndpoints_AggregateArgs = {
  distinct_on?: InputMaybe<Array<VersionEndpoints_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<VersionEndpoints_Order_By>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

export type Subscription_RootVersionEndpoints_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVersionEndpoints_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<VersionEndpoints_Stream_Cursor_Input>>;
  where?: InputMaybe<VersionEndpoints_Bool_Exp>;
};

export type Subscription_RootVersionsArgs = {
  distinct_on?: InputMaybe<Array<Versions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versions_Order_By>>;
  where?: InputMaybe<Versions_Bool_Exp>;
};

export type Subscription_RootVersions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Versions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Versions_Order_By>>;
  where?: InputMaybe<Versions_Bool_Exp>;
};

export type Subscription_RootVersions_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootVersions_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Versions_Stream_Cursor_Input>>;
  where?: InputMaybe<Versions_Bool_Exp>;
};

export type Subscription_RootPayment_CheckoutsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

export type Subscription_RootPayment_Checkouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Checkouts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Checkouts_Order_By>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

export type Subscription_RootPayment_Checkouts_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPayment_Checkouts_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Payment_Checkouts_Stream_Cursor_Input>>;
  where?: InputMaybe<Payment_Checkouts_Bool_Exp>;
};

export type Subscription_RootPayment_ConnectorsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

export type Subscription_RootPayment_Connectors_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Connectors_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Connectors_Order_By>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

export type Subscription_RootPayment_Connectors_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPayment_Connectors_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Payment_Connectors_Stream_Cursor_Input>>;
  where?: InputMaybe<Payment_Connectors_Bool_Exp>;
};

export type Subscription_RootPayment_EvsesArgs = {
  distinct_on?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Evses_Order_By>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

export type Subscription_RootPayment_Evses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Evses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Evses_Order_By>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

export type Subscription_RootPayment_Evses_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPayment_Evses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Payment_Evses_Stream_Cursor_Input>>;
  where?: InputMaybe<Payment_Evses_Bool_Exp>;
};

export type Subscription_RootPayment_LocationsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Locations_Order_By>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

export type Subscription_RootPayment_Locations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Locations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Locations_Order_By>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

export type Subscription_RootPayment_Locations_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPayment_Locations_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Payment_Locations_Stream_Cursor_Input>>;
  where?: InputMaybe<Payment_Locations_Bool_Exp>;
};

export type Subscription_RootPayment_OperatorsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Operators_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Operators_Order_By>>;
  where?: InputMaybe<Payment_Operators_Bool_Exp>;
};

export type Subscription_RootPayment_Operators_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Operators_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Operators_Order_By>>;
  where?: InputMaybe<Payment_Operators_Bool_Exp>;
};

export type Subscription_RootPayment_Operators_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPayment_Operators_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Payment_Operators_Stream_Cursor_Input>>;
  where?: InputMaybe<Payment_Operators_Bool_Exp>;
};

export type Subscription_RootPayment_TariffsArgs = {
  distinct_on?: InputMaybe<Array<Payment_Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Tariffs_Order_By>>;
  where?: InputMaybe<Payment_Tariffs_Bool_Exp>;
};

export type Subscription_RootPayment_Tariffs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Payment_Tariffs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Payment_Tariffs_Order_By>>;
  where?: InputMaybe<Payment_Tariffs_Bool_Exp>;
};

export type Subscription_RootPayment_Tariffs_By_PkArgs = {
  id: Scalars['Int']['input'];
};

export type Subscription_RootPayment_Tariffs_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Payment_Tariffs_Stream_Cursor_Input>>;
  where?: InputMaybe<Payment_Tariffs_Bool_Exp>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};
